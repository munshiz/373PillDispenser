
LCD_TOUCH_out.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001bc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003e48  080001c0  080001c0  000011c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000005f4  08004008  08004008  00005008  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080045fc  080045fc  00006060  2**0
                  CONTENTS
  4 .ARM          00000008  080045fc  080045fc  000055fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004604  08004604  00006060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004604  08004604  00005604  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004608  08004608  00005608  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  20000000  0800460c  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000024c  20000060  0800466c  00006060  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200002ac  0800466c  000062ac  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00006060  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008f5c  00000000  00000000  00006090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001a5f  00000000  00000000  0000efec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000918  00000000  00000000  00010a50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000006d0  00000000  00000000  00011368  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00029bb8  00000000  00000000  00011a38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000a70b  00000000  00000000  0003b5f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000f9ed8  00000000  00000000  00045cfb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0013fbd3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000028cc  00000000  00000000  0013fc18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000008e  00000000  00000000  001424e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	@ (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	@ (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000060 	.word	0x20000060
 80001dc:	00000000 	.word	0x00000000
 80001e0:	08003ff0 	.word	0x08003ff0

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	@ (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	@ (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	@ (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000064 	.word	0x20000064
 80001fc:	08003ff0 	.word	0x08003ff0

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <ILI9488_SendCommand>:
  //while((SPI1->SR & SPI_SR_TXE) == RESET);
  SPI1->DR = data;
}
//1. Write Command to LCD
void ILI9488_SendCommand(uint8_t com)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b084      	sub	sp, #16
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	4603      	mov	r3, r0
 80002a8:	71fb      	strb	r3, [r7, #7]
	//*(__IO uint8_t *)(0x60000000) = com;
	uint8_t tmpCmd = com;
 80002aa:	79fb      	ldrb	r3, [r7, #7]
 80002ac:	73fb      	strb	r3, [r7, #15]
	//Set DC HIGH for COMMAND mode
	//HAL_GPIO_WritePin(tftDC_GPIO, tftDC_PIN, GPIO_PIN_RESET);
	DC_COMMAND();
 80002ae:	2200      	movs	r2, #0
 80002b0:	2140      	movs	r1, #64	@ 0x40
 80002b2:	480c      	ldr	r0, [pc, #48]	@ (80002e4 <ILI9488_SendCommand+0x44>)
 80002b4:	f001 fce2 	bl	8001c7c <HAL_GPIO_WritePin>
	//Put CS LOW
	//HAL_GPIO_WritePin(tftCS_GPIO, tftCS_PIN, GPIO_PIN_RESET);
	CS_A();
 80002b8:	2200      	movs	r2, #0
 80002ba:	2101      	movs	r1, #1
 80002bc:	4809      	ldr	r0, [pc, #36]	@ (80002e4 <ILI9488_SendCommand+0x44>)
 80002be:	f001 fcdd 	bl	8001c7c <HAL_GPIO_WritePin>
	//Write byte using SPI
	HAL_SPI_Transmit(&hspi2, &tmpCmd, 1, 1);
 80002c2:	f107 010f 	add.w	r1, r7, #15
 80002c6:	2301      	movs	r3, #1
 80002c8:	2201      	movs	r2, #1
 80002ca:	4807      	ldr	r0, [pc, #28]	@ (80002e8 <ILI9488_SendCommand+0x48>)
 80002cc:	f002 fcf5 	bl	8002cba <HAL_SPI_Transmit>
	//SendByte(tmpCmd);
	//WaitLastData();
	CS_D();
 80002d0:	2201      	movs	r2, #1
 80002d2:	2101      	movs	r1, #1
 80002d4:	4803      	ldr	r0, [pc, #12]	@ (80002e4 <ILI9488_SendCommand+0x44>)
 80002d6:	f001 fcd1 	bl	8001c7c <HAL_GPIO_WritePin>
	//Bring CS HIGH
	//HAL_GPIO_WritePin(tftCS_GPIO, tftCS_PIN, GPIO_PIN_SET);
}
 80002da:	bf00      	nop
 80002dc:	3710      	adds	r7, #16
 80002de:	46bd      	mov	sp, r7
 80002e0:	bd80      	pop	{r7, pc}
 80002e2:	bf00      	nop
 80002e4:	48000c00 	.word	0x48000c00
 80002e8:	20000094 	.word	0x20000094

080002ec <ILI9488_SendData>:

//2. Write data to LCD
void ILI9488_SendData(uint8_t data)
{
 80002ec:	b580      	push	{r7, lr}
 80002ee:	b084      	sub	sp, #16
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	4603      	mov	r3, r0
 80002f4:	71fb      	strb	r3, [r7, #7]
	//*(__IO uint8_t *)(0x60040000) = data;
	uint8_t tmpCmd = data;
 80002f6:	79fb      	ldrb	r3, [r7, #7]
 80002f8:	73fb      	strb	r3, [r7, #15]
	//Set DC LOW for DATA mode
	//HAL_GPIO_WritePin(tftDC_GPIO, tftDC_PIN, GPIO_PIN_SET);
	DC_DATA();
 80002fa:	2201      	movs	r2, #1
 80002fc:	2140      	movs	r1, #64	@ 0x40
 80002fe:	480c      	ldr	r0, [pc, #48]	@ (8000330 <ILI9488_SendData+0x44>)
 8000300:	f001 fcbc 	bl	8001c7c <HAL_GPIO_WritePin>
	//Put CS LOW
	//HAL_GPIO_WritePin(tftCS_GPIO, tftCS_PIN, GPIO_PIN_RESET);
	CS_A();
 8000304:	2200      	movs	r2, #0
 8000306:	2101      	movs	r1, #1
 8000308:	4809      	ldr	r0, [pc, #36]	@ (8000330 <ILI9488_SendData+0x44>)
 800030a:	f001 fcb7 	bl	8001c7c <HAL_GPIO_WritePin>
	//Write byte using SPI
	HAL_SPI_Transmit(&hspi2, &tmpCmd, 1, 1);
 800030e:	f107 010f 	add.w	r1, r7, #15
 8000312:	2301      	movs	r3, #1
 8000314:	2201      	movs	r2, #1
 8000316:	4807      	ldr	r0, [pc, #28]	@ (8000334 <ILI9488_SendData+0x48>)
 8000318:	f002 fccf 	bl	8002cba <HAL_SPI_Transmit>
	//SendByte(tmpCmd);
	//WaitLastData();
	CS_D();
 800031c:	2201      	movs	r2, #1
 800031e:	2101      	movs	r1, #1
 8000320:	4803      	ldr	r0, [pc, #12]	@ (8000330 <ILI9488_SendData+0x44>)
 8000322:	f001 fcab 	bl	8001c7c <HAL_GPIO_WritePin>

	//Bring CS HIGH
	//HAL_GPIO_WritePin(tftCS_GPIO, tftCS_PIN, GPIO_PIN_SET);
}
 8000326:	bf00      	nop
 8000328:	3710      	adds	r7, #16
 800032a:	46bd      	mov	sp, r7
 800032c:	bd80      	pop	{r7, pc}
 800032e:	bf00      	nop
 8000330:	48000c00 	.word	0x48000c00
 8000334:	20000094 	.word	0x20000094

08000338 <ILI9488_SendData_Multi>:
//2.2 Write multiple/DMA
void ILI9488_SendData_Multi(uint8_t *buff, size_t buff_size){
 8000338:	b580      	push	{r7, lr}
 800033a:	b084      	sub	sp, #16
 800033c:	af00      	add	r7, sp, #0
 800033e:	6078      	str	r0, [r7, #4]
 8000340:	6039      	str	r1, [r7, #0]
	DC_DATA();
 8000342:	2201      	movs	r2, #1
 8000344:	2140      	movs	r1, #64	@ 0x40
 8000346:	4815      	ldr	r0, [pc, #84]	@ (800039c <ILI9488_SendData_Multi+0x64>)
 8000348:	f001 fc98 	bl	8001c7c <HAL_GPIO_WritePin>
	    buff++;
	  }

	  WaitLastData();
	  CS_D();*/
	CS_A();
 800034c:	2200      	movs	r2, #0
 800034e:	2101      	movs	r1, #1
 8000350:	4812      	ldr	r0, [pc, #72]	@ (800039c <ILI9488_SendData_Multi+0x64>)
 8000352:	f001 fc93 	bl	8001c7c <HAL_GPIO_WritePin>
	while (buff_size > 0){
 8000356:	e015      	b.n	8000384 <ILI9488_SendData_Multi+0x4c>
		uint16_t chunk_size = buff_size > 32768 ? 32768 : buff_size;
 8000358:	683b      	ldr	r3, [r7, #0]
 800035a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800035e:	bf28      	it	cs
 8000360:	f44f 4300 	movcs.w	r3, #32768	@ 0x8000
 8000364:	81fb      	strh	r3, [r7, #14]
		HAL_SPI_Transmit(&hspi2, buff, chunk_size, HAL_MAX_DELAY);
 8000366:	89fa      	ldrh	r2, [r7, #14]
 8000368:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800036c:	6879      	ldr	r1, [r7, #4]
 800036e:	480c      	ldr	r0, [pc, #48]	@ (80003a0 <ILI9488_SendData_Multi+0x68>)
 8000370:	f002 fca3 	bl	8002cba <HAL_SPI_Transmit>
		buff += chunk_size;
 8000374:	89fb      	ldrh	r3, [r7, #14]
 8000376:	687a      	ldr	r2, [r7, #4]
 8000378:	4413      	add	r3, r2
 800037a:	607b      	str	r3, [r7, #4]
		buff_size -= chunk_size;
 800037c:	89fb      	ldrh	r3, [r7, #14]
 800037e:	683a      	ldr	r2, [r7, #0]
 8000380:	1ad3      	subs	r3, r2, r3
 8000382:	603b      	str	r3, [r7, #0]
	while (buff_size > 0){
 8000384:	683b      	ldr	r3, [r7, #0]
 8000386:	2b00      	cmp	r3, #0
 8000388:	d1e6      	bne.n	8000358 <ILI9488_SendData_Multi+0x20>
	}
	CS_D();
 800038a:	2201      	movs	r2, #1
 800038c:	2101      	movs	r1, #1
 800038e:	4803      	ldr	r0, [pc, #12]	@ (800039c <ILI9488_SendData_Multi+0x64>)
 8000390:	f001 fc74 	bl	8001c7c <HAL_GPIO_WritePin>
}
 8000394:	bf00      	nop
 8000396:	3710      	adds	r7, #16
 8000398:	46bd      	mov	sp, r7
 800039a:	bd80      	pop	{r7, pc}
 800039c:	48000c00 	.word	0x48000c00
 80003a0:	20000094 	.word	0x20000094

080003a4 <ILI9488_Init>:
	//HAL_GPIO_WritePin(tftCS_GPIO, tftCS_PIN, GPIO_PIN_SET);
}*/

//void ILI9488_Init(SPI_HandleTypeDef *spiLcdHandle, GPIO_TypeDef *csPORT, uint16_t csPIN, GPIO_TypeDef *dcPORT, uint16_t dcPIN, GPIO_TypeDef *resetPORT, uint16_t resetPIN)
void ILI9488_Init()
{
 80003a4:	b580      	push	{r7, lr}
 80003a6:	af00      	add	r7, sp, #0
	 RST_A();
	 HAL_Delay(10);
	 RST_D();
	 //HAL_GPIO_WritePin(tftRESET_GPIO, tftRESET_PIN, GPIO_PIN_SET);  //Turn LCD ON*/
	//SPI1->CR1 |= SPI_CR1_SPE;
	CS_D();
 80003a8:	2201      	movs	r2, #1
 80003aa:	2101      	movs	r1, #1
 80003ac:	486c      	ldr	r0, [pc, #432]	@ (8000560 <ILI9488_Init+0x1bc>)
 80003ae:	f001 fc65 	bl	8001c7c <HAL_GPIO_WritePin>
	RST_A();
 80003b2:	2200      	movs	r2, #0
 80003b4:	2180      	movs	r1, #128	@ 0x80
 80003b6:	486a      	ldr	r0, [pc, #424]	@ (8000560 <ILI9488_Init+0x1bc>)
 80003b8:	f001 fc60 	bl	8001c7c <HAL_GPIO_WritePin>
		 HAL_Delay(10);
 80003bc:	200a      	movs	r0, #10
 80003be:	f001 f9c1 	bl	8001744 <HAL_Delay>
		 RST_D();
 80003c2:	2201      	movs	r2, #1
 80003c4:	2180      	movs	r1, #128	@ 0x80
 80003c6:	4866      	ldr	r0, [pc, #408]	@ (8000560 <ILI9488_Init+0x1bc>)
 80003c8:	f001 fc58 	bl	8001c7c <HAL_GPIO_WritePin>
	 width=ILI9488_TFTWIDTH;
 80003cc:	4b65      	ldr	r3, [pc, #404]	@ (8000564 <ILI9488_Init+0x1c0>)
 80003ce:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 80003d2:	801a      	strh	r2, [r3, #0]
	 height=ILI9488_TFTHEIGHT;
 80003d4:	4b64      	ldr	r3, [pc, #400]	@ (8000568 <ILI9488_Init+0x1c4>)
 80003d6:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80003da:	801a      	strh	r2, [r3, #0]
	 //CS_A();
	 ILI9488_SendCommand(0xE0);
 80003dc:	20e0      	movs	r0, #224	@ 0xe0
 80003de:	f7ff ff5f 	bl	80002a0 <ILI9488_SendCommand>
	 ILI9488_SendData(0x00);
 80003e2:	2000      	movs	r0, #0
 80003e4:	f7ff ff82 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x03);
 80003e8:	2003      	movs	r0, #3
 80003ea:	f7ff ff7f 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x09);
 80003ee:	2009      	movs	r0, #9
 80003f0:	f7ff ff7c 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x08);
 80003f4:	2008      	movs	r0, #8
 80003f6:	f7ff ff79 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x16);
 80003fa:	2016      	movs	r0, #22
 80003fc:	f7ff ff76 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x0A);
 8000400:	200a      	movs	r0, #10
 8000402:	f7ff ff73 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x3F);
 8000406:	203f      	movs	r0, #63	@ 0x3f
 8000408:	f7ff ff70 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x78);
 800040c:	2078      	movs	r0, #120	@ 0x78
 800040e:	f7ff ff6d 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x4C);
 8000412:	204c      	movs	r0, #76	@ 0x4c
 8000414:	f7ff ff6a 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x09);
 8000418:	2009      	movs	r0, #9
 800041a:	f7ff ff67 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x0A);
 800041e:	200a      	movs	r0, #10
 8000420:	f7ff ff64 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x08);
 8000424:	2008      	movs	r0, #8
 8000426:	f7ff ff61 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x16);
 800042a:	2016      	movs	r0, #22
 800042c:	f7ff ff5e 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x1A);
 8000430:	201a      	movs	r0, #26
 8000432:	f7ff ff5b 	bl	80002ec <ILI9488_SendData>
	 ILI9488_SendData(0x0F);
 8000436:	200f      	movs	r0, #15
 8000438:	f7ff ff58 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0XE1);
 800043c:	20e1      	movs	r0, #225	@ 0xe1
 800043e:	f7ff ff2f 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0x00);
 8000442:	2000      	movs	r0, #0
 8000444:	f7ff ff52 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x16);
 8000448:	2016      	movs	r0, #22
 800044a:	f7ff ff4f 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x19);
 800044e:	2019      	movs	r0, #25
 8000450:	f7ff ff4c 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x03);
 8000454:	2003      	movs	r0, #3
 8000456:	f7ff ff49 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x0F);
 800045a:	200f      	movs	r0, #15
 800045c:	f7ff ff46 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x05);
 8000460:	2005      	movs	r0, #5
 8000462:	f7ff ff43 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x32);
 8000466:	2032      	movs	r0, #50	@ 0x32
 8000468:	f7ff ff40 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x45);
 800046c:	2045      	movs	r0, #69	@ 0x45
 800046e:	f7ff ff3d 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x46);
 8000472:	2046      	movs	r0, #70	@ 0x46
 8000474:	f7ff ff3a 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x04);
 8000478:	2004      	movs	r0, #4
 800047a:	f7ff ff37 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x0E);
 800047e:	200e      	movs	r0, #14
 8000480:	f7ff ff34 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x0D);
 8000484:	200d      	movs	r0, #13
 8000486:	f7ff ff31 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x35);
 800048a:	2035      	movs	r0, #53	@ 0x35
 800048c:	f7ff ff2e 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x37);
 8000490:	2037      	movs	r0, #55	@ 0x37
 8000492:	f7ff ff2b 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x0F);
 8000496:	200f      	movs	r0, #15
 8000498:	f7ff ff28 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0XC0);      //Power Control 1
 800049c:	20c0      	movs	r0, #192	@ 0xc0
 800049e:	f7ff feff 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0x17);    //Vreg1out
 80004a2:	2017      	movs	r0, #23
 80004a4:	f7ff ff22 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x15);    //Verg2out
 80004a8:	2015      	movs	r0, #21
 80004aa:	f7ff ff1f 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0xC1);      //Power Control 2
 80004ae:	20c1      	movs	r0, #193	@ 0xc1
 80004b0:	f7ff fef6 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0x41);    //VGH,VGL
 80004b4:	2041      	movs	r0, #65	@ 0x41
 80004b6:	f7ff ff19 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0xC5);      //Power Control 3
 80004ba:	20c5      	movs	r0, #197	@ 0xc5
 80004bc:	f7ff fef0 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0x00);
 80004c0:	2000      	movs	r0, #0
 80004c2:	f7ff ff13 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x12);    //Vcom
 80004c6:	2012      	movs	r0, #18
 80004c8:	f7ff ff10 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x80);
 80004cc:	2080      	movs	r0, #128	@ 0x80
 80004ce:	f7ff ff0d 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0x36);      //Memory Access
 80004d2:	2036      	movs	r0, #54	@ 0x36
 80004d4:	f7ff fee4 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0x48);
 80004d8:	2048      	movs	r0, #72	@ 0x48
 80004da:	f7ff ff07 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0x3A);      // Interface Pixel Format
 80004de:	203a      	movs	r0, #58	@ 0x3a
 80004e0:	f7ff fede 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0x66); 	  //18 bit
 80004e4:	2066      	movs	r0, #102	@ 0x66
 80004e6:	f7ff ff01 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0XB0);      // Interface Mode Control
 80004ea:	20b0      	movs	r0, #176	@ 0xb0
 80004ec:	f7ff fed8 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0x80);     			 //SDO NOT USE
 80004f0:	2080      	movs	r0, #128	@ 0x80
 80004f2:	f7ff fefb 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0xB1);      //Frame rate
 80004f6:	20b1      	movs	r0, #177	@ 0xb1
 80004f8:	f7ff fed2 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0xA0);    //60Hz
 80004fc:	20a0      	movs	r0, #160	@ 0xa0
 80004fe:	f7ff fef5 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0xB4);      //Display Inversion Control
 8000502:	20b4      	movs	r0, #180	@ 0xb4
 8000504:	f7ff fecc 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0x02);    //2-dot
 8000508:	2002      	movs	r0, #2
 800050a:	f7ff feef 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0XB6); //Display Function Control  RGB/MCU Interface Control
 800050e:	20b6      	movs	r0, #182	@ 0xb6
 8000510:	f7ff fec6 	bl	80002a0 <ILI9488_SendCommand>

	 	ILI9488_SendData(0x02);    //MCU
 8000514:	2002      	movs	r0, #2
 8000516:	f7ff fee9 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x02);    //Source,Gate scan dieection
 800051a:	2002      	movs	r0, #2
 800051c:	f7ff fee6 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0XE9);      // Set Image Functio
 8000520:	20e9      	movs	r0, #233	@ 0xe9
 8000522:	f7ff febd 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0x00);    // Disable 24 bit data
 8000526:	2000      	movs	r0, #0
 8000528:	f7ff fee0 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(0xF7);      // Adjust Control
 800052c:	20f7      	movs	r0, #247	@ 0xf7
 800052e:	f7ff feb7 	bl	80002a0 <ILI9488_SendCommand>
	 	ILI9488_SendData(0xA9);
 8000532:	20a9      	movs	r0, #169	@ 0xa9
 8000534:	f7ff feda 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x51);
 8000538:	2051      	movs	r0, #81	@ 0x51
 800053a:	f7ff fed7 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x2C);
 800053e:	202c      	movs	r0, #44	@ 0x2c
 8000540:	f7ff fed4 	bl	80002ec <ILI9488_SendData>
	 	ILI9488_SendData(0x82);    // D7 stream, loose
 8000544:	2082      	movs	r0, #130	@ 0x82
 8000546:	f7ff fed1 	bl	80002ec <ILI9488_SendData>

	 	ILI9488_SendCommand(ILI9488_SLPOUT);    //Exit Sleep
 800054a:	2011      	movs	r0, #17
 800054c:	f7ff fea8 	bl	80002a0 <ILI9488_SendCommand>

	 	HAL_Delay(120);
 8000550:	2078      	movs	r0, #120	@ 0x78
 8000552:	f001 f8f7 	bl	8001744 <HAL_Delay>

	 	ILI9488_SendCommand(ILI9488_DISPON);    //Display on
 8000556:	2029      	movs	r0, #41	@ 0x29
 8000558:	f7ff fea2 	bl	80002a0 <ILI9488_SendCommand>

}
 800055c:	bf00      	nop
 800055e:	bd80      	pop	{r7, pc}
 8000560:	48000c00 	.word	0x48000c00
 8000564:	2000008e 	.word	0x2000008e
 8000568:	20000090 	.word	0x20000090

0800056c <setAddrWindow>:

void setAddrWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1)
{
 800056c:	b590      	push	{r4, r7, lr}
 800056e:	b085      	sub	sp, #20
 8000570:	af00      	add	r7, sp, #0
 8000572:	4604      	mov	r4, r0
 8000574:	4608      	mov	r0, r1
 8000576:	4611      	mov	r1, r2
 8000578:	461a      	mov	r2, r3
 800057a:	4623      	mov	r3, r4
 800057c:	80fb      	strh	r3, [r7, #6]
 800057e:	4603      	mov	r3, r0
 8000580:	80bb      	strh	r3, [r7, #4]
 8000582:	460b      	mov	r3, r1
 8000584:	807b      	strh	r3, [r7, #2]
 8000586:	4613      	mov	r3, r2
 8000588:	803b      	strh	r3, [r7, #0]
	ILI9488_SendData(y0 >> 8);
	ILI9488_SendData(y0 & 0xff);     // YSTART
	ILI9488_SendData(y1 >> 8);
	ILI9488_SendData(y1 & 0xff);     // YEND
	ILI9488_SendCommand(ILI9488_RAMWR); // write to RAM*/
	ILI9488_SendCommand(ILI9488_CASET); // Column addr set
 800058a:	202a      	movs	r0, #42	@ 0x2a
 800058c:	f7ff fe88 	bl	80002a0 <ILI9488_SendCommand>
		{
		uint8_t data[] = {(x0 >> 8) & 0xFF, x0 & 0xFF, (x1 >> 8) & 0xFF, x1 & 0xFF};
 8000590:	88fb      	ldrh	r3, [r7, #6]
 8000592:	0a1b      	lsrs	r3, r3, #8
 8000594:	b29b      	uxth	r3, r3
 8000596:	b2db      	uxtb	r3, r3
 8000598:	733b      	strb	r3, [r7, #12]
 800059a:	88fb      	ldrh	r3, [r7, #6]
 800059c:	b2db      	uxtb	r3, r3
 800059e:	737b      	strb	r3, [r7, #13]
 80005a0:	887b      	ldrh	r3, [r7, #2]
 80005a2:	0a1b      	lsrs	r3, r3, #8
 80005a4:	b29b      	uxth	r3, r3
 80005a6:	b2db      	uxtb	r3, r3
 80005a8:	73bb      	strb	r3, [r7, #14]
 80005aa:	887b      	ldrh	r3, [r7, #2]
 80005ac:	b2db      	uxtb	r3, r3
 80005ae:	73fb      	strb	r3, [r7, #15]
		ILI9488_SendData_Multi(data, sizeof(data));
 80005b0:	f107 030c 	add.w	r3, r7, #12
 80005b4:	2104      	movs	r1, #4
 80005b6:	4618      	mov	r0, r3
 80005b8:	f7ff febe 	bl	8000338 <ILI9488_SendData_Multi>
		}
		ILI9488_SendCommand(ILI9488_PASET);
 80005bc:	202b      	movs	r0, #43	@ 0x2b
 80005be:	f7ff fe6f 	bl	80002a0 <ILI9488_SendCommand>
		{
		uint8_t data[] = {(y0 >> 8) & 0xFF, y0 & 0xFF, (y1 >> 8) & 0xFF, y1 & 0xFF};
 80005c2:	88bb      	ldrh	r3, [r7, #4]
 80005c4:	0a1b      	lsrs	r3, r3, #8
 80005c6:	b29b      	uxth	r3, r3
 80005c8:	b2db      	uxtb	r3, r3
 80005ca:	723b      	strb	r3, [r7, #8]
 80005cc:	88bb      	ldrh	r3, [r7, #4]
 80005ce:	b2db      	uxtb	r3, r3
 80005d0:	727b      	strb	r3, [r7, #9]
 80005d2:	883b      	ldrh	r3, [r7, #0]
 80005d4:	0a1b      	lsrs	r3, r3, #8
 80005d6:	b29b      	uxth	r3, r3
 80005d8:	b2db      	uxtb	r3, r3
 80005da:	72bb      	strb	r3, [r7, #10]
 80005dc:	883b      	ldrh	r3, [r7, #0]
 80005de:	b2db      	uxtb	r3, r3
 80005e0:	72fb      	strb	r3, [r7, #11]
		ILI9488_SendData_Multi(data, sizeof(data));
 80005e2:	f107 0308 	add.w	r3, r7, #8
 80005e6:	2104      	movs	r1, #4
 80005e8:	4618      	mov	r0, r3
 80005ea:	f7ff fea5 	bl	8000338 <ILI9488_SendData_Multi>
		}
		ILI9488_SendCommand(ILI9488_RAMWR); // write to RAM*/
 80005ee:	202c      	movs	r0, #44	@ 0x2c
 80005f0:	f7ff fe56 	bl	80002a0 <ILI9488_SendCommand>
}
 80005f4:	bf00      	nop
 80005f6:	3714      	adds	r7, #20
 80005f8:	46bd      	mov	sp, r7
 80005fa:	bd90      	pop	{r4, r7, pc}

080005fc <drawPixel>:
	HAL_GPIO_WritePin(tftCS_GPIO, tftCS_PIN, GPIO_PIN_SET);
}


void drawPixel(int16_t x, int16_t y, uint16_t color)
{
 80005fc:	b580      	push	{r7, lr}
 80005fe:	b082      	sub	sp, #8
 8000600:	af00      	add	r7, sp, #0
 8000602:	4603      	mov	r3, r0
 8000604:	80fb      	strh	r3, [r7, #6]
 8000606:	460b      	mov	r3, r1
 8000608:	80bb      	strh	r3, [r7, #4]
 800060a:	4613      	mov	r3, r2
 800060c:	807b      	strh	r3, [r7, #2]
	if ((x < 0) || (x >= width) || (y < 0) || (y >= height))
 800060e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000612:	2b00      	cmp	r3, #0
 8000614:	db36      	blt.n	8000684 <drawPixel+0x88>
 8000616:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800061a:	4a1c      	ldr	r2, [pc, #112]	@ (800068c <drawPixel+0x90>)
 800061c:	8812      	ldrh	r2, [r2, #0]
 800061e:	4293      	cmp	r3, r2
 8000620:	da30      	bge.n	8000684 <drawPixel+0x88>
 8000622:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8000626:	2b00      	cmp	r3, #0
 8000628:	db2c      	blt.n	8000684 <drawPixel+0x88>
 800062a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800062e:	4a18      	ldr	r2, [pc, #96]	@ (8000690 <drawPixel+0x94>)
 8000630:	8812      	ldrh	r2, [r2, #0]
 8000632:	4293      	cmp	r3, r2
 8000634:	da26      	bge.n	8000684 <drawPixel+0x88>
		return;

	setAddrWindow(x, y, x + 1, y + 1);
 8000636:	88f8      	ldrh	r0, [r7, #6]
 8000638:	88b9      	ldrh	r1, [r7, #4]
 800063a:	88fb      	ldrh	r3, [r7, #6]
 800063c:	3301      	adds	r3, #1
 800063e:	b29a      	uxth	r2, r3
 8000640:	88bb      	ldrh	r3, [r7, #4]
 8000642:	3301      	adds	r3, #1
 8000644:	b29b      	uxth	r3, r3
 8000646:	f7ff ff91 	bl	800056c <setAddrWindow>
	HAL_GPIO_WritePin(tftDC_GPIO, tftDC_PIN, GPIO_PIN_SET);
 800064a:	4b12      	ldr	r3, [pc, #72]	@ (8000694 <drawPixel+0x98>)
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	4a12      	ldr	r2, [pc, #72]	@ (8000698 <drawPixel+0x9c>)
 8000650:	8811      	ldrh	r1, [r2, #0]
 8000652:	2201      	movs	r2, #1
 8000654:	4618      	mov	r0, r3
 8000656:	f001 fb11 	bl	8001c7c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(tftCS_GPIO, tftCS_PIN, GPIO_PIN_RESET);
 800065a:	4b10      	ldr	r3, [pc, #64]	@ (800069c <drawPixel+0xa0>)
 800065c:	681b      	ldr	r3, [r3, #0]
 800065e:	4a10      	ldr	r2, [pc, #64]	@ (80006a0 <drawPixel+0xa4>)
 8000660:	8811      	ldrh	r1, [r2, #0]
 8000662:	2200      	movs	r2, #0
 8000664:	4618      	mov	r0, r3
 8000666:	f001 fb09 	bl	8001c7c <HAL_GPIO_WritePin>

	write16BitColor(color);
 800066a:	887b      	ldrh	r3, [r7, #2]
 800066c:	4618      	mov	r0, r3
 800066e:	f000 fbef 	bl	8000e50 <write16BitColor>
	HAL_GPIO_WritePin(tftCS_GPIO, tftCS_PIN, GPIO_PIN_SET);
 8000672:	4b0a      	ldr	r3, [pc, #40]	@ (800069c <drawPixel+0xa0>)
 8000674:	681b      	ldr	r3, [r3, #0]
 8000676:	4a0a      	ldr	r2, [pc, #40]	@ (80006a0 <drawPixel+0xa4>)
 8000678:	8811      	ldrh	r1, [r2, #0]
 800067a:	2201      	movs	r2, #1
 800067c:	4618      	mov	r0, r3
 800067e:	f001 fafd 	bl	8001c7c <HAL_GPIO_WritePin>
 8000682:	e000      	b.n	8000686 <drawPixel+0x8a>
		return;
 8000684:	bf00      	nop

}
 8000686:	3708      	adds	r7, #8
 8000688:	46bd      	mov	sp, r7
 800068a:	bd80      	pop	{r7, pc}
 800068c:	2000008e 	.word	0x2000008e
 8000690:	20000090 	.word	0x20000090
 8000694:	20000088 	.word	0x20000088
 8000698:	2000008c 	.word	0x2000008c
 800069c:	20000080 	.word	0x20000080
 80006a0:	20000084 	.word	0x20000084

080006a4 <drawPixelSize>:

void drawPixelSize(int16_t x, int16_t y, uint16_t color, uint16_t size)
{
 80006a4:	b590      	push	{r4, r7, lr}
 80006a6:	b083      	sub	sp, #12
 80006a8:	af00      	add	r7, sp, #0
 80006aa:	4604      	mov	r4, r0
 80006ac:	4608      	mov	r0, r1
 80006ae:	4611      	mov	r1, r2
 80006b0:	461a      	mov	r2, r3
 80006b2:	4623      	mov	r3, r4
 80006b4:	80fb      	strh	r3, [r7, #6]
 80006b6:	4603      	mov	r3, r0
 80006b8:	80bb      	strh	r3, [r7, #4]
 80006ba:	460b      	mov	r3, r1
 80006bc:	807b      	strh	r3, [r7, #2]
 80006be:	4613      	mov	r3, r2
 80006c0:	803b      	strh	r3, [r7, #0]
	if ((x < 0) || (x >= width) || (y < 0) || (y >= height))
 80006c2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80006c6:	2b00      	cmp	r3, #0
 80006c8:	db39      	blt.n	800073e <drawPixelSize+0x9a>
 80006ca:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80006ce:	4a1e      	ldr	r2, [pc, #120]	@ (8000748 <drawPixelSize+0xa4>)
 80006d0:	8812      	ldrh	r2, [r2, #0]
 80006d2:	4293      	cmp	r3, r2
 80006d4:	da33      	bge.n	800073e <drawPixelSize+0x9a>
 80006d6:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80006da:	2b00      	cmp	r3, #0
 80006dc:	db2f      	blt.n	800073e <drawPixelSize+0x9a>
 80006de:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80006e2:	4a1a      	ldr	r2, [pc, #104]	@ (800074c <drawPixelSize+0xa8>)
 80006e4:	8812      	ldrh	r2, [r2, #0]
 80006e6:	4293      	cmp	r3, r2
 80006e8:	da29      	bge.n	800073e <drawPixelSize+0x9a>
		return;

	setAddrWindow(x, y, x + size, y + size);
 80006ea:	88f8      	ldrh	r0, [r7, #6]
 80006ec:	88b9      	ldrh	r1, [r7, #4]
 80006ee:	88fa      	ldrh	r2, [r7, #6]
 80006f0:	883b      	ldrh	r3, [r7, #0]
 80006f2:	4413      	add	r3, r2
 80006f4:	b29c      	uxth	r4, r3
 80006f6:	88ba      	ldrh	r2, [r7, #4]
 80006f8:	883b      	ldrh	r3, [r7, #0]
 80006fa:	4413      	add	r3, r2
 80006fc:	b29b      	uxth	r3, r3
 80006fe:	4622      	mov	r2, r4
 8000700:	f7ff ff34 	bl	800056c <setAddrWindow>
	HAL_GPIO_WritePin(tftDC_GPIO, tftDC_PIN, GPIO_PIN_SET);
 8000704:	4b12      	ldr	r3, [pc, #72]	@ (8000750 <drawPixelSize+0xac>)
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	4a12      	ldr	r2, [pc, #72]	@ (8000754 <drawPixelSize+0xb0>)
 800070a:	8811      	ldrh	r1, [r2, #0]
 800070c:	2201      	movs	r2, #1
 800070e:	4618      	mov	r0, r3
 8000710:	f001 fab4 	bl	8001c7c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(tftCS_GPIO, tftCS_PIN, GPIO_PIN_RESET);
 8000714:	4b10      	ldr	r3, [pc, #64]	@ (8000758 <drawPixelSize+0xb4>)
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	4a10      	ldr	r2, [pc, #64]	@ (800075c <drawPixelSize+0xb8>)
 800071a:	8811      	ldrh	r1, [r2, #0]
 800071c:	2200      	movs	r2, #0
 800071e:	4618      	mov	r0, r3
 8000720:	f001 faac 	bl	8001c7c <HAL_GPIO_WritePin>

	write16BitColor(color);
 8000724:	887b      	ldrh	r3, [r7, #2]
 8000726:	4618      	mov	r0, r3
 8000728:	f000 fb92 	bl	8000e50 <write16BitColor>
	HAL_GPIO_WritePin(tftCS_GPIO, tftCS_PIN, GPIO_PIN_SET);
 800072c:	4b0a      	ldr	r3, [pc, #40]	@ (8000758 <drawPixelSize+0xb4>)
 800072e:	681b      	ldr	r3, [r3, #0]
 8000730:	4a0a      	ldr	r2, [pc, #40]	@ (800075c <drawPixelSize+0xb8>)
 8000732:	8811      	ldrh	r1, [r2, #0]
 8000734:	2201      	movs	r2, #1
 8000736:	4618      	mov	r0, r3
 8000738:	f001 faa0 	bl	8001c7c <HAL_GPIO_WritePin>
 800073c:	e000      	b.n	8000740 <drawPixelSize+0x9c>
		return;
 800073e:	bf00      	nop

}
 8000740:	370c      	adds	r7, #12
 8000742:	46bd      	mov	sp, r7
 8000744:	bd90      	pop	{r4, r7, pc}
 8000746:	bf00      	nop
 8000748:	2000008e 	.word	0x2000008e
 800074c:	20000090 	.word	0x20000090
 8000750:	20000088 	.word	0x20000088
 8000754:	2000008c 	.word	0x2000008c
 8000758:	20000080 	.word	0x20000080
 800075c:	20000084 	.word	0x20000084

08000760 <fillScreen>:
  }
}
//6. Fill the entire screen with a background color

void fillScreen(uint16_t color)
{
 8000760:	b580      	push	{r7, lr}
 8000762:	b084      	sub	sp, #16
 8000764:	af02      	add	r7, sp, #8
 8000766:	4603      	mov	r3, r0
 8000768:	80fb      	strh	r3, [r7, #6]
	fillRect(0, 0,  width, height, color);
 800076a:	4b08      	ldr	r3, [pc, #32]	@ (800078c <fillScreen+0x2c>)
 800076c:	881b      	ldrh	r3, [r3, #0]
 800076e:	b21a      	sxth	r2, r3
 8000770:	4b07      	ldr	r3, [pc, #28]	@ (8000790 <fillScreen+0x30>)
 8000772:	881b      	ldrh	r3, [r3, #0]
 8000774:	b219      	sxth	r1, r3
 8000776:	88fb      	ldrh	r3, [r7, #6]
 8000778:	9300      	str	r3, [sp, #0]
 800077a:	460b      	mov	r3, r1
 800077c:	2100      	movs	r1, #0
 800077e:	2000      	movs	r0, #0
 8000780:	f000 f808 	bl	8000794 <fillRect>
}
 8000784:	bf00      	nop
 8000786:	3708      	adds	r7, #8
 8000788:	46bd      	mov	sp, r7
 800078a:	bd80      	pop	{r7, pc}
 800078c:	2000008e 	.word	0x2000008e
 8000790:	20000090 	.word	0x20000090

08000794 <fillRect>:

void fillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color)
{
 8000794:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000798:	b08a      	sub	sp, #40	@ 0x28
 800079a:	af00      	add	r7, sp, #0
 800079c:	4606      	mov	r6, r0
 800079e:	4608      	mov	r0, r1
 80007a0:	4611      	mov	r1, r2
 80007a2:	461a      	mov	r2, r3
 80007a4:	4633      	mov	r3, r6
 80007a6:	80fb      	strh	r3, [r7, #6]
 80007a8:	4603      	mov	r3, r0
 80007aa:	80bb      	strh	r3, [r7, #4]
 80007ac:	460b      	mov	r3, r1
 80007ae:	807b      	strh	r3, [r7, #2]
 80007b0:	4613      	mov	r3, r2
 80007b2:	803b      	strh	r3, [r7, #0]
 80007b4:	466b      	mov	r3, sp
 80007b6:	469a      	mov	sl, r3

	uint32_t i, n, cnt, buf_size;
	if ((x >= width) || (y >= height))
 80007b8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80007bc:	4a8f      	ldr	r2, [pc, #572]	@ (80009fc <fillRect+0x268>)
 80007be:	8812      	ldrh	r2, [r2, #0]
 80007c0:	4293      	cmp	r3, r2
 80007c2:	da05      	bge.n	80007d0 <fillRect+0x3c>
 80007c4:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80007c8:	4a8d      	ldr	r2, [pc, #564]	@ (8000a00 <fillRect+0x26c>)
 80007ca:	8812      	ldrh	r2, [r2, #0]
 80007cc:	4293      	cmp	r3, r2
 80007ce:	db01      	blt.n	80007d4 <fillRect+0x40>
		return;
 80007d0:	46d5      	mov	sp, sl
 80007d2:	e10f      	b.n	80009f4 <fillRect+0x260>
	if ((x + w - 1) >= width)
 80007d4:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80007d8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80007dc:	4413      	add	r3, r2
 80007de:	4a87      	ldr	r2, [pc, #540]	@ (80009fc <fillRect+0x268>)
 80007e0:	8812      	ldrh	r2, [r2, #0]
 80007e2:	4293      	cmp	r3, r2
 80007e4:	dd05      	ble.n	80007f2 <fillRect+0x5e>
		w = width - x;
 80007e6:	4b85      	ldr	r3, [pc, #532]	@ (80009fc <fillRect+0x268>)
 80007e8:	881a      	ldrh	r2, [r3, #0]
 80007ea:	88fb      	ldrh	r3, [r7, #6]
 80007ec:	1ad3      	subs	r3, r2, r3
 80007ee:	b29b      	uxth	r3, r3
 80007f0:	807b      	strh	r3, [r7, #2]
	if ((y + h - 1) >= height)
 80007f2:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 80007f6:	f9b7 3000 	ldrsh.w	r3, [r7]
 80007fa:	4413      	add	r3, r2
 80007fc:	4a80      	ldr	r2, [pc, #512]	@ (8000a00 <fillRect+0x26c>)
 80007fe:	8812      	ldrh	r2, [r2, #0]
 8000800:	4293      	cmp	r3, r2
 8000802:	dd05      	ble.n	8000810 <fillRect+0x7c>
		h = height - y;
 8000804:	4b7e      	ldr	r3, [pc, #504]	@ (8000a00 <fillRect+0x26c>)
 8000806:	881a      	ldrh	r2, [r3, #0]
 8000808:	88bb      	ldrh	r3, [r7, #4]
 800080a:	1ad3      	subs	r3, r2, r3
 800080c:	b29b      	uxth	r3, r3
 800080e:	803b      	strh	r3, [r7, #0]
	setAddrWindow(x, y, x + w - 1, y + h - 1);
 8000810:	88f8      	ldrh	r0, [r7, #6]
 8000812:	88b9      	ldrh	r1, [r7, #4]
 8000814:	88fa      	ldrh	r2, [r7, #6]
 8000816:	887b      	ldrh	r3, [r7, #2]
 8000818:	4413      	add	r3, r2
 800081a:	b29b      	uxth	r3, r3
 800081c:	3b01      	subs	r3, #1
 800081e:	b29e      	uxth	r6, r3
 8000820:	88ba      	ldrh	r2, [r7, #4]
 8000822:	883b      	ldrh	r3, [r7, #0]
 8000824:	4413      	add	r3, r2
 8000826:	b29b      	uxth	r3, r3
 8000828:	3b01      	subs	r3, #1
 800082a:	b29b      	uxth	r3, r3
 800082c:	4632      	mov	r2, r6
 800082e:	f7ff fe9d 	bl	800056c <setAddrWindow>
	uint8_t r = (color & 0xF800) >> 11;
 8000832:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 8000836:	0adb      	lsrs	r3, r3, #11
 8000838:	b29b      	uxth	r3, r3
 800083a:	76fb      	strb	r3, [r7, #27]
	uint8_t g = (color & 0x07E0) >> 5;
 800083c:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 8000840:	115b      	asrs	r3, r3, #5
 8000842:	b2db      	uxtb	r3, r3
 8000844:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8000848:	76bb      	strb	r3, [r7, #26]
	uint8_t b = color & 0x001F;
 800084a:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 800084e:	b2db      	uxtb	r3, r3
 8000850:	f003 031f 	and.w	r3, r3, #31
 8000854:	767b      	strb	r3, [r7, #25]

	r = (r * 255) / 31;
 8000856:	7efa      	ldrb	r2, [r7, #27]
 8000858:	4613      	mov	r3, r2
 800085a:	021b      	lsls	r3, r3, #8
 800085c:	1a9b      	subs	r3, r3, r2
 800085e:	4a69      	ldr	r2, [pc, #420]	@ (8000a04 <fillRect+0x270>)
 8000860:	fb82 1203 	smull	r1, r2, r2, r3
 8000864:	441a      	add	r2, r3
 8000866:	1112      	asrs	r2, r2, #4
 8000868:	17db      	asrs	r3, r3, #31
 800086a:	1ad3      	subs	r3, r2, r3
 800086c:	76fb      	strb	r3, [r7, #27]
	g = (g * 255) / 63;
 800086e:	7eba      	ldrb	r2, [r7, #26]
 8000870:	4613      	mov	r3, r2
 8000872:	021b      	lsls	r3, r3, #8
 8000874:	1a9b      	subs	r3, r3, r2
 8000876:	4a64      	ldr	r2, [pc, #400]	@ (8000a08 <fillRect+0x274>)
 8000878:	fb82 1203 	smull	r1, r2, r2, r3
 800087c:	441a      	add	r2, r3
 800087e:	1152      	asrs	r2, r2, #5
 8000880:	17db      	asrs	r3, r3, #31
 8000882:	1ad3      	subs	r3, r2, r3
 8000884:	76bb      	strb	r3, [r7, #26]
	b = (b * 255) / 31;
 8000886:	7e7a      	ldrb	r2, [r7, #25]
 8000888:	4613      	mov	r3, r2
 800088a:	021b      	lsls	r3, r3, #8
 800088c:	1a9b      	subs	r3, r3, r2
 800088e:	4a5d      	ldr	r2, [pc, #372]	@ (8000a04 <fillRect+0x270>)
 8000890:	fb82 1203 	smull	r1, r2, r2, r3
 8000894:	441a      	add	r2, r3
 8000896:	1112      	asrs	r2, r2, #4
 8000898:	17db      	asrs	r3, r3, #31
 800089a:	1ad3      	subs	r3, r2, r3
 800089c:	767b      	strb	r3, [r7, #25]

	n = w*h*3;
 800089e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80008a2:	f9b7 2000 	ldrsh.w	r2, [r7]
 80008a6:	fb03 f202 	mul.w	r2, r3, r2
 80008aa:	4613      	mov	r3, r2
 80008ac:	005b      	lsls	r3, r3, #1
 80008ae:	4413      	add	r3, r2
 80008b0:	617b      	str	r3, [r7, #20]
	if (n <= 65535){
 80008b2:	697b      	ldr	r3, [r7, #20]
 80008b4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80008b8:	d204      	bcs.n	80008c4 <fillRect+0x130>
		cnt = 1;
 80008ba:	2301      	movs	r3, #1
 80008bc:	623b      	str	r3, [r7, #32]
		buf_size = n;
 80008be:	697b      	ldr	r3, [r7, #20]
 80008c0:	61fb      	str	r3, [r7, #28]
 80008c2:	e02f      	b.n	8000924 <fillRect+0x190>
	}
	else {
		cnt = n/3;
 80008c4:	697b      	ldr	r3, [r7, #20]
 80008c6:	4a51      	ldr	r2, [pc, #324]	@ (8000a0c <fillRect+0x278>)
 80008c8:	fba2 2303 	umull	r2, r3, r2, r3
 80008cc:	085b      	lsrs	r3, r3, #1
 80008ce:	623b      	str	r3, [r7, #32]
		buf_size = 3;
 80008d0:	2303      	movs	r3, #3
 80008d2:	61fb      	str	r3, [r7, #28]
		uint8_t min_cnt = n/65535+1;
 80008d4:	697b      	ldr	r3, [r7, #20]
 80008d6:	4a4e      	ldr	r2, [pc, #312]	@ (8000a10 <fillRect+0x27c>)
 80008d8:	fba2 2303 	umull	r2, r3, r2, r3
 80008dc:	0bdb      	lsrs	r3, r3, #15
 80008de:	b2db      	uxtb	r3, r3
 80008e0:	3301      	adds	r3, #1
 80008e2:	74fb      	strb	r3, [r7, #19]
		for (i=min_cnt; i < n/3; i++){
 80008e4:	7cfb      	ldrb	r3, [r7, #19]
 80008e6:	627b      	str	r3, [r7, #36]	@ 0x24
 80008e8:	e014      	b.n	8000914 <fillRect+0x180>
			if(n%i == 0){
 80008ea:	697b      	ldr	r3, [r7, #20]
 80008ec:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80008ee:	fbb3 f2f2 	udiv	r2, r3, r2
 80008f2:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 80008f4:	fb01 f202 	mul.w	r2, r1, r2
 80008f8:	1a9b      	subs	r3, r3, r2
 80008fa:	2b00      	cmp	r3, #0
 80008fc:	d107      	bne.n	800090e <fillRect+0x17a>
				cnt = i;
 80008fe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000900:	623b      	str	r3, [r7, #32]
				buf_size = n/i;
 8000902:	697a      	ldr	r2, [r7, #20]
 8000904:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000906:	fbb2 f3f3 	udiv	r3, r2, r3
 800090a:	61fb      	str	r3, [r7, #28]
				break;
 800090c:	e00a      	b.n	8000924 <fillRect+0x190>
		for (i=min_cnt; i < n/3; i++){
 800090e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000910:	3301      	adds	r3, #1
 8000912:	627b      	str	r3, [r7, #36]	@ 0x24
 8000914:	697b      	ldr	r3, [r7, #20]
 8000916:	4a3d      	ldr	r2, [pc, #244]	@ (8000a0c <fillRect+0x278>)
 8000918:	fba2 2303 	umull	r2, r3, r2, r3
 800091c:	085b      	lsrs	r3, r3, #1
 800091e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000920:	429a      	cmp	r2, r3
 8000922:	d3e2      	bcc.n	80008ea <fillRect+0x156>
			}
		}
	}
	uint8_t frm_buf[buf_size];
 8000924:	69f9      	ldr	r1, [r7, #28]
 8000926:	460b      	mov	r3, r1
 8000928:	3b01      	subs	r3, #1
 800092a:	60fb      	str	r3, [r7, #12]
 800092c:	2300      	movs	r3, #0
 800092e:	4688      	mov	r8, r1
 8000930:	4699      	mov	r9, r3
 8000932:	f04f 0200 	mov.w	r2, #0
 8000936:	f04f 0300 	mov.w	r3, #0
 800093a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800093e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8000942:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8000946:	2300      	movs	r3, #0
 8000948:	460c      	mov	r4, r1
 800094a:	461d      	mov	r5, r3
 800094c:	f04f 0200 	mov.w	r2, #0
 8000950:	f04f 0300 	mov.w	r3, #0
 8000954:	00eb      	lsls	r3, r5, #3
 8000956:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800095a:	00e2      	lsls	r2, r4, #3
 800095c:	1dcb      	adds	r3, r1, #7
 800095e:	08db      	lsrs	r3, r3, #3
 8000960:	00db      	lsls	r3, r3, #3
 8000962:	ebad 0d03 	sub.w	sp, sp, r3
 8000966:	466b      	mov	r3, sp
 8000968:	3300      	adds	r3, #0
 800096a:	60bb      	str	r3, [r7, #8]
	for (i=0; i < buf_size/3; i++)
 800096c:	2300      	movs	r3, #0
 800096e:	627b      	str	r3, [r7, #36]	@ 0x24
 8000970:	e019      	b.n	80009a6 <fillRect+0x212>
	{
		frm_buf[i*3] = r;
 8000972:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000974:	4613      	mov	r3, r2
 8000976:	005b      	lsls	r3, r3, #1
 8000978:	4413      	add	r3, r2
 800097a:	68ba      	ldr	r2, [r7, #8]
 800097c:	7ef9      	ldrb	r1, [r7, #27]
 800097e:	54d1      	strb	r1, [r2, r3]
		frm_buf[i*3+1] = g;
 8000980:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000982:	4613      	mov	r3, r2
 8000984:	005b      	lsls	r3, r3, #1
 8000986:	4413      	add	r3, r2
 8000988:	3301      	adds	r3, #1
 800098a:	68ba      	ldr	r2, [r7, #8]
 800098c:	7eb9      	ldrb	r1, [r7, #26]
 800098e:	54d1      	strb	r1, [r2, r3]
		frm_buf[i*3+2] = b;
 8000990:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000992:	4613      	mov	r3, r2
 8000994:	005b      	lsls	r3, r3, #1
 8000996:	4413      	add	r3, r2
 8000998:	3302      	adds	r3, #2
 800099a:	68ba      	ldr	r2, [r7, #8]
 800099c:	7e79      	ldrb	r1, [r7, #25]
 800099e:	54d1      	strb	r1, [r2, r3]
	for (i=0; i < buf_size/3; i++)
 80009a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80009a2:	3301      	adds	r3, #1
 80009a4:	627b      	str	r3, [r7, #36]	@ 0x24
 80009a6:	69fb      	ldr	r3, [r7, #28]
 80009a8:	4a18      	ldr	r2, [pc, #96]	@ (8000a0c <fillRect+0x278>)
 80009aa:	fba2 2303 	umull	r2, r3, r2, r3
 80009ae:	085b      	lsrs	r3, r3, #1
 80009b0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80009b2:	429a      	cmp	r2, r3
 80009b4:	d3dd      	bcc.n	8000972 <fillRect+0x1de>
	}
	DC_DATA();
 80009b6:	2201      	movs	r2, #1
 80009b8:	2140      	movs	r1, #64	@ 0x40
 80009ba:	4816      	ldr	r0, [pc, #88]	@ (8000a14 <fillRect+0x280>)
 80009bc:	f001 f95e 	bl	8001c7c <HAL_GPIO_WritePin>
	CS_A();
 80009c0:	2200      	movs	r2, #0
 80009c2:	2101      	movs	r1, #1
 80009c4:	4813      	ldr	r0, [pc, #76]	@ (8000a14 <fillRect+0x280>)
 80009c6:	f001 f959 	bl	8001c7c <HAL_GPIO_WritePin>
		while(cnt>0)
 80009ca:	e00a      	b.n	80009e2 <fillRect+0x24e>
		{
			HAL_SPI_Transmit(&hspi2, frm_buf, buf_size, HAL_MAX_DELAY);
 80009cc:	69fb      	ldr	r3, [r7, #28]
 80009ce:	b29a      	uxth	r2, r3
 80009d0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80009d4:	68b9      	ldr	r1, [r7, #8]
 80009d6:	4810      	ldr	r0, [pc, #64]	@ (8000a18 <fillRect+0x284>)
 80009d8:	f002 f96f 	bl	8002cba <HAL_SPI_Transmit>

			cnt -= 1;
 80009dc:	6a3b      	ldr	r3, [r7, #32]
 80009de:	3b01      	subs	r3, #1
 80009e0:	623b      	str	r3, [r7, #32]
		while(cnt>0)
 80009e2:	6a3b      	ldr	r3, [r7, #32]
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	d1f1      	bne.n	80009cc <fillRect+0x238>
		}
		CS_D();
 80009e8:	2201      	movs	r2, #1
 80009ea:	2101      	movs	r1, #1
 80009ec:	4809      	ldr	r0, [pc, #36]	@ (8000a14 <fillRect+0x280>)
 80009ee:	f001 f945 	bl	8001c7c <HAL_GPIO_WritePin>
 80009f2:	46d5      	mov	sp, sl

}
 80009f4:	3728      	adds	r7, #40	@ 0x28
 80009f6:	46bd      	mov	sp, r7
 80009f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009fc:	2000008e 	.word	0x2000008e
 8000a00:	20000090 	.word	0x20000090
 8000a04:	84210843 	.word	0x84210843
 8000a08:	82082083 	.word	0x82082083
 8000a0c:	aaaaaaab 	.word	0xaaaaaaab
 8000a10:	80008001 	.word	0x80008001
 8000a14:	48000c00 	.word	0x48000c00
 8000a18:	20000094 	.word	0x20000094

08000a1c <setRotation>:


void setRotation(uint8_t r)
{
 8000a1c:	b580      	push	{r7, lr}
 8000a1e:	b084      	sub	sp, #16
 8000a20:	af00      	add	r7, sp, #0
 8000a22:	4603      	mov	r3, r0
 8000a24:	71fb      	strb	r3, [r7, #7]

	ILI9488_SendCommand(ILI9488_MADCTL);
 8000a26:	2036      	movs	r0, #54	@ 0x36
 8000a28:	f7ff fc3a 	bl	80002a0 <ILI9488_SendCommand>
	uint8_t rotation = r % 4; // can't be higher than 3
 8000a2c:	79fb      	ldrb	r3, [r7, #7]
 8000a2e:	f003 0303 	and.w	r3, r3, #3
 8000a32:	73fb      	strb	r3, [r7, #15]
	switch (rotation) {
 8000a34:	7bfb      	ldrb	r3, [r7, #15]
 8000a36:	2b03      	cmp	r3, #3
 8000a38:	d83a      	bhi.n	8000ab0 <setRotation+0x94>
 8000a3a:	a201      	add	r2, pc, #4	@ (adr r2, 8000a40 <setRotation+0x24>)
 8000a3c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000a40:	08000a51 	.word	0x08000a51
 8000a44:	08000a69 	.word	0x08000a69
 8000a48:	08000a81 	.word	0x08000a81
 8000a4c:	08000a99 	.word	0x08000a99
	case 0:
		ILI9488_SendData(MADCTL_MX | MADCTL_BGR);
 8000a50:	2048      	movs	r0, #72	@ 0x48
 8000a52:	f7ff fc4b 	bl	80002ec <ILI9488_SendData>
		width = ILI9488_TFTWIDTH;
 8000a56:	4b18      	ldr	r3, [pc, #96]	@ (8000ab8 <setRotation+0x9c>)
 8000a58:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8000a5c:	801a      	strh	r2, [r3, #0]
		height = ILI9488_TFTHEIGHT;
 8000a5e:	4b17      	ldr	r3, [pc, #92]	@ (8000abc <setRotation+0xa0>)
 8000a60:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8000a64:	801a      	strh	r2, [r3, #0]
		break;
 8000a66:	e023      	b.n	8000ab0 <setRotation+0x94>
	case 1:
		ILI9488_SendData(MADCTL_MV | MADCTL_BGR);
 8000a68:	2028      	movs	r0, #40	@ 0x28
 8000a6a:	f7ff fc3f 	bl	80002ec <ILI9488_SendData>
		width = ILI9488_TFTHEIGHT;
 8000a6e:	4b12      	ldr	r3, [pc, #72]	@ (8000ab8 <setRotation+0x9c>)
 8000a70:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8000a74:	801a      	strh	r2, [r3, #0]
		height = ILI9488_TFTWIDTH;
 8000a76:	4b11      	ldr	r3, [pc, #68]	@ (8000abc <setRotation+0xa0>)
 8000a78:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8000a7c:	801a      	strh	r2, [r3, #0]
		break;
 8000a7e:	e017      	b.n	8000ab0 <setRotation+0x94>
	case 2:
		ILI9488_SendData(MADCTL_MY | MADCTL_BGR);
 8000a80:	2088      	movs	r0, #136	@ 0x88
 8000a82:	f7ff fc33 	bl	80002ec <ILI9488_SendData>
		width = ILI9488_TFTWIDTH;
 8000a86:	4b0c      	ldr	r3, [pc, #48]	@ (8000ab8 <setRotation+0x9c>)
 8000a88:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8000a8c:	801a      	strh	r2, [r3, #0]
		height = ILI9488_TFTHEIGHT;
 8000a8e:	4b0b      	ldr	r3, [pc, #44]	@ (8000abc <setRotation+0xa0>)
 8000a90:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8000a94:	801a      	strh	r2, [r3, #0]
		break;
 8000a96:	e00b      	b.n	8000ab0 <setRotation+0x94>
	case 3:
		ILI9488_SendData(MADCTL_MX | MADCTL_MY | MADCTL_MV | MADCTL_BGR);
 8000a98:	20e8      	movs	r0, #232	@ 0xe8
 8000a9a:	f7ff fc27 	bl	80002ec <ILI9488_SendData>
		width = ILI9488_TFTHEIGHT;
 8000a9e:	4b06      	ldr	r3, [pc, #24]	@ (8000ab8 <setRotation+0x9c>)
 8000aa0:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8000aa4:	801a      	strh	r2, [r3, #0]
		height = ILI9488_TFTWIDTH;
 8000aa6:	4b05      	ldr	r3, [pc, #20]	@ (8000abc <setRotation+0xa0>)
 8000aa8:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8000aac:	801a      	strh	r2, [r3, #0]
		break;
 8000aae:	bf00      	nop
	}

}
 8000ab0:	bf00      	nop
 8000ab2:	3710      	adds	r7, #16
 8000ab4:	46bd      	mov	sp, r7
 8000ab6:	bd80      	pop	{r7, pc}
 8000ab8:	2000008e 	.word	0x2000008e
 8000abc:	20000090 	.word	0x20000090

08000ac0 <drawCharTest>:
  }
}


void drawCharTest(int16_t x, int16_t y, unsigned char c, uint16_t color, uint16_t bg, uint8_t size)
{
 8000ac0:	b5b0      	push	{r4, r5, r7, lr}
 8000ac2:	b086      	sub	sp, #24
 8000ac4:	af02      	add	r7, sp, #8
 8000ac6:	4604      	mov	r4, r0
 8000ac8:	4608      	mov	r0, r1
 8000aca:	4611      	mov	r1, r2
 8000acc:	461a      	mov	r2, r3
 8000ace:	4623      	mov	r3, r4
 8000ad0:	80fb      	strh	r3, [r7, #6]
 8000ad2:	4603      	mov	r3, r0
 8000ad4:	80bb      	strh	r3, [r7, #4]
 8000ad6:	460b      	mov	r3, r1
 8000ad8:	70fb      	strb	r3, [r7, #3]
 8000ada:	4613      	mov	r3, r2
 8000adc:	803b      	strh	r3, [r7, #0]
	if(rotationNum == 1 || rotationNum ==3)
 8000ade:	4bb7      	ldr	r3, [pc, #732]	@ (8000dbc <drawCharTest+0x2fc>)
 8000ae0:	781b      	ldrb	r3, [r3, #0]
 8000ae2:	2b01      	cmp	r3, #1
 8000ae4:	d003      	beq.n	8000aee <drawCharTest+0x2e>
 8000ae6:	4bb5      	ldr	r3, [pc, #724]	@ (8000dbc <drawCharTest+0x2fc>)
 8000ae8:	781b      	ldrb	r3, [r3, #0]
 8000aea:	2b03      	cmp	r3, #3
 8000aec:	d120      	bne.n	8000b30 <drawCharTest+0x70>
	{
		if((x >= ILI9488_TFTWIDTH)            || // Clip right
 8000aee:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000af2:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8000af6:	f280 815a 	bge.w	8000dae <drawCharTest+0x2ee>
 8000afa:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8000afe:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 8000b02:	f280 8154 	bge.w	8000dae <drawCharTest+0x2ee>
     (y >= ILI9488_TFTHEIGHT)           || // Clip bottom
     ((x + 6 * size - 1) < 0) || // Clip left
 8000b06:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 8000b0a:	f897 2024 	ldrb.w	r2, [r7, #36]	@ 0x24
 8000b0e:	4613      	mov	r3, r2
 8000b10:	005b      	lsls	r3, r3, #1
 8000b12:	4413      	add	r3, r2
 8000b14:	005b      	lsls	r3, r3, #1
 8000b16:	440b      	add	r3, r1
     (y >= ILI9488_TFTHEIGHT)           || // Clip bottom
 8000b18:	2b00      	cmp	r3, #0
 8000b1a:	f340 8148 	ble.w	8000dae <drawCharTest+0x2ee>
     ((y + 8 * size - 1) < 0))   // Clip top
 8000b1e:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8000b22:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000b26:	00db      	lsls	r3, r3, #3
 8000b28:	4413      	add	r3, r2
     ((x + 6 * size - 1) < 0) || // Clip left
 8000b2a:	2b00      	cmp	r3, #0
 8000b2c:	dc22      	bgt.n	8000b74 <drawCharTest+0xb4>
    return;
 8000b2e:	e13e      	b.n	8000dae <drawCharTest+0x2ee>
	}
	else
	{
		if((y >= ILI9488_TFTWIDTH)            || // Clip right
 8000b30:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8000b34:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8000b38:	f280 813b 	bge.w	8000db2 <drawCharTest+0x2f2>
 8000b3c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000b40:	f5b3 7ff0 	cmp.w	r3, #480	@ 0x1e0
 8000b44:	f280 8135 	bge.w	8000db2 <drawCharTest+0x2f2>
     (x >= ILI9488_TFTHEIGHT)           || // Clip bottom
     ((y + 6 * size - 1) < 0) || // Clip left
 8000b48:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 8000b4c:	f897 2024 	ldrb.w	r2, [r7, #36]	@ 0x24
 8000b50:	4613      	mov	r3, r2
 8000b52:	005b      	lsls	r3, r3, #1
 8000b54:	4413      	add	r3, r2
 8000b56:	005b      	lsls	r3, r3, #1
 8000b58:	440b      	add	r3, r1
     (x >= ILI9488_TFTHEIGHT)           || // Clip bottom
 8000b5a:	2b00      	cmp	r3, #0
 8000b5c:	f340 8129 	ble.w	8000db2 <drawCharTest+0x2f2>
     ((x + 8 * size - 1) < 0))   // Clip top
 8000b60:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8000b64:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000b68:	00db      	lsls	r3, r3, #3
 8000b6a:	4413      	add	r3, r2
     ((y + 6 * size - 1) < 0) || // Clip left
 8000b6c:	2b00      	cmp	r3, #0
 8000b6e:	f340 8120 	ble.w	8000db2 <drawCharTest+0x2f2>
 8000b72:	e000      	b.n	8000b76 <drawCharTest+0xb6>
		if((x >= ILI9488_TFTWIDTH)            || // Clip right
 8000b74:	bf00      	nop
    return;
	}


  if(!_cp437 && (c >= 176)) c++; // Handle 'classic' charset behavior
 8000b76:	4b92      	ldr	r3, [pc, #584]	@ (8000dc0 <drawCharTest+0x300>)
 8000b78:	781b      	ldrb	r3, [r3, #0]
 8000b7a:	f083 0301 	eor.w	r3, r3, #1
 8000b7e:	b2db      	uxtb	r3, r3
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d005      	beq.n	8000b90 <drawCharTest+0xd0>
 8000b84:	78fb      	ldrb	r3, [r7, #3]
 8000b86:	2baf      	cmp	r3, #175	@ 0xaf
 8000b88:	d902      	bls.n	8000b90 <drawCharTest+0xd0>
 8000b8a:	78fb      	ldrb	r3, [r7, #3]
 8000b8c:	3301      	adds	r3, #1
 8000b8e:	70fb      	strb	r3, [r7, #3]

  //6
  for (int8_t i=0; i<6; i++ ) {
 8000b90:	2300      	movs	r3, #0
 8000b92:	73fb      	strb	r3, [r7, #15]
 8000b94:	e105      	b.n	8000da2 <drawCharTest+0x2e2>
    uint8_t line;
    if (i == 5)
 8000b96:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000b9a:	2b05      	cmp	r3, #5
 8000b9c:	d102      	bne.n	8000ba4 <drawCharTest+0xe4>
      line = 0x0;
 8000b9e:	2300      	movs	r3, #0
 8000ba0:	73bb      	strb	r3, [r7, #14]
 8000ba2:	e00b      	b.n	8000bbc <drawCharTest+0xfc>
    else
      line = pgm_read_byte(font1+(c*5)+i);
 8000ba4:	78fa      	ldrb	r2, [r7, #3]
 8000ba6:	4613      	mov	r3, r2
 8000ba8:	009b      	lsls	r3, r3, #2
 8000baa:	4413      	add	r3, r2
 8000bac:	461a      	mov	r2, r3
 8000bae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000bb2:	4413      	add	r3, r2
 8000bb4:	4a83      	ldr	r2, [pc, #524]	@ (8000dc4 <drawCharTest+0x304>)
 8000bb6:	4413      	add	r3, r2
 8000bb8:	781b      	ldrb	r3, [r3, #0]
 8000bba:	73bb      	strb	r3, [r7, #14]
    for (int8_t j = 0; j<8; j++) {
 8000bbc:	2300      	movs	r3, #0
 8000bbe:	737b      	strb	r3, [r7, #13]
 8000bc0:	e0e4      	b.n	8000d8c <drawCharTest+0x2cc>
      if (line & 0x1) {
 8000bc2:	7bbb      	ldrb	r3, [r7, #14]
 8000bc4:	f003 0301 	and.w	r3, r3, #1
 8000bc8:	2b00      	cmp	r3, #0
 8000bca:	d073      	beq.n	8000cb4 <drawCharTest+0x1f4>
        if (size == 1) // default size
 8000bcc:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000bd0:	2b01      	cmp	r3, #1
 8000bd2:	d112      	bne.n	8000bfa <drawCharTest+0x13a>
        	drawPixel(x+i, y+j, color);
 8000bd4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000bd8:	b29a      	uxth	r2, r3
 8000bda:	88fb      	ldrh	r3, [r7, #6]
 8000bdc:	4413      	add	r3, r2
 8000bde:	b29b      	uxth	r3, r3
 8000be0:	b218      	sxth	r0, r3
 8000be2:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8000be6:	b29a      	uxth	r2, r3
 8000be8:	88bb      	ldrh	r3, [r7, #4]
 8000bea:	4413      	add	r3, r2
 8000bec:	b29b      	uxth	r3, r3
 8000bee:	b21b      	sxth	r3, r3
 8000bf0:	883a      	ldrh	r2, [r7, #0]
 8000bf2:	4619      	mov	r1, r3
 8000bf4:	f7ff fd02 	bl	80005fc <drawPixel>
 8000bf8:	e047      	b.n	8000c8a <drawCharTest+0x1ca>
        else {  // big size
        	fillRect(x+(i*size), y+(j*size), (size + x+(i*size))/10, (size+1 + y+(j*size))/10, color);
 8000bfa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000bfe:	b29a      	uxth	r2, r3
 8000c00:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000c04:	b29b      	uxth	r3, r3
 8000c06:	fb12 f303 	smulbb	r3, r2, r3
 8000c0a:	b29a      	uxth	r2, r3
 8000c0c:	88fb      	ldrh	r3, [r7, #6]
 8000c0e:	4413      	add	r3, r2
 8000c10:	b29b      	uxth	r3, r3
 8000c12:	b218      	sxth	r0, r3
 8000c14:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8000c18:	b29a      	uxth	r2, r3
 8000c1a:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000c1e:	b29b      	uxth	r3, r3
 8000c20:	fb12 f303 	smulbb	r3, r2, r3
 8000c24:	b29a      	uxth	r2, r3
 8000c26:	88bb      	ldrh	r3, [r7, #4]
 8000c28:	4413      	add	r3, r2
 8000c2a:	b29b      	uxth	r3, r3
 8000c2c:	b21c      	sxth	r4, r3
 8000c2e:	f897 2024 	ldrb.w	r2, [r7, #36]	@ 0x24
 8000c32:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000c36:	441a      	add	r2, r3
 8000c38:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000c3c:	f897 1024 	ldrb.w	r1, [r7, #36]	@ 0x24
 8000c40:	fb01 f303 	mul.w	r3, r1, r3
 8000c44:	4413      	add	r3, r2
 8000c46:	4a60      	ldr	r2, [pc, #384]	@ (8000dc8 <drawCharTest+0x308>)
 8000c48:	fb82 1203 	smull	r1, r2, r2, r3
 8000c4c:	1092      	asrs	r2, r2, #2
 8000c4e:	17db      	asrs	r3, r3, #31
 8000c50:	1ad3      	subs	r3, r2, r3
 8000c52:	b21d      	sxth	r5, r3
 8000c54:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000c58:	1c5a      	adds	r2, r3, #1
 8000c5a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8000c5e:	441a      	add	r2, r3
 8000c60:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8000c64:	f897 1024 	ldrb.w	r1, [r7, #36]	@ 0x24
 8000c68:	fb01 f303 	mul.w	r3, r1, r3
 8000c6c:	4413      	add	r3, r2
 8000c6e:	4a56      	ldr	r2, [pc, #344]	@ (8000dc8 <drawCharTest+0x308>)
 8000c70:	fb82 1203 	smull	r1, r2, r2, r3
 8000c74:	1092      	asrs	r2, r2, #2
 8000c76:	17db      	asrs	r3, r3, #31
 8000c78:	1ad3      	subs	r3, r2, r3
 8000c7a:	b21a      	sxth	r2, r3
 8000c7c:	883b      	ldrh	r3, [r7, #0]
 8000c7e:	9300      	str	r3, [sp, #0]
 8000c80:	4613      	mov	r3, r2
 8000c82:	462a      	mov	r2, r5
 8000c84:	4621      	mov	r1, r4
 8000c86:	f7ff fd85 	bl	8000794 <fillRect>
        	//fillRect(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color)
        }

        drawPixelSize(x + i, y + i, color, size);
 8000c8a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000c8e:	b29a      	uxth	r2, r3
 8000c90:	88fb      	ldrh	r3, [r7, #6]
 8000c92:	4413      	add	r3, r2
 8000c94:	b29b      	uxth	r3, r3
 8000c96:	b218      	sxth	r0, r3
 8000c98:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000c9c:	b29a      	uxth	r2, r3
 8000c9e:	88bb      	ldrh	r3, [r7, #4]
 8000ca0:	4413      	add	r3, r2
 8000ca2:	b29b      	uxth	r3, r3
 8000ca4:	b219      	sxth	r1, r3
 8000ca6:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000caa:	b29b      	uxth	r3, r3
 8000cac:	883a      	ldrh	r2, [r7, #0]
 8000cae:	f7ff fcf9 	bl	80006a4 <drawPixelSize>
 8000cb2:	e062      	b.n	8000d7a <drawCharTest+0x2ba>
      } else if (bg != color) {
 8000cb4:	8c3a      	ldrh	r2, [r7, #32]
 8000cb6:	883b      	ldrh	r3, [r7, #0]
 8000cb8:	429a      	cmp	r2, r3
 8000cba:	d05e      	beq.n	8000d7a <drawCharTest+0x2ba>
        if (size == 1) // default size
 8000cbc:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000cc0:	2b01      	cmp	r3, #1
 8000cc2:	d112      	bne.n	8000cea <drawCharTest+0x22a>
        	drawPixel(x+i, y+j, bg);
 8000cc4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000cc8:	b29a      	uxth	r2, r3
 8000cca:	88fb      	ldrh	r3, [r7, #6]
 8000ccc:	4413      	add	r3, r2
 8000cce:	b29b      	uxth	r3, r3
 8000cd0:	b218      	sxth	r0, r3
 8000cd2:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8000cd6:	b29a      	uxth	r2, r3
 8000cd8:	88bb      	ldrh	r3, [r7, #4]
 8000cda:	4413      	add	r3, r2
 8000cdc:	b29b      	uxth	r3, r3
 8000cde:	b21b      	sxth	r3, r3
 8000ce0:	8c3a      	ldrh	r2, [r7, #32]
 8000ce2:	4619      	mov	r1, r3
 8000ce4:	f7ff fc8a 	bl	80005fc <drawPixel>
 8000ce8:	e047      	b.n	8000d7a <drawCharTest+0x2ba>
        else {  // big size
        	fillRect(x+(i*size), y+(j*size), (size + x+(i*size))/10, (size+1 + y+(j*size))/10, bg);
 8000cea:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000cee:	b29a      	uxth	r2, r3
 8000cf0:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000cf4:	b29b      	uxth	r3, r3
 8000cf6:	fb12 f303 	smulbb	r3, r2, r3
 8000cfa:	b29a      	uxth	r2, r3
 8000cfc:	88fb      	ldrh	r3, [r7, #6]
 8000cfe:	4413      	add	r3, r2
 8000d00:	b29b      	uxth	r3, r3
 8000d02:	b218      	sxth	r0, r3
 8000d04:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8000d08:	b29a      	uxth	r2, r3
 8000d0a:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000d0e:	b29b      	uxth	r3, r3
 8000d10:	fb12 f303 	smulbb	r3, r2, r3
 8000d14:	b29a      	uxth	r2, r3
 8000d16:	88bb      	ldrh	r3, [r7, #4]
 8000d18:	4413      	add	r3, r2
 8000d1a:	b29b      	uxth	r3, r3
 8000d1c:	b21c      	sxth	r4, r3
 8000d1e:	f897 2024 	ldrb.w	r2, [r7, #36]	@ 0x24
 8000d22:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8000d26:	441a      	add	r2, r3
 8000d28:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000d2c:	f897 1024 	ldrb.w	r1, [r7, #36]	@ 0x24
 8000d30:	fb01 f303 	mul.w	r3, r1, r3
 8000d34:	4413      	add	r3, r2
 8000d36:	4a24      	ldr	r2, [pc, #144]	@ (8000dc8 <drawCharTest+0x308>)
 8000d38:	fb82 1203 	smull	r1, r2, r2, r3
 8000d3c:	1092      	asrs	r2, r2, #2
 8000d3e:	17db      	asrs	r3, r3, #31
 8000d40:	1ad3      	subs	r3, r2, r3
 8000d42:	b21d      	sxth	r5, r3
 8000d44:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8000d48:	1c5a      	adds	r2, r3, #1
 8000d4a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8000d4e:	441a      	add	r2, r3
 8000d50:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8000d54:	f897 1024 	ldrb.w	r1, [r7, #36]	@ 0x24
 8000d58:	fb01 f303 	mul.w	r3, r1, r3
 8000d5c:	4413      	add	r3, r2
 8000d5e:	4a1a      	ldr	r2, [pc, #104]	@ (8000dc8 <drawCharTest+0x308>)
 8000d60:	fb82 1203 	smull	r1, r2, r2, r3
 8000d64:	1092      	asrs	r2, r2, #2
 8000d66:	17db      	asrs	r3, r3, #31
 8000d68:	1ad3      	subs	r3, r2, r3
 8000d6a:	b21a      	sxth	r2, r3
 8000d6c:	8c3b      	ldrh	r3, [r7, #32]
 8000d6e:	9300      	str	r3, [sp, #0]
 8000d70:	4613      	mov	r3, r2
 8000d72:	462a      	mov	r2, r5
 8000d74:	4621      	mov	r1, r4
 8000d76:	f7ff fd0d 	bl	8000794 <fillRect>
        }
      }
      line >>= 1;
 8000d7a:	7bbb      	ldrb	r3, [r7, #14]
 8000d7c:	085b      	lsrs	r3, r3, #1
 8000d7e:	73bb      	strb	r3, [r7, #14]
    for (int8_t j = 0; j<8; j++) {
 8000d80:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8000d84:	b2db      	uxtb	r3, r3
 8000d86:	3301      	adds	r3, #1
 8000d88:	b2db      	uxtb	r3, r3
 8000d8a:	737b      	strb	r3, [r7, #13]
 8000d8c:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8000d90:	2b07      	cmp	r3, #7
 8000d92:	f77f af16 	ble.w	8000bc2 <drawCharTest+0x102>
  for (int8_t i=0; i<6; i++ ) {
 8000d96:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000d9a:	b2db      	uxtb	r3, r3
 8000d9c:	3301      	adds	r3, #1
 8000d9e:	b2db      	uxtb	r3, r3
 8000da0:	73fb      	strb	r3, [r7, #15]
 8000da2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000da6:	2b05      	cmp	r3, #5
 8000da8:	f77f aef5 	ble.w	8000b96 <drawCharTest+0xd6>
 8000dac:	e002      	b.n	8000db4 <drawCharTest+0x2f4>
    return;
 8000dae:	bf00      	nop
 8000db0:	e000      	b.n	8000db4 <drawCharTest+0x2f4>
    return;
 8000db2:	bf00      	nop
    }
  }
}
 8000db4:	3710      	adds	r7, #16
 8000db6:	46bd      	mov	sp, r7
 8000db8:	bdb0      	pop	{r4, r5, r7, pc}
 8000dba:	bf00      	nop
 8000dbc:	20000000 	.word	0x20000000
 8000dc0:	2000007c 	.word	0x2000007c
 8000dc4:	08004088 	.word	0x08004088
 8000dc8:	66666667 	.word	0x66666667

08000dcc <ILI9488_printTextTest>:
	}
}


void ILI9488_printTextTest(char text[], int16_t x, int16_t y, uint16_t color, uint16_t bg, uint8_t size)
{
 8000dcc:	b590      	push	{r4, r7, lr}
 8000dce:	b089      	sub	sp, #36	@ 0x24
 8000dd0:	af02      	add	r7, sp, #8
 8000dd2:	60f8      	str	r0, [r7, #12]
 8000dd4:	4608      	mov	r0, r1
 8000dd6:	4611      	mov	r1, r2
 8000dd8:	461a      	mov	r2, r3
 8000dda:	4603      	mov	r3, r0
 8000ddc:	817b      	strh	r3, [r7, #10]
 8000dde:	460b      	mov	r3, r1
 8000de0:	813b      	strh	r3, [r7, #8]
 8000de2:	4613      	mov	r3, r2
 8000de4:	80fb      	strh	r3, [r7, #6]
	int16_t offset;
	offset = size*6;
 8000de6:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8000dea:	b29b      	uxth	r3, r3
 8000dec:	461a      	mov	r2, r3
 8000dee:	0052      	lsls	r2, r2, #1
 8000df0:	4413      	add	r3, r2
 8000df2:	005b      	lsls	r3, r3, #1
 8000df4:	b29b      	uxth	r3, r3
 8000df6:	82bb      	strh	r3, [r7, #20]

	/*for(uint16_t i=0; i<strlen(text) && text[i]!=NULL; i++)
	{
		drawCharTest(x+(offset*i), y, text[i],color,bg,size);
	}*/
	for(uint16_t i=0; i<100 && text[i]!=NULL; i++)
 8000df8:	2300      	movs	r3, #0
 8000dfa:	82fb      	strh	r3, [r7, #22]
 8000dfc:	e01a      	b.n	8000e34 <ILI9488_printTextTest+0x68>
		{
			drawCharTest(x+(offset*i), y, text[i],color,bg,size);
 8000dfe:	8abb      	ldrh	r3, [r7, #20]
 8000e00:	8afa      	ldrh	r2, [r7, #22]
 8000e02:	fb12 f303 	smulbb	r3, r2, r3
 8000e06:	b29a      	uxth	r2, r3
 8000e08:	897b      	ldrh	r3, [r7, #10]
 8000e0a:	4413      	add	r3, r2
 8000e0c:	b29b      	uxth	r3, r3
 8000e0e:	b218      	sxth	r0, r3
 8000e10:	8afb      	ldrh	r3, [r7, #22]
 8000e12:	68fa      	ldr	r2, [r7, #12]
 8000e14:	4413      	add	r3, r2
 8000e16:	781a      	ldrb	r2, [r3, #0]
 8000e18:	88fc      	ldrh	r4, [r7, #6]
 8000e1a:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 8000e1e:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8000e22:	9301      	str	r3, [sp, #4]
 8000e24:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 8000e26:	9300      	str	r3, [sp, #0]
 8000e28:	4623      	mov	r3, r4
 8000e2a:	f7ff fe49 	bl	8000ac0 <drawCharTest>
	for(uint16_t i=0; i<100 && text[i]!=NULL; i++)
 8000e2e:	8afb      	ldrh	r3, [r7, #22]
 8000e30:	3301      	adds	r3, #1
 8000e32:	82fb      	strh	r3, [r7, #22]
 8000e34:	8afb      	ldrh	r3, [r7, #22]
 8000e36:	2b63      	cmp	r3, #99	@ 0x63
 8000e38:	d805      	bhi.n	8000e46 <ILI9488_printTextTest+0x7a>
 8000e3a:	8afb      	ldrh	r3, [r7, #22]
 8000e3c:	68fa      	ldr	r2, [r7, #12]
 8000e3e:	4413      	add	r3, r2
 8000e40:	781b      	ldrb	r3, [r3, #0]
 8000e42:	2b00      	cmp	r3, #0
 8000e44:	d1db      	bne.n	8000dfe <ILI9488_printTextTest+0x32>
		}
}
 8000e46:	bf00      	nop
 8000e48:	371c      	adds	r7, #28
 8000e4a:	46bd      	mov	sp, r7
 8000e4c:	bd90      	pop	{r4, r7, pc}
	...

08000e50 <write16BitColor>:
	for (y2 = 0; y2 < h; y2 += 6)
		drawLine(x1, y1, x2, y2, color);
}

void write16BitColor(uint16_t color)
{
 8000e50:	b580      	push	{r7, lr}
 8000e52:	b084      	sub	sp, #16
 8000e54:	af00      	add	r7, sp, #0
 8000e56:	4603      	mov	r3, r0
 8000e58:	80fb      	strh	r3, [r7, #6]

	  uint8_t r = (color & 0xF800) >> 11;
 8000e5a:	88fb      	ldrh	r3, [r7, #6]
 8000e5c:	0adb      	lsrs	r3, r3, #11
 8000e5e:	b29b      	uxth	r3, r3
 8000e60:	73fb      	strb	r3, [r7, #15]
	  uint8_t g = (color & 0x07E0) >> 5;
 8000e62:	88fb      	ldrh	r3, [r7, #6]
 8000e64:	115b      	asrs	r3, r3, #5
 8000e66:	b2db      	uxtb	r3, r3
 8000e68:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8000e6c:	73bb      	strb	r3, [r7, #14]
	  uint8_t b = color & 0x001F;
 8000e6e:	88fb      	ldrh	r3, [r7, #6]
 8000e70:	b2db      	uxtb	r3, r3
 8000e72:	f003 031f 	and.w	r3, r3, #31
 8000e76:	737b      	strb	r3, [r7, #13]

	  r = (r * 255) / 31;
 8000e78:	7bfa      	ldrb	r2, [r7, #15]
 8000e7a:	4613      	mov	r3, r2
 8000e7c:	021b      	lsls	r3, r3, #8
 8000e7e:	1a9b      	subs	r3, r3, r2
 8000e80:	4a17      	ldr	r2, [pc, #92]	@ (8000ee0 <write16BitColor+0x90>)
 8000e82:	fb82 1203 	smull	r1, r2, r2, r3
 8000e86:	441a      	add	r2, r3
 8000e88:	1112      	asrs	r2, r2, #4
 8000e8a:	17db      	asrs	r3, r3, #31
 8000e8c:	1ad3      	subs	r3, r2, r3
 8000e8e:	73fb      	strb	r3, [r7, #15]
	  g = (g * 255) / 63;
 8000e90:	7bba      	ldrb	r2, [r7, #14]
 8000e92:	4613      	mov	r3, r2
 8000e94:	021b      	lsls	r3, r3, #8
 8000e96:	1a9b      	subs	r3, r3, r2
 8000e98:	4a12      	ldr	r2, [pc, #72]	@ (8000ee4 <write16BitColor+0x94>)
 8000e9a:	fb82 1203 	smull	r1, r2, r2, r3
 8000e9e:	441a      	add	r2, r3
 8000ea0:	1152      	asrs	r2, r2, #5
 8000ea2:	17db      	asrs	r3, r3, #31
 8000ea4:	1ad3      	subs	r3, r2, r3
 8000ea6:	73bb      	strb	r3, [r7, #14]
	  b = (b * 255) / 31;
 8000ea8:	7b7a      	ldrb	r2, [r7, #13]
 8000eaa:	4613      	mov	r3, r2
 8000eac:	021b      	lsls	r3, r3, #8
 8000eae:	1a9b      	subs	r3, r3, r2
 8000eb0:	4a0b      	ldr	r2, [pc, #44]	@ (8000ee0 <write16BitColor+0x90>)
 8000eb2:	fb82 1203 	smull	r1, r2, r2, r3
 8000eb6:	441a      	add	r2, r3
 8000eb8:	1112      	asrs	r2, r2, #4
 8000eba:	17db      	asrs	r3, r3, #31
 8000ebc:	1ad3      	subs	r3, r2, r3
 8000ebe:	737b      	strb	r3, [r7, #13]
	  uint8_t data[3] = {r, g, b};
 8000ec0:	7bfb      	ldrb	r3, [r7, #15]
 8000ec2:	723b      	strb	r3, [r7, #8]
 8000ec4:	7bbb      	ldrb	r3, [r7, #14]
 8000ec6:	727b      	strb	r3, [r7, #9]
 8000ec8:	7b7b      	ldrb	r3, [r7, #13]
 8000eca:	72bb      	strb	r3, [r7, #10]
	  ILI9488_SendData_Multi(data, 3);
 8000ecc:	f107 0308 	add.w	r3, r7, #8
 8000ed0:	2103      	movs	r1, #3
 8000ed2:	4618      	mov	r0, r3
 8000ed4:	f7ff fa30 	bl	8000338 <ILI9488_SendData_Multi>
	  //HAL_SPI_Transmit(&hspi2, (uint8_t *)&r, 1, 10);
	  //HAL_SPI_Transmit(&hspi2, (uint8_t *)&g, 1, 10);
	  //HAL_SPI_Transmit(&hspi2, (uint8_t *)&b, 1, 10);

}
 8000ed8:	bf00      	nop
 8000eda:	3710      	adds	r7, #16
 8000edc:	46bd      	mov	sp, r7
 8000ede:	bd80      	pop	{r7, pc}
 8000ee0:	84210843 	.word	0x84210843
 8000ee4:	82082083 	.word	0x82082083

08000ee8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000ee8:	b580      	push	{r7, lr}
 8000eea:	b0b0      	sub	sp, #192	@ 0xc0
 8000eec:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000eee:	f000 fbb4 	bl	800165a <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ef2:	f000 f851 	bl	8000f98 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000ef6:	f000 f91d 	bl	8001134 <MX_GPIO_Init>
  MX_SPI2_Init();
 8000efa:	f000 f89f 	bl	800103c <MX_SPI2_Init>
  MX_SPI3_Init();
 8000efe:	f000 f8db 	bl	80010b8 <MX_SPI3_Init>
				ILI9488_SendData(0x07FF<<3);//BLUE
			}
		}
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, GPIO_PIN_SET); //LCD CHIP SELECT
*/
  ILI9488_Init();
 8000f02:	f7ff fa4f 	bl	80003a4 <ILI9488_Init>
HAL_Delay(1000);
 8000f06:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000f0a:	f000 fc1b 	bl	8001744 <HAL_Delay>
setRotation(1);
 8000f0e:	2001      	movs	r0, #1
 8000f10:	f7ff fd84 	bl	8000a1c <setRotation>
fillScreen(ILI9488_WHITE);
 8000f14:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 8000f18:	f7ff fc22 	bl	8000760 <fillScreen>

   uint16_t touchX = 0, touchY = 0;
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	f8a7 30b6 	strh.w	r3, [r7, #182]	@ 0xb6
 8000f22:	2300      	movs	r3, #0
 8000f24:	f8a7 30b4 	strh.w	r3, [r7, #180]	@ 0xb4
   fillRect(300, 230,75,75, ILI9488_RED);
   drawCharTest(319, 250, '9', ILI9488_BLACK,ILI9488_RED, 3);*/
   //drawChar(135, 61, '1', ILI9488_BLACK,ILI9488_RED, 1);


   uint16_t count = 0;
 8000f28:	2300      	movs	r3, #0
 8000f2a:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
   uint16_t entered[10];
   char greetings[] = "In the quiet woods, under a starlit sky, whispers of ancient secrets echoed through time, captivating every soul.";
 8000f2e:	4a18      	ldr	r2, [pc, #96]	@ (8000f90 <main+0xa8>)
 8000f30:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8000f34:	4611      	mov	r1, r2
 8000f36:	2272      	movs	r2, #114	@ 0x72
 8000f38:	4618      	mov	r0, r3
 8000f3a:	f002 fc0d 	bl	8003758 <memcpy>
   ILI9488_printTextTest(greetings, 25, 25, ILI9488_BLACK, ILI9488_WHITE, 3);
 8000f3e:	f107 0028 	add.w	r0, r7, #40	@ 0x28
 8000f42:	2303      	movs	r3, #3
 8000f44:	9301      	str	r3, [sp, #4]
 8000f46:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8000f4a:	9300      	str	r3, [sp, #0]
 8000f4c:	2300      	movs	r3, #0
 8000f4e:	2219      	movs	r2, #25
 8000f50:	2119      	movs	r1, #25
 8000f52:	f7ff ff3b 	bl	8000dcc <ILI9488_printTextTest>
	  //char buf2[20];
	  //char buf3[20];

	  	  //ILI9488_printTextTest(buf1, 250 , 25, ILI9488_BLACK, ILI9488_WHITE, 2);
	  	 //ILI9488_printText(buf3, 150, 25, ILI9488_WHITE, ILI9488_WHITE, 1);
	  	  touchX = getX();
 8000f56:	f000 fb43 	bl	80015e0 <getX>
 8000f5a:	4603      	mov	r3, r0
 8000f5c:	f8a7 30b6 	strh.w	r3, [r7, #182]	@ 0xb6
	  	  touchY = getY();
 8000f60:	f000 fb48 	bl	80015f4 <getY>
 8000f64:	4603      	mov	r3, r0
 8000f66:	f8a7 30b4 	strh.w	r3, [r7, #180]	@ 0xb4
	  	  sprintf(buf,"x=%3d y=%3d",touchX,touchY);
 8000f6a:	f8b7 20b6 	ldrh.w	r2, [r7, #182]	@ 0xb6
 8000f6e:	f8b7 30b4 	ldrh.w	r3, [r7, #180]	@ 0xb4
 8000f72:	f107 0014 	add.w	r0, r7, #20
 8000f76:	4907      	ldr	r1, [pc, #28]	@ (8000f94 <main+0xac>)
 8000f78:	f002 fb9a 	bl	80036b0 <siprintf>
	  	  sprintf(buf1,"x=%3d y=%3d",touchX,touchY);
 8000f7c:	f8b7 20b6 	ldrh.w	r2, [r7, #182]	@ 0xb6
 8000f80:	f8b7 30b4 	ldrh.w	r3, [r7, #180]	@ 0xb4
 8000f84:	4638      	mov	r0, r7
 8000f86:	4903      	ldr	r1, [pc, #12]	@ (8000f94 <main+0xac>)
 8000f88:	f002 fb92 	bl	80036b0 <siprintf>
  {
 8000f8c:	bf00      	nop
 8000f8e:	e7e2      	b.n	8000f56 <main+0x6e>
 8000f90:	08004014 	.word	0x08004014
 8000f94:	08004008 	.word	0x08004008

08000f98 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000f98:	b580      	push	{r7, lr}
 8000f9a:	b096      	sub	sp, #88	@ 0x58
 8000f9c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000f9e:	f107 0314 	add.w	r3, r7, #20
 8000fa2:	2244      	movs	r2, #68	@ 0x44
 8000fa4:	2100      	movs	r1, #0
 8000fa6:	4618      	mov	r0, r3
 8000fa8:	f002 fba2 	bl	80036f0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000fac:	463b      	mov	r3, r7
 8000fae:	2200      	movs	r2, #0
 8000fb0:	601a      	str	r2, [r3, #0]
 8000fb2:	605a      	str	r2, [r3, #4]
 8000fb4:	609a      	str	r2, [r3, #8]
 8000fb6:	60da      	str	r2, [r3, #12]
 8000fb8:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST) != HAL_OK)
 8000fba:	2000      	movs	r0, #0
 8000fbc:	f000 fe96 	bl	8001cec <HAL_PWREx_ControlVoltageScaling>
 8000fc0:	4603      	mov	r3, r0
 8000fc2:	2b00      	cmp	r3, #0
 8000fc4:	d001      	beq.n	8000fca <SystemClock_Config+0x32>
  {
    Error_Handler();
 8000fc6:	f000 f90b 	bl	80011e0 <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 8000fca:	2310      	movs	r3, #16
 8000fcc:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8000fce:	2301      	movs	r3, #1
 8000fd0:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8000fd2:	2300      	movs	r3, #0
 8000fd4:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8000fd6:	2360      	movs	r3, #96	@ 0x60
 8000fd8:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000fda:	2302      	movs	r3, #2
 8000fdc:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 8000fde:	2301      	movs	r3, #1
 8000fe0:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 8000fe2:	2301      	movs	r3, #1
 8000fe4:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLN = 60;
 8000fe6:	233c      	movs	r3, #60	@ 0x3c
 8000fe8:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000fea:	2302      	movs	r3, #2
 8000fec:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8000fee:	2302      	movs	r3, #2
 8000ff0:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8000ff2:	2302      	movs	r3, #2
 8000ff4:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ff6:	f107 0314 	add.w	r3, r7, #20
 8000ffa:	4618      	mov	r0, r3
 8000ffc:	f000 ff1a 	bl	8001e34 <HAL_RCC_OscConfig>
 8001000:	4603      	mov	r3, r0
 8001002:	2b00      	cmp	r3, #0
 8001004:	d001      	beq.n	800100a <SystemClock_Config+0x72>
  {
    Error_Handler();
 8001006:	f000 f8eb 	bl	80011e0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800100a:	230f      	movs	r3, #15
 800100c:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800100e:	2303      	movs	r3, #3
 8001010:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001012:	2300      	movs	r3, #0
 8001014:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001016:	2300      	movs	r3, #0
 8001018:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800101a:	2300      	movs	r3, #0
 800101c:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800101e:	463b      	mov	r3, r7
 8001020:	2105      	movs	r1, #5
 8001022:	4618      	mov	r0, r3
 8001024:	f001 fb20 	bl	8002668 <HAL_RCC_ClockConfig>
 8001028:	4603      	mov	r3, r0
 800102a:	2b00      	cmp	r3, #0
 800102c:	d001      	beq.n	8001032 <SystemClock_Config+0x9a>
  {
    Error_Handler();
 800102e:	f000 f8d7 	bl	80011e0 <Error_Handler>
  }
}
 8001032:	bf00      	nop
 8001034:	3758      	adds	r7, #88	@ 0x58
 8001036:	46bd      	mov	sp, r7
 8001038:	bd80      	pop	{r7, pc}
	...

0800103c <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 800103c:	b580      	push	{r7, lr}
 800103e:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8001040:	4b1b      	ldr	r3, [pc, #108]	@ (80010b0 <MX_SPI2_Init+0x74>)
 8001042:	4a1c      	ldr	r2, [pc, #112]	@ (80010b4 <MX_SPI2_Init+0x78>)
 8001044:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8001046:	4b1a      	ldr	r3, [pc, #104]	@ (80010b0 <MX_SPI2_Init+0x74>)
 8001048:	f44f 7282 	mov.w	r2, #260	@ 0x104
 800104c:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 800104e:	4b18      	ldr	r3, [pc, #96]	@ (80010b0 <MX_SPI2_Init+0x74>)
 8001050:	2200      	movs	r2, #0
 8001052:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001054:	4b16      	ldr	r3, [pc, #88]	@ (80010b0 <MX_SPI2_Init+0x74>)
 8001056:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 800105a:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 800105c:	4b14      	ldr	r3, [pc, #80]	@ (80010b0 <MX_SPI2_Init+0x74>)
 800105e:	2200      	movs	r2, #0
 8001060:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001062:	4b13      	ldr	r3, [pc, #76]	@ (80010b0 <MX_SPI2_Init+0x74>)
 8001064:	2200      	movs	r2, #0
 8001066:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8001068:	4b11      	ldr	r3, [pc, #68]	@ (80010b0 <MX_SPI2_Init+0x74>)
 800106a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800106e:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001070:	4b0f      	ldr	r3, [pc, #60]	@ (80010b0 <MX_SPI2_Init+0x74>)
 8001072:	2200      	movs	r2, #0
 8001074:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001076:	4b0e      	ldr	r3, [pc, #56]	@ (80010b0 <MX_SPI2_Init+0x74>)
 8001078:	2200      	movs	r2, #0
 800107a:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 800107c:	4b0c      	ldr	r3, [pc, #48]	@ (80010b0 <MX_SPI2_Init+0x74>)
 800107e:	2200      	movs	r2, #0
 8001080:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001082:	4b0b      	ldr	r3, [pc, #44]	@ (80010b0 <MX_SPI2_Init+0x74>)
 8001084:	2200      	movs	r2, #0
 8001086:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 7;
 8001088:	4b09      	ldr	r3, [pc, #36]	@ (80010b0 <MX_SPI2_Init+0x74>)
 800108a:	2207      	movs	r2, #7
 800108c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 800108e:	4b08      	ldr	r3, [pc, #32]	@ (80010b0 <MX_SPI2_Init+0x74>)
 8001090:	2200      	movs	r2, #0
 8001092:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8001094:	4b06      	ldr	r3, [pc, #24]	@ (80010b0 <MX_SPI2_Init+0x74>)
 8001096:	2208      	movs	r2, #8
 8001098:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 800109a:	4805      	ldr	r0, [pc, #20]	@ (80010b0 <MX_SPI2_Init+0x74>)
 800109c:	f001 fd6a 	bl	8002b74 <HAL_SPI_Init>
 80010a0:	4603      	mov	r3, r0
 80010a2:	2b00      	cmp	r3, #0
 80010a4:	d001      	beq.n	80010aa <MX_SPI2_Init+0x6e>
  {
    Error_Handler();
 80010a6:	f000 f89b 	bl	80011e0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 80010aa:	bf00      	nop
 80010ac:	bd80      	pop	{r7, pc}
 80010ae:	bf00      	nop
 80010b0:	20000094 	.word	0x20000094
 80010b4:	40003800 	.word	0x40003800

080010b8 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 80010b8:	b580      	push	{r7, lr}
 80010ba:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 80010bc:	4b1b      	ldr	r3, [pc, #108]	@ (800112c <MX_SPI3_Init+0x74>)
 80010be:	4a1c      	ldr	r2, [pc, #112]	@ (8001130 <MX_SPI3_Init+0x78>)
 80010c0:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 80010c2:	4b1a      	ldr	r3, [pc, #104]	@ (800112c <MX_SPI3_Init+0x74>)
 80010c4:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80010c8:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 80010ca:	4b18      	ldr	r3, [pc, #96]	@ (800112c <MX_SPI3_Init+0x74>)
 80010cc:	2200      	movs	r2, #0
 80010ce:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 80010d0:	4b16      	ldr	r3, [pc, #88]	@ (800112c <MX_SPI3_Init+0x74>)
 80010d2:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 80010d6:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 80010d8:	4b14      	ldr	r3, [pc, #80]	@ (800112c <MX_SPI3_Init+0x74>)
 80010da:	2200      	movs	r2, #0
 80010dc:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 80010de:	4b13      	ldr	r3, [pc, #76]	@ (800112c <MX_SPI3_Init+0x74>)
 80010e0:	2200      	movs	r2, #0
 80010e2:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 80010e4:	4b11      	ldr	r3, [pc, #68]	@ (800112c <MX_SPI3_Init+0x74>)
 80010e6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80010ea:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80010ec:	4b0f      	ldr	r3, [pc, #60]	@ (800112c <MX_SPI3_Init+0x74>)
 80010ee:	2218      	movs	r2, #24
 80010f0:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80010f2:	4b0e      	ldr	r3, [pc, #56]	@ (800112c <MX_SPI3_Init+0x74>)
 80010f4:	2200      	movs	r2, #0
 80010f6:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 80010f8:	4b0c      	ldr	r3, [pc, #48]	@ (800112c <MX_SPI3_Init+0x74>)
 80010fa:	2200      	movs	r2, #0
 80010fc:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80010fe:	4b0b      	ldr	r3, [pc, #44]	@ (800112c <MX_SPI3_Init+0x74>)
 8001100:	2200      	movs	r2, #0
 8001102:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi3.Init.CRCPolynomial = 7;
 8001104:	4b09      	ldr	r3, [pc, #36]	@ (800112c <MX_SPI3_Init+0x74>)
 8001106:	2207      	movs	r2, #7
 8001108:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi3.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 800110a:	4b08      	ldr	r3, [pc, #32]	@ (800112c <MX_SPI3_Init+0x74>)
 800110c:	2200      	movs	r2, #0
 800110e:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8001110:	4b06      	ldr	r3, [pc, #24]	@ (800112c <MX_SPI3_Init+0x74>)
 8001112:	2208      	movs	r2, #8
 8001114:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 8001116:	4805      	ldr	r0, [pc, #20]	@ (800112c <MX_SPI3_Init+0x74>)
 8001118:	f001 fd2c 	bl	8002b74 <HAL_SPI_Init>
 800111c:	4603      	mov	r3, r0
 800111e:	2b00      	cmp	r3, #0
 8001120:	d001      	beq.n	8001126 <MX_SPI3_Init+0x6e>
  {
    Error_Handler();
 8001122:	f000 f85d 	bl	80011e0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8001126:	bf00      	nop
 8001128:	bd80      	pop	{r7, pc}
 800112a:	bf00      	nop
 800112c:	200000f8 	.word	0x200000f8
 8001130:	40003c00 	.word	0x40003c00

08001134 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001134:	b580      	push	{r7, lr}
 8001136:	b088      	sub	sp, #32
 8001138:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800113a:	f107 030c 	add.w	r3, r7, #12
 800113e:	2200      	movs	r2, #0
 8001140:	601a      	str	r2, [r3, #0]
 8001142:	605a      	str	r2, [r3, #4]
 8001144:	609a      	str	r2, [r3, #8]
 8001146:	60da      	str	r2, [r3, #12]
 8001148:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800114a:	4b22      	ldr	r3, [pc, #136]	@ (80011d4 <MX_GPIO_Init+0xa0>)
 800114c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800114e:	4a21      	ldr	r2, [pc, #132]	@ (80011d4 <MX_GPIO_Init+0xa0>)
 8001150:	f043 0302 	orr.w	r3, r3, #2
 8001154:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001156:	4b1f      	ldr	r3, [pc, #124]	@ (80011d4 <MX_GPIO_Init+0xa0>)
 8001158:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800115a:	f003 0302 	and.w	r3, r3, #2
 800115e:	60bb      	str	r3, [r7, #8]
 8001160:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001162:	4b1c      	ldr	r3, [pc, #112]	@ (80011d4 <MX_GPIO_Init+0xa0>)
 8001164:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001166:	4a1b      	ldr	r2, [pc, #108]	@ (80011d4 <MX_GPIO_Init+0xa0>)
 8001168:	f043 0308 	orr.w	r3, r3, #8
 800116c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800116e:	4b19      	ldr	r3, [pc, #100]	@ (80011d4 <MX_GPIO_Init+0xa0>)
 8001170:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001172:	f003 0308 	and.w	r3, r3, #8
 8001176:	607b      	str	r3, [r7, #4]
 8001178:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(NSS_GPIO_Port, NSS_Pin, GPIO_PIN_SET);
 800117a:	2201      	movs	r2, #1
 800117c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8001180:	4815      	ldr	r0, [pc, #84]	@ (80011d8 <MX_GPIO_Init+0xa4>)
 8001182:	f000 fd7b 	bl	8001c7c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, TFT_CS_Pin|TFT_DC_Pin|TFT_RST_Pin, GPIO_PIN_RESET);
 8001186:	2200      	movs	r2, #0
 8001188:	21c1      	movs	r1, #193	@ 0xc1
 800118a:	4814      	ldr	r0, [pc, #80]	@ (80011dc <MX_GPIO_Init+0xa8>)
 800118c:	f000 fd76 	bl	8001c7c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : NSS_Pin */
  GPIO_InitStruct.Pin = NSS_Pin;
 8001190:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001194:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001196:	2301      	movs	r3, #1
 8001198:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800119a:	2300      	movs	r3, #0
 800119c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800119e:	2300      	movs	r3, #0
 80011a0:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(NSS_GPIO_Port, &GPIO_InitStruct);
 80011a2:	f107 030c 	add.w	r3, r7, #12
 80011a6:	4619      	mov	r1, r3
 80011a8:	480b      	ldr	r0, [pc, #44]	@ (80011d8 <MX_GPIO_Init+0xa4>)
 80011aa:	f000 fbd5 	bl	8001958 <HAL_GPIO_Init>

  /*Configure GPIO pins : TFT_CS_Pin TFT_DC_Pin TFT_RST_Pin */
  GPIO_InitStruct.Pin = TFT_CS_Pin|TFT_DC_Pin|TFT_RST_Pin;
 80011ae:	23c1      	movs	r3, #193	@ 0xc1
 80011b0:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80011b2:	2301      	movs	r3, #1
 80011b4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011b6:	2300      	movs	r3, #0
 80011b8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011ba:	2300      	movs	r3, #0
 80011bc:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80011be:	f107 030c 	add.w	r3, r7, #12
 80011c2:	4619      	mov	r1, r3
 80011c4:	4805      	ldr	r0, [pc, #20]	@ (80011dc <MX_GPIO_Init+0xa8>)
 80011c6:	f000 fbc7 	bl	8001958 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80011ca:	bf00      	nop
 80011cc:	3720      	adds	r7, #32
 80011ce:	46bd      	mov	sp, r7
 80011d0:	bd80      	pop	{r7, pc}
 80011d2:	bf00      	nop
 80011d4:	40021000 	.word	0x40021000
 80011d8:	48000400 	.word	0x48000400
 80011dc:	48000c00 	.word	0x48000c00

080011e0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80011e0:	b480      	push	{r7}
 80011e2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80011e4:	b672      	cpsid	i
}
 80011e6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80011e8:	bf00      	nop
 80011ea:	e7fd      	b.n	80011e8 <Error_Handler+0x8>

080011ec <HAL_MspInit>:
 80011ec:	b480      	push	{r7}
 80011ee:	b083      	sub	sp, #12
 80011f0:	af00      	add	r7, sp, #0
 80011f2:	4b0f      	ldr	r3, [pc, #60]	@ (8001230 <HAL_MspInit+0x44>)
 80011f4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80011f6:	4a0e      	ldr	r2, [pc, #56]	@ (8001230 <HAL_MspInit+0x44>)
 80011f8:	f043 0301 	orr.w	r3, r3, #1
 80011fc:	6613      	str	r3, [r2, #96]	@ 0x60
 80011fe:	4b0c      	ldr	r3, [pc, #48]	@ (8001230 <HAL_MspInit+0x44>)
 8001200:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001202:	f003 0301 	and.w	r3, r3, #1
 8001206:	607b      	str	r3, [r7, #4]
 8001208:	687b      	ldr	r3, [r7, #4]
 800120a:	4b09      	ldr	r3, [pc, #36]	@ (8001230 <HAL_MspInit+0x44>)
 800120c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800120e:	4a08      	ldr	r2, [pc, #32]	@ (8001230 <HAL_MspInit+0x44>)
 8001210:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001214:	6593      	str	r3, [r2, #88]	@ 0x58
 8001216:	4b06      	ldr	r3, [pc, #24]	@ (8001230 <HAL_MspInit+0x44>)
 8001218:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800121a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800121e:	603b      	str	r3, [r7, #0]
 8001220:	683b      	ldr	r3, [r7, #0]
 8001222:	bf00      	nop
 8001224:	370c      	adds	r7, #12
 8001226:	46bd      	mov	sp, r7
 8001228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800122c:	4770      	bx	lr
 800122e:	bf00      	nop
 8001230:	40021000 	.word	0x40021000

08001234 <HAL_SPI_MspInit>:
 8001234:	b580      	push	{r7, lr}
 8001236:	b08c      	sub	sp, #48	@ 0x30
 8001238:	af00      	add	r7, sp, #0
 800123a:	6078      	str	r0, [r7, #4]
 800123c:	f107 031c 	add.w	r3, r7, #28
 8001240:	2200      	movs	r2, #0
 8001242:	601a      	str	r2, [r3, #0]
 8001244:	605a      	str	r2, [r3, #4]
 8001246:	609a      	str	r2, [r3, #8]
 8001248:	60da      	str	r2, [r3, #12]
 800124a:	611a      	str	r2, [r3, #16]
 800124c:	687b      	ldr	r3, [r7, #4]
 800124e:	681b      	ldr	r3, [r3, #0]
 8001250:	4a2e      	ldr	r2, [pc, #184]	@ (800130c <HAL_SPI_MspInit+0xd8>)
 8001252:	4293      	cmp	r3, r2
 8001254:	d128      	bne.n	80012a8 <HAL_SPI_MspInit+0x74>
 8001256:	4b2e      	ldr	r3, [pc, #184]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 8001258:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800125a:	4a2d      	ldr	r2, [pc, #180]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 800125c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001260:	6593      	str	r3, [r2, #88]	@ 0x58
 8001262:	4b2b      	ldr	r3, [pc, #172]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 8001264:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001266:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800126a:	61bb      	str	r3, [r7, #24]
 800126c:	69bb      	ldr	r3, [r7, #24]
 800126e:	4b28      	ldr	r3, [pc, #160]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 8001270:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001272:	4a27      	ldr	r2, [pc, #156]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 8001274:	f043 0308 	orr.w	r3, r3, #8
 8001278:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800127a:	4b25      	ldr	r3, [pc, #148]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 800127c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800127e:	f003 0308 	and.w	r3, r3, #8
 8001282:	617b      	str	r3, [r7, #20]
 8001284:	697b      	ldr	r3, [r7, #20]
 8001286:	231a      	movs	r3, #26
 8001288:	61fb      	str	r3, [r7, #28]
 800128a:	2302      	movs	r3, #2
 800128c:	623b      	str	r3, [r7, #32]
 800128e:	2300      	movs	r3, #0
 8001290:	627b      	str	r3, [r7, #36]	@ 0x24
 8001292:	2303      	movs	r3, #3
 8001294:	62bb      	str	r3, [r7, #40]	@ 0x28
 8001296:	2305      	movs	r3, #5
 8001298:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800129a:	f107 031c 	add.w	r3, r7, #28
 800129e:	4619      	mov	r1, r3
 80012a0:	481c      	ldr	r0, [pc, #112]	@ (8001314 <HAL_SPI_MspInit+0xe0>)
 80012a2:	f000 fb59 	bl	8001958 <HAL_GPIO_Init>
 80012a6:	e02c      	b.n	8001302 <HAL_SPI_MspInit+0xce>
 80012a8:	687b      	ldr	r3, [r7, #4]
 80012aa:	681b      	ldr	r3, [r3, #0]
 80012ac:	4a1a      	ldr	r2, [pc, #104]	@ (8001318 <HAL_SPI_MspInit+0xe4>)
 80012ae:	4293      	cmp	r3, r2
 80012b0:	d127      	bne.n	8001302 <HAL_SPI_MspInit+0xce>
 80012b2:	4b17      	ldr	r3, [pc, #92]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 80012b4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80012b6:	4a16      	ldr	r2, [pc, #88]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 80012b8:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80012bc:	6593      	str	r3, [r2, #88]	@ 0x58
 80012be:	4b14      	ldr	r3, [pc, #80]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 80012c0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80012c2:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80012c6:	613b      	str	r3, [r7, #16]
 80012c8:	693b      	ldr	r3, [r7, #16]
 80012ca:	4b11      	ldr	r3, [pc, #68]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 80012cc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80012ce:	4a10      	ldr	r2, [pc, #64]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 80012d0:	f043 0302 	orr.w	r3, r3, #2
 80012d4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80012d6:	4b0e      	ldr	r3, [pc, #56]	@ (8001310 <HAL_SPI_MspInit+0xdc>)
 80012d8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80012da:	f003 0302 	and.w	r3, r3, #2
 80012de:	60fb      	str	r3, [r7, #12]
 80012e0:	68fb      	ldr	r3, [r7, #12]
 80012e2:	2338      	movs	r3, #56	@ 0x38
 80012e4:	61fb      	str	r3, [r7, #28]
 80012e6:	2302      	movs	r3, #2
 80012e8:	623b      	str	r3, [r7, #32]
 80012ea:	2300      	movs	r3, #0
 80012ec:	627b      	str	r3, [r7, #36]	@ 0x24
 80012ee:	2303      	movs	r3, #3
 80012f0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80012f2:	2306      	movs	r3, #6
 80012f4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80012f6:	f107 031c 	add.w	r3, r7, #28
 80012fa:	4619      	mov	r1, r3
 80012fc:	4807      	ldr	r0, [pc, #28]	@ (800131c <HAL_SPI_MspInit+0xe8>)
 80012fe:	f000 fb2b 	bl	8001958 <HAL_GPIO_Init>
 8001302:	bf00      	nop
 8001304:	3730      	adds	r7, #48	@ 0x30
 8001306:	46bd      	mov	sp, r7
 8001308:	bd80      	pop	{r7, pc}
 800130a:	bf00      	nop
 800130c:	40003800 	.word	0x40003800
 8001310:	40021000 	.word	0x40021000
 8001314:	48000c00 	.word	0x48000c00
 8001318:	40003c00 	.word	0x40003c00
 800131c:	48000400 	.word	0x48000400

08001320 <NMI_Handler>:
 8001320:	b480      	push	{r7}
 8001322:	af00      	add	r7, sp, #0
 8001324:	bf00      	nop
 8001326:	e7fd      	b.n	8001324 <NMI_Handler+0x4>

08001328 <HardFault_Handler>:
 8001328:	b480      	push	{r7}
 800132a:	af00      	add	r7, sp, #0
 800132c:	bf00      	nop
 800132e:	e7fd      	b.n	800132c <HardFault_Handler+0x4>

08001330 <MemManage_Handler>:
 8001330:	b480      	push	{r7}
 8001332:	af00      	add	r7, sp, #0
 8001334:	bf00      	nop
 8001336:	e7fd      	b.n	8001334 <MemManage_Handler+0x4>

08001338 <BusFault_Handler>:
 8001338:	b480      	push	{r7}
 800133a:	af00      	add	r7, sp, #0
 800133c:	bf00      	nop
 800133e:	e7fd      	b.n	800133c <BusFault_Handler+0x4>

08001340 <UsageFault_Handler>:
 8001340:	b480      	push	{r7}
 8001342:	af00      	add	r7, sp, #0
 8001344:	bf00      	nop
 8001346:	e7fd      	b.n	8001344 <UsageFault_Handler+0x4>

08001348 <SVC_Handler>:
 8001348:	b480      	push	{r7}
 800134a:	af00      	add	r7, sp, #0
 800134c:	bf00      	nop
 800134e:	46bd      	mov	sp, r7
 8001350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001354:	4770      	bx	lr

08001356 <DebugMon_Handler>:
 8001356:	b480      	push	{r7}
 8001358:	af00      	add	r7, sp, #0
 800135a:	bf00      	nop
 800135c:	46bd      	mov	sp, r7
 800135e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001362:	4770      	bx	lr

08001364 <PendSV_Handler>:
 8001364:	b480      	push	{r7}
 8001366:	af00      	add	r7, sp, #0
 8001368:	bf00      	nop
 800136a:	46bd      	mov	sp, r7
 800136c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001370:	4770      	bx	lr

08001372 <SysTick_Handler>:
 8001372:	b580      	push	{r7, lr}
 8001374:	af00      	add	r7, sp, #0
 8001376:	f000 f9c5 	bl	8001704 <HAL_IncTick>
 800137a:	bf00      	nop
 800137c:	bd80      	pop	{r7, pc}
	...

08001380 <_sbrk>:
 8001380:	b580      	push	{r7, lr}
 8001382:	b086      	sub	sp, #24
 8001384:	af00      	add	r7, sp, #0
 8001386:	6078      	str	r0, [r7, #4]
 8001388:	4a14      	ldr	r2, [pc, #80]	@ (80013dc <_sbrk+0x5c>)
 800138a:	4b15      	ldr	r3, [pc, #84]	@ (80013e0 <_sbrk+0x60>)
 800138c:	1ad3      	subs	r3, r2, r3
 800138e:	617b      	str	r3, [r7, #20]
 8001390:	697b      	ldr	r3, [r7, #20]
 8001392:	613b      	str	r3, [r7, #16]
 8001394:	4b13      	ldr	r3, [pc, #76]	@ (80013e4 <_sbrk+0x64>)
 8001396:	681b      	ldr	r3, [r3, #0]
 8001398:	2b00      	cmp	r3, #0
 800139a:	d102      	bne.n	80013a2 <_sbrk+0x22>
 800139c:	4b11      	ldr	r3, [pc, #68]	@ (80013e4 <_sbrk+0x64>)
 800139e:	4a12      	ldr	r2, [pc, #72]	@ (80013e8 <_sbrk+0x68>)
 80013a0:	601a      	str	r2, [r3, #0]
 80013a2:	4b10      	ldr	r3, [pc, #64]	@ (80013e4 <_sbrk+0x64>)
 80013a4:	681a      	ldr	r2, [r3, #0]
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	4413      	add	r3, r2
 80013aa:	693a      	ldr	r2, [r7, #16]
 80013ac:	429a      	cmp	r2, r3
 80013ae:	d207      	bcs.n	80013c0 <_sbrk+0x40>
 80013b0:	f002 f9a6 	bl	8003700 <__errno>
 80013b4:	4603      	mov	r3, r0
 80013b6:	220c      	movs	r2, #12
 80013b8:	601a      	str	r2, [r3, #0]
 80013ba:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80013be:	e009      	b.n	80013d4 <_sbrk+0x54>
 80013c0:	4b08      	ldr	r3, [pc, #32]	@ (80013e4 <_sbrk+0x64>)
 80013c2:	681b      	ldr	r3, [r3, #0]
 80013c4:	60fb      	str	r3, [r7, #12]
 80013c6:	4b07      	ldr	r3, [pc, #28]	@ (80013e4 <_sbrk+0x64>)
 80013c8:	681a      	ldr	r2, [r3, #0]
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	4413      	add	r3, r2
 80013ce:	4a05      	ldr	r2, [pc, #20]	@ (80013e4 <_sbrk+0x64>)
 80013d0:	6013      	str	r3, [r2, #0]
 80013d2:	68fb      	ldr	r3, [r7, #12]
 80013d4:	4618      	mov	r0, r3
 80013d6:	3718      	adds	r7, #24
 80013d8:	46bd      	mov	sp, r7
 80013da:	bd80      	pop	{r7, pc}
 80013dc:	200a0000 	.word	0x200a0000
 80013e0:	00000400 	.word	0x00000400
 80013e4:	2000015c 	.word	0x2000015c
 80013e8:	200002b0 	.word	0x200002b0

080013ec <SystemInit>:
 80013ec:	b480      	push	{r7}
 80013ee:	af00      	add	r7, sp, #0
 80013f0:	4b06      	ldr	r3, [pc, #24]	@ (800140c <SystemInit+0x20>)
 80013f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80013f6:	4a05      	ldr	r2, [pc, #20]	@ (800140c <SystemInit+0x20>)
 80013f8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80013fc:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001400:	bf00      	nop
 8001402:	46bd      	mov	sp, r7
 8001404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001408:	4770      	bx	lr
 800140a:	bf00      	nop
 800140c:	e000ed00 	.word	0xe000ed00

08001410 <remap>:
 8001410:	b480      	push	{r7}
 8001412:	b087      	sub	sp, #28
 8001414:	af00      	add	r7, sp, #0
 8001416:	ed87 0a05 	vstr	s0, [r7, #20]
 800141a:	edc7 0a04 	vstr	s1, [r7, #16]
 800141e:	ed87 1a03 	vstr	s2, [r7, #12]
 8001422:	edc7 1a02 	vstr	s3, [r7, #8]
 8001426:	ed87 2a01 	vstr	s4, [r7, #4]
 800142a:	ed97 7a05 	vldr	s14, [r7, #20]
 800142e:	edd7 7a04 	vldr	s15, [r7, #16]
 8001432:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001436:	edd7 6a01 	vldr	s13, [r7, #4]
 800143a:	edd7 7a02 	vldr	s15, [r7, #8]
 800143e:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8001442:	ee67 6a27 	vmul.f32	s13, s14, s15
 8001446:	ed97 7a03 	vldr	s14, [r7, #12]
 800144a:	edd7 7a04 	vldr	s15, [r7, #16]
 800144e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001452:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8001456:	edd7 7a02 	vldr	s15, [r7, #8]
 800145a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800145e:	eeb0 0a67 	vmov.f32	s0, s15
 8001462:	371c      	adds	r7, #28
 8001464:	46bd      	mov	sp, r7
 8001466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800146a:	4770      	bx	lr

0800146c <getRaw>:
 800146c:	b580      	push	{r7, lr}
 800146e:	b086      	sub	sp, #24
 8001470:	af02      	add	r7, sp, #8
 8001472:	4603      	mov	r3, r0
 8001474:	71fb      	strb	r3, [r7, #7]
 8001476:	2200      	movs	r2, #0
 8001478:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800147c:	481c      	ldr	r0, [pc, #112]	@ (80014f0 <getRaw+0x84>)
 800147e:	f000 fbfd 	bl	8001c7c <HAL_GPIO_WritePin>
 8001482:	2001      	movs	r0, #1
 8001484:	f000 f95e 	bl	8001744 <HAL_Delay>
 8001488:	1df9      	adds	r1, r7, #7
 800148a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800148e:	2201      	movs	r2, #1
 8001490:	4818      	ldr	r0, [pc, #96]	@ (80014f4 <getRaw+0x88>)
 8001492:	f001 fc12 	bl	8002cba <HAL_SPI_Transmit>
 8001496:	2300      	movs	r3, #0
 8001498:	71fb      	strb	r3, [r7, #7]
 800149a:	f107 020b 	add.w	r2, r7, #11
 800149e:	1df9      	adds	r1, r7, #7
 80014a0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80014a4:	9300      	str	r3, [sp, #0]
 80014a6:	2301      	movs	r3, #1
 80014a8:	4812      	ldr	r0, [pc, #72]	@ (80014f4 <getRaw+0x88>)
 80014aa:	f001 fd7b 	bl	8002fa4 <HAL_SPI_TransmitReceive>
 80014ae:	7afb      	ldrb	r3, [r7, #11]
 80014b0:	81fb      	strh	r3, [r7, #14]
 80014b2:	2300      	movs	r3, #0
 80014b4:	71fb      	strb	r3, [r7, #7]
 80014b6:	f107 020b 	add.w	r2, r7, #11
 80014ba:	1df9      	adds	r1, r7, #7
 80014bc:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80014c0:	9300      	str	r3, [sp, #0]
 80014c2:	2301      	movs	r3, #1
 80014c4:	480b      	ldr	r0, [pc, #44]	@ (80014f4 <getRaw+0x88>)
 80014c6:	f001 fd6d 	bl	8002fa4 <HAL_SPI_TransmitReceive>
 80014ca:	7afb      	ldrb	r3, [r7, #11]
 80014cc:	81bb      	strh	r3, [r7, #12]
 80014ce:	2201      	movs	r2, #1
 80014d0:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 80014d4:	4806      	ldr	r0, [pc, #24]	@ (80014f0 <getRaw+0x84>)
 80014d6:	f000 fbd1 	bl	8001c7c <HAL_GPIO_WritePin>
 80014da:	89fb      	ldrh	r3, [r7, #14]
 80014dc:	021a      	lsls	r2, r3, #8
 80014de:	89bb      	ldrh	r3, [r7, #12]
 80014e0:	4313      	orrs	r3, r2
 80014e2:	10db      	asrs	r3, r3, #3
 80014e4:	b29b      	uxth	r3, r3
 80014e6:	4618      	mov	r0, r3
 80014e8:	3710      	adds	r7, #16
 80014ea:	46bd      	mov	sp, r7
 80014ec:	bd80      	pop	{r7, pc}
 80014ee:	bf00      	nop
 80014f0:	48000400 	.word	0x48000400
 80014f4:	200000f8 	.word	0x200000f8

080014f8 <X>:
 80014f8:	b580      	push	{r7, lr}
 80014fa:	b082      	sub	sp, #8
 80014fc:	af00      	add	r7, sp, #0
 80014fe:	20d0      	movs	r0, #208	@ 0xd0
 8001500:	f7ff ffb4 	bl	800146c <getRaw>
 8001504:	4603      	mov	r3, r0
 8001506:	ee07 3a90 	vmov	s15, r3
 800150a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800150e:	ed9f 2a13 	vldr	s4, [pc, #76]	@ 800155c <X+0x64>
 8001512:	eddf 1a13 	vldr	s3, [pc, #76]	@ 8001560 <X+0x68>
 8001516:	ed9f 1a13 	vldr	s2, [pc, #76]	@ 8001564 <X+0x6c>
 800151a:	eddf 0a13 	vldr	s1, [pc, #76]	@ 8001568 <X+0x70>
 800151e:	eeb0 0a67 	vmov.f32	s0, s15
 8001522:	f7ff ff75 	bl	8001410 <remap>
 8001526:	eef0 7a40 	vmov.f32	s15, s0
 800152a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800152e:	ee17 3a90 	vmov	r3, s15
 8001532:	80fb      	strh	r3, [r7, #6]
 8001534:	88fb      	ldrh	r3, [r7, #6]
 8001536:	f5c3 739f 	rsb	r3, r3, #318	@ 0x13e
 800153a:	3301      	adds	r3, #1
 800153c:	80fb      	strh	r3, [r7, #6]
 800153e:	88fb      	ldrh	r3, [r7, #6]
 8001540:	2b00      	cmp	r3, #0
 8001542:	d005      	beq.n	8001550 <X+0x58>
 8001544:	88fb      	ldrh	r3, [r7, #6]
 8001546:	f5b3 7f9f 	cmp.w	r3, #318	@ 0x13e
 800154a:	d801      	bhi.n	8001550 <X+0x58>
 800154c:	88fb      	ldrh	r3, [r7, #6]
 800154e:	e000      	b.n	8001552 <X+0x5a>
 8001550:	2300      	movs	r3, #0
 8001552:	4618      	mov	r0, r3
 8001554:	3708      	adds	r7, #8
 8001556:	46bd      	mov	sp, r7
 8001558:	bd80      	pop	{r7, pc}
 800155a:	bf00      	nop
 800155c:	439f8000 	.word	0x439f8000
 8001560:	00000000 	.word	0x00000000
 8001564:	456d8000 	.word	0x456d8000
 8001568:	43960000 	.word	0x43960000

0800156c <Y>:
 800156c:	b580      	push	{r7, lr}
 800156e:	b082      	sub	sp, #8
 8001570:	af00      	add	r7, sp, #0
 8001572:	2090      	movs	r0, #144	@ 0x90
 8001574:	f7ff ff7a 	bl	800146c <getRaw>
 8001578:	4603      	mov	r3, r0
 800157a:	ee07 3a90 	vmov	s15, r3
 800157e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001582:	ed9f 2a13 	vldr	s4, [pc, #76]	@ 80015d0 <Y+0x64>
 8001586:	eddf 1a13 	vldr	s3, [pc, #76]	@ 80015d4 <Y+0x68>
 800158a:	ed9f 1a13 	vldr	s2, [pc, #76]	@ 80015d8 <Y+0x6c>
 800158e:	eddf 0a13 	vldr	s1, [pc, #76]	@ 80015dc <Y+0x70>
 8001592:	eeb0 0a67 	vmov.f32	s0, s15
 8001596:	f7ff ff3b 	bl	8001410 <remap>
 800159a:	eef0 7a40 	vmov.f32	s15, s0
 800159e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80015a2:	ee17 3a90 	vmov	r3, s15
 80015a6:	80fb      	strh	r3, [r7, #6]
 80015a8:	88fb      	ldrh	r3, [r7, #6]
 80015aa:	f5c3 73ef 	rsb	r3, r3, #478	@ 0x1de
 80015ae:	3301      	adds	r3, #1
 80015b0:	80fb      	strh	r3, [r7, #6]
 80015b2:	88fb      	ldrh	r3, [r7, #6]
 80015b4:	2b00      	cmp	r3, #0
 80015b6:	d005      	beq.n	80015c4 <Y+0x58>
 80015b8:	88fb      	ldrh	r3, [r7, #6]
 80015ba:	f5b3 7fef 	cmp.w	r3, #478	@ 0x1de
 80015be:	d801      	bhi.n	80015c4 <Y+0x58>
 80015c0:	88fb      	ldrh	r3, [r7, #6]
 80015c2:	e000      	b.n	80015c6 <Y+0x5a>
 80015c4:	2300      	movs	r3, #0
 80015c6:	4618      	mov	r0, r3
 80015c8:	3708      	adds	r7, #8
 80015ca:	46bd      	mov	sp, r7
 80015cc:	bd80      	pop	{r7, pc}
 80015ce:	bf00      	nop
 80015d0:	43ef8000 	.word	0x43ef8000
 80015d4:	00000000 	.word	0x00000000
 80015d8:	456a6000 	.word	0x456a6000
 80015dc:	43c80000 	.word	0x43c80000

080015e0 <getX>:
 80015e0:	b580      	push	{r7, lr}
 80015e2:	b082      	sub	sp, #8
 80015e4:	af00      	add	r7, sp, #0
 80015e6:	f7ff ffc1 	bl	800156c <Y>
 80015ea:	4603      	mov	r3, r0
 80015ec:	4618      	mov	r0, r3
 80015ee:	3708      	adds	r7, #8
 80015f0:	46bd      	mov	sp, r7
 80015f2:	bd80      	pop	{r7, pc}

080015f4 <getY>:
 80015f4:	b580      	push	{r7, lr}
 80015f6:	b082      	sub	sp, #8
 80015f8:	af00      	add	r7, sp, #0
 80015fa:	f7ff ff7d 	bl	80014f8 <X>
 80015fe:	4603      	mov	r3, r0
 8001600:	4618      	mov	r0, r3
 8001602:	3708      	adds	r7, #8
 8001604:	46bd      	mov	sp, r7
 8001606:	bd80      	pop	{r7, pc}

08001608 <Reset_Handler>:
 8001608:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001640 <LoopForever+0x2>
 800160c:	f7ff feee 	bl	80013ec <SystemInit>
 8001610:	480c      	ldr	r0, [pc, #48]	@ (8001644 <LoopForever+0x6>)
 8001612:	490d      	ldr	r1, [pc, #52]	@ (8001648 <LoopForever+0xa>)
 8001614:	4a0d      	ldr	r2, [pc, #52]	@ (800164c <LoopForever+0xe>)
 8001616:	2300      	movs	r3, #0
 8001618:	e002      	b.n	8001620 <LoopCopyDataInit>

0800161a <CopyDataInit>:
 800161a:	58d4      	ldr	r4, [r2, r3]
 800161c:	50c4      	str	r4, [r0, r3]
 800161e:	3304      	adds	r3, #4

08001620 <LoopCopyDataInit>:
 8001620:	18c4      	adds	r4, r0, r3
 8001622:	428c      	cmp	r4, r1
 8001624:	d3f9      	bcc.n	800161a <CopyDataInit>
 8001626:	4a0a      	ldr	r2, [pc, #40]	@ (8001650 <LoopForever+0x12>)
 8001628:	4c0a      	ldr	r4, [pc, #40]	@ (8001654 <LoopForever+0x16>)
 800162a:	2300      	movs	r3, #0
 800162c:	e001      	b.n	8001632 <LoopFillZerobss>

0800162e <FillZerobss>:
 800162e:	6013      	str	r3, [r2, #0]
 8001630:	3204      	adds	r2, #4

08001632 <LoopFillZerobss>:
 8001632:	42a2      	cmp	r2, r4
 8001634:	d3fb      	bcc.n	800162e <FillZerobss>
 8001636:	f002 f869 	bl	800370c <__libc_init_array>
 800163a:	f7ff fc55 	bl	8000ee8 <main>

0800163e <LoopForever>:
 800163e:	e7fe      	b.n	800163e <LoopForever>
 8001640:	200a0000 	.word	0x200a0000
 8001644:	20000000 	.word	0x20000000
 8001648:	20000060 	.word	0x20000060
 800164c:	0800460c 	.word	0x0800460c
 8001650:	20000060 	.word	0x20000060
 8001654:	200002ac 	.word	0x200002ac

08001658 <ADC1_IRQHandler>:
 8001658:	e7fe      	b.n	8001658 <ADC1_IRQHandler>

0800165a <HAL_Init>:
 800165a:	b580      	push	{r7, lr}
 800165c:	b082      	sub	sp, #8
 800165e:	af00      	add	r7, sp, #0
 8001660:	2300      	movs	r3, #0
 8001662:	71fb      	strb	r3, [r7, #7]
 8001664:	2003      	movs	r0, #3
 8001666:	f000 f943 	bl	80018f0 <HAL_NVIC_SetPriorityGrouping>
 800166a:	200f      	movs	r0, #15
 800166c:	f000 f80e 	bl	800168c <HAL_InitTick>
 8001670:	4603      	mov	r3, r0
 8001672:	2b00      	cmp	r3, #0
 8001674:	d002      	beq.n	800167c <HAL_Init+0x22>
 8001676:	2301      	movs	r3, #1
 8001678:	71fb      	strb	r3, [r7, #7]
 800167a:	e001      	b.n	8001680 <HAL_Init+0x26>
 800167c:	f7ff fdb6 	bl	80011ec <HAL_MspInit>
 8001680:	79fb      	ldrb	r3, [r7, #7]
 8001682:	4618      	mov	r0, r3
 8001684:	3708      	adds	r7, #8
 8001686:	46bd      	mov	sp, r7
 8001688:	bd80      	pop	{r7, pc}
	...

0800168c <HAL_InitTick>:
 800168c:	b580      	push	{r7, lr}
 800168e:	b084      	sub	sp, #16
 8001690:	af00      	add	r7, sp, #0
 8001692:	6078      	str	r0, [r7, #4]
 8001694:	2300      	movs	r3, #0
 8001696:	73fb      	strb	r3, [r7, #15]
 8001698:	4b17      	ldr	r3, [pc, #92]	@ (80016f8 <HAL_InitTick+0x6c>)
 800169a:	781b      	ldrb	r3, [r3, #0]
 800169c:	2b00      	cmp	r3, #0
 800169e:	d023      	beq.n	80016e8 <HAL_InitTick+0x5c>
 80016a0:	4b16      	ldr	r3, [pc, #88]	@ (80016fc <HAL_InitTick+0x70>)
 80016a2:	681a      	ldr	r2, [r3, #0]
 80016a4:	4b14      	ldr	r3, [pc, #80]	@ (80016f8 <HAL_InitTick+0x6c>)
 80016a6:	781b      	ldrb	r3, [r3, #0]
 80016a8:	4619      	mov	r1, r3
 80016aa:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80016ae:	fbb3 f3f1 	udiv	r3, r3, r1
 80016b2:	fbb2 f3f3 	udiv	r3, r2, r3
 80016b6:	4618      	mov	r0, r3
 80016b8:	f000 f941 	bl	800193e <HAL_SYSTICK_Config>
 80016bc:	4603      	mov	r3, r0
 80016be:	2b00      	cmp	r3, #0
 80016c0:	d10f      	bne.n	80016e2 <HAL_InitTick+0x56>
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	2b0f      	cmp	r3, #15
 80016c6:	d809      	bhi.n	80016dc <HAL_InitTick+0x50>
 80016c8:	2200      	movs	r2, #0
 80016ca:	6879      	ldr	r1, [r7, #4]
 80016cc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80016d0:	f000 f919 	bl	8001906 <HAL_NVIC_SetPriority>
 80016d4:	4a0a      	ldr	r2, [pc, #40]	@ (8001700 <HAL_InitTick+0x74>)
 80016d6:	687b      	ldr	r3, [r7, #4]
 80016d8:	6013      	str	r3, [r2, #0]
 80016da:	e007      	b.n	80016ec <HAL_InitTick+0x60>
 80016dc:	2301      	movs	r3, #1
 80016de:	73fb      	strb	r3, [r7, #15]
 80016e0:	e004      	b.n	80016ec <HAL_InitTick+0x60>
 80016e2:	2301      	movs	r3, #1
 80016e4:	73fb      	strb	r3, [r7, #15]
 80016e6:	e001      	b.n	80016ec <HAL_InitTick+0x60>
 80016e8:	2301      	movs	r3, #1
 80016ea:	73fb      	strb	r3, [r7, #15]
 80016ec:	7bfb      	ldrb	r3, [r7, #15]
 80016ee:	4618      	mov	r0, r3
 80016f0:	3710      	adds	r7, #16
 80016f2:	46bd      	mov	sp, r7
 80016f4:	bd80      	pop	{r7, pc}
 80016f6:	bf00      	nop
 80016f8:	2000000c 	.word	0x2000000c
 80016fc:	20000004 	.word	0x20000004
 8001700:	20000008 	.word	0x20000008

08001704 <HAL_IncTick>:
 8001704:	b480      	push	{r7}
 8001706:	af00      	add	r7, sp, #0
 8001708:	4b06      	ldr	r3, [pc, #24]	@ (8001724 <HAL_IncTick+0x20>)
 800170a:	781b      	ldrb	r3, [r3, #0]
 800170c:	461a      	mov	r2, r3
 800170e:	4b06      	ldr	r3, [pc, #24]	@ (8001728 <HAL_IncTick+0x24>)
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	4413      	add	r3, r2
 8001714:	4a04      	ldr	r2, [pc, #16]	@ (8001728 <HAL_IncTick+0x24>)
 8001716:	6013      	str	r3, [r2, #0]
 8001718:	bf00      	nop
 800171a:	46bd      	mov	sp, r7
 800171c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001720:	4770      	bx	lr
 8001722:	bf00      	nop
 8001724:	2000000c 	.word	0x2000000c
 8001728:	20000160 	.word	0x20000160

0800172c <HAL_GetTick>:
 800172c:	b480      	push	{r7}
 800172e:	af00      	add	r7, sp, #0
 8001730:	4b03      	ldr	r3, [pc, #12]	@ (8001740 <HAL_GetTick+0x14>)
 8001732:	681b      	ldr	r3, [r3, #0]
 8001734:	4618      	mov	r0, r3
 8001736:	46bd      	mov	sp, r7
 8001738:	f85d 7b04 	ldr.w	r7, [sp], #4
 800173c:	4770      	bx	lr
 800173e:	bf00      	nop
 8001740:	20000160 	.word	0x20000160

08001744 <HAL_Delay>:
 8001744:	b580      	push	{r7, lr}
 8001746:	b084      	sub	sp, #16
 8001748:	af00      	add	r7, sp, #0
 800174a:	6078      	str	r0, [r7, #4]
 800174c:	f7ff ffee 	bl	800172c <HAL_GetTick>
 8001750:	60b8      	str	r0, [r7, #8]
 8001752:	687b      	ldr	r3, [r7, #4]
 8001754:	60fb      	str	r3, [r7, #12]
 8001756:	68fb      	ldr	r3, [r7, #12]
 8001758:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800175c:	d005      	beq.n	800176a <HAL_Delay+0x26>
 800175e:	4b0a      	ldr	r3, [pc, #40]	@ (8001788 <HAL_Delay+0x44>)
 8001760:	781b      	ldrb	r3, [r3, #0]
 8001762:	461a      	mov	r2, r3
 8001764:	68fb      	ldr	r3, [r7, #12]
 8001766:	4413      	add	r3, r2
 8001768:	60fb      	str	r3, [r7, #12]
 800176a:	bf00      	nop
 800176c:	f7ff ffde 	bl	800172c <HAL_GetTick>
 8001770:	4602      	mov	r2, r0
 8001772:	68bb      	ldr	r3, [r7, #8]
 8001774:	1ad3      	subs	r3, r2, r3
 8001776:	68fa      	ldr	r2, [r7, #12]
 8001778:	429a      	cmp	r2, r3
 800177a:	d8f7      	bhi.n	800176c <HAL_Delay+0x28>
 800177c:	bf00      	nop
 800177e:	bf00      	nop
 8001780:	3710      	adds	r7, #16
 8001782:	46bd      	mov	sp, r7
 8001784:	bd80      	pop	{r7, pc}
 8001786:	bf00      	nop
 8001788:	2000000c 	.word	0x2000000c

0800178c <__NVIC_SetPriorityGrouping>:
 800178c:	b480      	push	{r7}
 800178e:	b085      	sub	sp, #20
 8001790:	af00      	add	r7, sp, #0
 8001792:	6078      	str	r0, [r7, #4]
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	f003 0307 	and.w	r3, r3, #7
 800179a:	60fb      	str	r3, [r7, #12]
 800179c:	4b0c      	ldr	r3, [pc, #48]	@ (80017d0 <__NVIC_SetPriorityGrouping+0x44>)
 800179e:	68db      	ldr	r3, [r3, #12]
 80017a0:	60bb      	str	r3, [r7, #8]
 80017a2:	68ba      	ldr	r2, [r7, #8]
 80017a4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80017a8:	4013      	ands	r3, r2
 80017aa:	60bb      	str	r3, [r7, #8]
 80017ac:	68fb      	ldr	r3, [r7, #12]
 80017ae:	021a      	lsls	r2, r3, #8
 80017b0:	68bb      	ldr	r3, [r7, #8]
 80017b2:	4313      	orrs	r3, r2
 80017b4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80017b8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80017bc:	60bb      	str	r3, [r7, #8]
 80017be:	4a04      	ldr	r2, [pc, #16]	@ (80017d0 <__NVIC_SetPriorityGrouping+0x44>)
 80017c0:	68bb      	ldr	r3, [r7, #8]
 80017c2:	60d3      	str	r3, [r2, #12]
 80017c4:	bf00      	nop
 80017c6:	3714      	adds	r7, #20
 80017c8:	46bd      	mov	sp, r7
 80017ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ce:	4770      	bx	lr
 80017d0:	e000ed00 	.word	0xe000ed00

080017d4 <__NVIC_GetPriorityGrouping>:
 80017d4:	b480      	push	{r7}
 80017d6:	af00      	add	r7, sp, #0
 80017d8:	4b04      	ldr	r3, [pc, #16]	@ (80017ec <__NVIC_GetPriorityGrouping+0x18>)
 80017da:	68db      	ldr	r3, [r3, #12]
 80017dc:	0a1b      	lsrs	r3, r3, #8
 80017de:	f003 0307 	and.w	r3, r3, #7
 80017e2:	4618      	mov	r0, r3
 80017e4:	46bd      	mov	sp, r7
 80017e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ea:	4770      	bx	lr
 80017ec:	e000ed00 	.word	0xe000ed00

080017f0 <__NVIC_SetPriority>:
 80017f0:	b480      	push	{r7}
 80017f2:	b083      	sub	sp, #12
 80017f4:	af00      	add	r7, sp, #0
 80017f6:	4603      	mov	r3, r0
 80017f8:	6039      	str	r1, [r7, #0]
 80017fa:	71fb      	strb	r3, [r7, #7]
 80017fc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001800:	2b00      	cmp	r3, #0
 8001802:	db0a      	blt.n	800181a <__NVIC_SetPriority+0x2a>
 8001804:	683b      	ldr	r3, [r7, #0]
 8001806:	b2da      	uxtb	r2, r3
 8001808:	490c      	ldr	r1, [pc, #48]	@ (800183c <__NVIC_SetPriority+0x4c>)
 800180a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800180e:	0112      	lsls	r2, r2, #4
 8001810:	b2d2      	uxtb	r2, r2
 8001812:	440b      	add	r3, r1
 8001814:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001818:	e00a      	b.n	8001830 <__NVIC_SetPriority+0x40>
 800181a:	683b      	ldr	r3, [r7, #0]
 800181c:	b2da      	uxtb	r2, r3
 800181e:	4908      	ldr	r1, [pc, #32]	@ (8001840 <__NVIC_SetPriority+0x50>)
 8001820:	79fb      	ldrb	r3, [r7, #7]
 8001822:	f003 030f 	and.w	r3, r3, #15
 8001826:	3b04      	subs	r3, #4
 8001828:	0112      	lsls	r2, r2, #4
 800182a:	b2d2      	uxtb	r2, r2
 800182c:	440b      	add	r3, r1
 800182e:	761a      	strb	r2, [r3, #24]
 8001830:	bf00      	nop
 8001832:	370c      	adds	r7, #12
 8001834:	46bd      	mov	sp, r7
 8001836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800183a:	4770      	bx	lr
 800183c:	e000e100 	.word	0xe000e100
 8001840:	e000ed00 	.word	0xe000ed00

08001844 <NVIC_EncodePriority>:
 8001844:	b480      	push	{r7}
 8001846:	b089      	sub	sp, #36	@ 0x24
 8001848:	af00      	add	r7, sp, #0
 800184a:	60f8      	str	r0, [r7, #12]
 800184c:	60b9      	str	r1, [r7, #8]
 800184e:	607a      	str	r2, [r7, #4]
 8001850:	68fb      	ldr	r3, [r7, #12]
 8001852:	f003 0307 	and.w	r3, r3, #7
 8001856:	61fb      	str	r3, [r7, #28]
 8001858:	69fb      	ldr	r3, [r7, #28]
 800185a:	f1c3 0307 	rsb	r3, r3, #7
 800185e:	2b04      	cmp	r3, #4
 8001860:	bf28      	it	cs
 8001862:	2304      	movcs	r3, #4
 8001864:	61bb      	str	r3, [r7, #24]
 8001866:	69fb      	ldr	r3, [r7, #28]
 8001868:	3304      	adds	r3, #4
 800186a:	2b06      	cmp	r3, #6
 800186c:	d902      	bls.n	8001874 <NVIC_EncodePriority+0x30>
 800186e:	69fb      	ldr	r3, [r7, #28]
 8001870:	3b03      	subs	r3, #3
 8001872:	e000      	b.n	8001876 <NVIC_EncodePriority+0x32>
 8001874:	2300      	movs	r3, #0
 8001876:	617b      	str	r3, [r7, #20]
 8001878:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800187c:	69bb      	ldr	r3, [r7, #24]
 800187e:	fa02 f303 	lsl.w	r3, r2, r3
 8001882:	43da      	mvns	r2, r3
 8001884:	68bb      	ldr	r3, [r7, #8]
 8001886:	401a      	ands	r2, r3
 8001888:	697b      	ldr	r3, [r7, #20]
 800188a:	409a      	lsls	r2, r3
 800188c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8001890:	697b      	ldr	r3, [r7, #20]
 8001892:	fa01 f303 	lsl.w	r3, r1, r3
 8001896:	43d9      	mvns	r1, r3
 8001898:	687b      	ldr	r3, [r7, #4]
 800189a:	400b      	ands	r3, r1
 800189c:	4313      	orrs	r3, r2
 800189e:	4618      	mov	r0, r3
 80018a0:	3724      	adds	r7, #36	@ 0x24
 80018a2:	46bd      	mov	sp, r7
 80018a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018a8:	4770      	bx	lr
	...

080018ac <SysTick_Config>:
 80018ac:	b580      	push	{r7, lr}
 80018ae:	b082      	sub	sp, #8
 80018b0:	af00      	add	r7, sp, #0
 80018b2:	6078      	str	r0, [r7, #4]
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	3b01      	subs	r3, #1
 80018b8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80018bc:	d301      	bcc.n	80018c2 <SysTick_Config+0x16>
 80018be:	2301      	movs	r3, #1
 80018c0:	e00f      	b.n	80018e2 <SysTick_Config+0x36>
 80018c2:	4a0a      	ldr	r2, [pc, #40]	@ (80018ec <SysTick_Config+0x40>)
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	3b01      	subs	r3, #1
 80018c8:	6053      	str	r3, [r2, #4]
 80018ca:	210f      	movs	r1, #15
 80018cc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80018d0:	f7ff ff8e 	bl	80017f0 <__NVIC_SetPriority>
 80018d4:	4b05      	ldr	r3, [pc, #20]	@ (80018ec <SysTick_Config+0x40>)
 80018d6:	2200      	movs	r2, #0
 80018d8:	609a      	str	r2, [r3, #8]
 80018da:	4b04      	ldr	r3, [pc, #16]	@ (80018ec <SysTick_Config+0x40>)
 80018dc:	2207      	movs	r2, #7
 80018de:	601a      	str	r2, [r3, #0]
 80018e0:	2300      	movs	r3, #0
 80018e2:	4618      	mov	r0, r3
 80018e4:	3708      	adds	r7, #8
 80018e6:	46bd      	mov	sp, r7
 80018e8:	bd80      	pop	{r7, pc}
 80018ea:	bf00      	nop
 80018ec:	e000e010 	.word	0xe000e010

080018f0 <HAL_NVIC_SetPriorityGrouping>:
 80018f0:	b580      	push	{r7, lr}
 80018f2:	b082      	sub	sp, #8
 80018f4:	af00      	add	r7, sp, #0
 80018f6:	6078      	str	r0, [r7, #4]
 80018f8:	6878      	ldr	r0, [r7, #4]
 80018fa:	f7ff ff47 	bl	800178c <__NVIC_SetPriorityGrouping>
 80018fe:	bf00      	nop
 8001900:	3708      	adds	r7, #8
 8001902:	46bd      	mov	sp, r7
 8001904:	bd80      	pop	{r7, pc}

08001906 <HAL_NVIC_SetPriority>:
 8001906:	b580      	push	{r7, lr}
 8001908:	b086      	sub	sp, #24
 800190a:	af00      	add	r7, sp, #0
 800190c:	4603      	mov	r3, r0
 800190e:	60b9      	str	r1, [r7, #8]
 8001910:	607a      	str	r2, [r7, #4]
 8001912:	73fb      	strb	r3, [r7, #15]
 8001914:	2300      	movs	r3, #0
 8001916:	617b      	str	r3, [r7, #20]
 8001918:	f7ff ff5c 	bl	80017d4 <__NVIC_GetPriorityGrouping>
 800191c:	6178      	str	r0, [r7, #20]
 800191e:	687a      	ldr	r2, [r7, #4]
 8001920:	68b9      	ldr	r1, [r7, #8]
 8001922:	6978      	ldr	r0, [r7, #20]
 8001924:	f7ff ff8e 	bl	8001844 <NVIC_EncodePriority>
 8001928:	4602      	mov	r2, r0
 800192a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800192e:	4611      	mov	r1, r2
 8001930:	4618      	mov	r0, r3
 8001932:	f7ff ff5d 	bl	80017f0 <__NVIC_SetPriority>
 8001936:	bf00      	nop
 8001938:	3718      	adds	r7, #24
 800193a:	46bd      	mov	sp, r7
 800193c:	bd80      	pop	{r7, pc}

0800193e <HAL_SYSTICK_Config>:
 800193e:	b580      	push	{r7, lr}
 8001940:	b082      	sub	sp, #8
 8001942:	af00      	add	r7, sp, #0
 8001944:	6078      	str	r0, [r7, #4]
 8001946:	6878      	ldr	r0, [r7, #4]
 8001948:	f7ff ffb0 	bl	80018ac <SysTick_Config>
 800194c:	4603      	mov	r3, r0
 800194e:	4618      	mov	r0, r3
 8001950:	3708      	adds	r7, #8
 8001952:	46bd      	mov	sp, r7
 8001954:	bd80      	pop	{r7, pc}
	...

08001958 <HAL_GPIO_Init>:
 8001958:	b480      	push	{r7}
 800195a:	b087      	sub	sp, #28
 800195c:	af00      	add	r7, sp, #0
 800195e:	6078      	str	r0, [r7, #4]
 8001960:	6039      	str	r1, [r7, #0]
 8001962:	2300      	movs	r3, #0
 8001964:	617b      	str	r3, [r7, #20]
 8001966:	e166      	b.n	8001c36 <HAL_GPIO_Init+0x2de>
 8001968:	683b      	ldr	r3, [r7, #0]
 800196a:	681a      	ldr	r2, [r3, #0]
 800196c:	2101      	movs	r1, #1
 800196e:	697b      	ldr	r3, [r7, #20]
 8001970:	fa01 f303 	lsl.w	r3, r1, r3
 8001974:	4013      	ands	r3, r2
 8001976:	60fb      	str	r3, [r7, #12]
 8001978:	68fb      	ldr	r3, [r7, #12]
 800197a:	2b00      	cmp	r3, #0
 800197c:	f000 8158 	beq.w	8001c30 <HAL_GPIO_Init+0x2d8>
 8001980:	683b      	ldr	r3, [r7, #0]
 8001982:	685b      	ldr	r3, [r3, #4]
 8001984:	f003 0303 	and.w	r3, r3, #3
 8001988:	2b01      	cmp	r3, #1
 800198a:	d005      	beq.n	8001998 <HAL_GPIO_Init+0x40>
 800198c:	683b      	ldr	r3, [r7, #0]
 800198e:	685b      	ldr	r3, [r3, #4]
 8001990:	f003 0303 	and.w	r3, r3, #3
 8001994:	2b02      	cmp	r3, #2
 8001996:	d130      	bne.n	80019fa <HAL_GPIO_Init+0xa2>
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	689b      	ldr	r3, [r3, #8]
 800199c:	613b      	str	r3, [r7, #16]
 800199e:	697b      	ldr	r3, [r7, #20]
 80019a0:	005b      	lsls	r3, r3, #1
 80019a2:	2203      	movs	r2, #3
 80019a4:	fa02 f303 	lsl.w	r3, r2, r3
 80019a8:	43db      	mvns	r3, r3
 80019aa:	693a      	ldr	r2, [r7, #16]
 80019ac:	4013      	ands	r3, r2
 80019ae:	613b      	str	r3, [r7, #16]
 80019b0:	683b      	ldr	r3, [r7, #0]
 80019b2:	68da      	ldr	r2, [r3, #12]
 80019b4:	697b      	ldr	r3, [r7, #20]
 80019b6:	005b      	lsls	r3, r3, #1
 80019b8:	fa02 f303 	lsl.w	r3, r2, r3
 80019bc:	693a      	ldr	r2, [r7, #16]
 80019be:	4313      	orrs	r3, r2
 80019c0:	613b      	str	r3, [r7, #16]
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	693a      	ldr	r2, [r7, #16]
 80019c6:	609a      	str	r2, [r3, #8]
 80019c8:	687b      	ldr	r3, [r7, #4]
 80019ca:	685b      	ldr	r3, [r3, #4]
 80019cc:	613b      	str	r3, [r7, #16]
 80019ce:	2201      	movs	r2, #1
 80019d0:	697b      	ldr	r3, [r7, #20]
 80019d2:	fa02 f303 	lsl.w	r3, r2, r3
 80019d6:	43db      	mvns	r3, r3
 80019d8:	693a      	ldr	r2, [r7, #16]
 80019da:	4013      	ands	r3, r2
 80019dc:	613b      	str	r3, [r7, #16]
 80019de:	683b      	ldr	r3, [r7, #0]
 80019e0:	685b      	ldr	r3, [r3, #4]
 80019e2:	091b      	lsrs	r3, r3, #4
 80019e4:	f003 0201 	and.w	r2, r3, #1
 80019e8:	697b      	ldr	r3, [r7, #20]
 80019ea:	fa02 f303 	lsl.w	r3, r2, r3
 80019ee:	693a      	ldr	r2, [r7, #16]
 80019f0:	4313      	orrs	r3, r2
 80019f2:	613b      	str	r3, [r7, #16]
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	693a      	ldr	r2, [r7, #16]
 80019f8:	605a      	str	r2, [r3, #4]
 80019fa:	683b      	ldr	r3, [r7, #0]
 80019fc:	685b      	ldr	r3, [r3, #4]
 80019fe:	f003 0303 	and.w	r3, r3, #3
 8001a02:	2b03      	cmp	r3, #3
 8001a04:	d017      	beq.n	8001a36 <HAL_GPIO_Init+0xde>
 8001a06:	687b      	ldr	r3, [r7, #4]
 8001a08:	68db      	ldr	r3, [r3, #12]
 8001a0a:	613b      	str	r3, [r7, #16]
 8001a0c:	697b      	ldr	r3, [r7, #20]
 8001a0e:	005b      	lsls	r3, r3, #1
 8001a10:	2203      	movs	r2, #3
 8001a12:	fa02 f303 	lsl.w	r3, r2, r3
 8001a16:	43db      	mvns	r3, r3
 8001a18:	693a      	ldr	r2, [r7, #16]
 8001a1a:	4013      	ands	r3, r2
 8001a1c:	613b      	str	r3, [r7, #16]
 8001a1e:	683b      	ldr	r3, [r7, #0]
 8001a20:	689a      	ldr	r2, [r3, #8]
 8001a22:	697b      	ldr	r3, [r7, #20]
 8001a24:	005b      	lsls	r3, r3, #1
 8001a26:	fa02 f303 	lsl.w	r3, r2, r3
 8001a2a:	693a      	ldr	r2, [r7, #16]
 8001a2c:	4313      	orrs	r3, r2
 8001a2e:	613b      	str	r3, [r7, #16]
 8001a30:	687b      	ldr	r3, [r7, #4]
 8001a32:	693a      	ldr	r2, [r7, #16]
 8001a34:	60da      	str	r2, [r3, #12]
 8001a36:	683b      	ldr	r3, [r7, #0]
 8001a38:	685b      	ldr	r3, [r3, #4]
 8001a3a:	f003 0303 	and.w	r3, r3, #3
 8001a3e:	2b02      	cmp	r3, #2
 8001a40:	d123      	bne.n	8001a8a <HAL_GPIO_Init+0x132>
 8001a42:	697b      	ldr	r3, [r7, #20]
 8001a44:	08da      	lsrs	r2, r3, #3
 8001a46:	687b      	ldr	r3, [r7, #4]
 8001a48:	3208      	adds	r2, #8
 8001a4a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001a4e:	613b      	str	r3, [r7, #16]
 8001a50:	697b      	ldr	r3, [r7, #20]
 8001a52:	f003 0307 	and.w	r3, r3, #7
 8001a56:	009b      	lsls	r3, r3, #2
 8001a58:	220f      	movs	r2, #15
 8001a5a:	fa02 f303 	lsl.w	r3, r2, r3
 8001a5e:	43db      	mvns	r3, r3
 8001a60:	693a      	ldr	r2, [r7, #16]
 8001a62:	4013      	ands	r3, r2
 8001a64:	613b      	str	r3, [r7, #16]
 8001a66:	683b      	ldr	r3, [r7, #0]
 8001a68:	691a      	ldr	r2, [r3, #16]
 8001a6a:	697b      	ldr	r3, [r7, #20]
 8001a6c:	f003 0307 	and.w	r3, r3, #7
 8001a70:	009b      	lsls	r3, r3, #2
 8001a72:	fa02 f303 	lsl.w	r3, r2, r3
 8001a76:	693a      	ldr	r2, [r7, #16]
 8001a78:	4313      	orrs	r3, r2
 8001a7a:	613b      	str	r3, [r7, #16]
 8001a7c:	697b      	ldr	r3, [r7, #20]
 8001a7e:	08da      	lsrs	r2, r3, #3
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	3208      	adds	r2, #8
 8001a84:	6939      	ldr	r1, [r7, #16]
 8001a86:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	681b      	ldr	r3, [r3, #0]
 8001a8e:	613b      	str	r3, [r7, #16]
 8001a90:	697b      	ldr	r3, [r7, #20]
 8001a92:	005b      	lsls	r3, r3, #1
 8001a94:	2203      	movs	r2, #3
 8001a96:	fa02 f303 	lsl.w	r3, r2, r3
 8001a9a:	43db      	mvns	r3, r3
 8001a9c:	693a      	ldr	r2, [r7, #16]
 8001a9e:	4013      	ands	r3, r2
 8001aa0:	613b      	str	r3, [r7, #16]
 8001aa2:	683b      	ldr	r3, [r7, #0]
 8001aa4:	685b      	ldr	r3, [r3, #4]
 8001aa6:	f003 0203 	and.w	r2, r3, #3
 8001aaa:	697b      	ldr	r3, [r7, #20]
 8001aac:	005b      	lsls	r3, r3, #1
 8001aae:	fa02 f303 	lsl.w	r3, r2, r3
 8001ab2:	693a      	ldr	r2, [r7, #16]
 8001ab4:	4313      	orrs	r3, r2
 8001ab6:	613b      	str	r3, [r7, #16]
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	693a      	ldr	r2, [r7, #16]
 8001abc:	601a      	str	r2, [r3, #0]
 8001abe:	683b      	ldr	r3, [r7, #0]
 8001ac0:	685b      	ldr	r3, [r3, #4]
 8001ac2:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8001ac6:	2b00      	cmp	r3, #0
 8001ac8:	f000 80b2 	beq.w	8001c30 <HAL_GPIO_Init+0x2d8>
 8001acc:	4b61      	ldr	r3, [pc, #388]	@ (8001c54 <HAL_GPIO_Init+0x2fc>)
 8001ace:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001ad0:	4a60      	ldr	r2, [pc, #384]	@ (8001c54 <HAL_GPIO_Init+0x2fc>)
 8001ad2:	f043 0301 	orr.w	r3, r3, #1
 8001ad6:	6613      	str	r3, [r2, #96]	@ 0x60
 8001ad8:	4b5e      	ldr	r3, [pc, #376]	@ (8001c54 <HAL_GPIO_Init+0x2fc>)
 8001ada:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001adc:	f003 0301 	and.w	r3, r3, #1
 8001ae0:	60bb      	str	r3, [r7, #8]
 8001ae2:	68bb      	ldr	r3, [r7, #8]
 8001ae4:	4a5c      	ldr	r2, [pc, #368]	@ (8001c58 <HAL_GPIO_Init+0x300>)
 8001ae6:	697b      	ldr	r3, [r7, #20]
 8001ae8:	089b      	lsrs	r3, r3, #2
 8001aea:	3302      	adds	r3, #2
 8001aec:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001af0:	613b      	str	r3, [r7, #16]
 8001af2:	697b      	ldr	r3, [r7, #20]
 8001af4:	f003 0303 	and.w	r3, r3, #3
 8001af8:	009b      	lsls	r3, r3, #2
 8001afa:	220f      	movs	r2, #15
 8001afc:	fa02 f303 	lsl.w	r3, r2, r3
 8001b00:	43db      	mvns	r3, r3
 8001b02:	693a      	ldr	r2, [r7, #16]
 8001b04:	4013      	ands	r3, r2
 8001b06:	613b      	str	r3, [r7, #16]
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8001b0e:	d02b      	beq.n	8001b68 <HAL_GPIO_Init+0x210>
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	4a52      	ldr	r2, [pc, #328]	@ (8001c5c <HAL_GPIO_Init+0x304>)
 8001b14:	4293      	cmp	r3, r2
 8001b16:	d025      	beq.n	8001b64 <HAL_GPIO_Init+0x20c>
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	4a51      	ldr	r2, [pc, #324]	@ (8001c60 <HAL_GPIO_Init+0x308>)
 8001b1c:	4293      	cmp	r3, r2
 8001b1e:	d01f      	beq.n	8001b60 <HAL_GPIO_Init+0x208>
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	4a50      	ldr	r2, [pc, #320]	@ (8001c64 <HAL_GPIO_Init+0x30c>)
 8001b24:	4293      	cmp	r3, r2
 8001b26:	d019      	beq.n	8001b5c <HAL_GPIO_Init+0x204>
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	4a4f      	ldr	r2, [pc, #316]	@ (8001c68 <HAL_GPIO_Init+0x310>)
 8001b2c:	4293      	cmp	r3, r2
 8001b2e:	d013      	beq.n	8001b58 <HAL_GPIO_Init+0x200>
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	4a4e      	ldr	r2, [pc, #312]	@ (8001c6c <HAL_GPIO_Init+0x314>)
 8001b34:	4293      	cmp	r3, r2
 8001b36:	d00d      	beq.n	8001b54 <HAL_GPIO_Init+0x1fc>
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	4a4d      	ldr	r2, [pc, #308]	@ (8001c70 <HAL_GPIO_Init+0x318>)
 8001b3c:	4293      	cmp	r3, r2
 8001b3e:	d007      	beq.n	8001b50 <HAL_GPIO_Init+0x1f8>
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	4a4c      	ldr	r2, [pc, #304]	@ (8001c74 <HAL_GPIO_Init+0x31c>)
 8001b44:	4293      	cmp	r3, r2
 8001b46:	d101      	bne.n	8001b4c <HAL_GPIO_Init+0x1f4>
 8001b48:	2307      	movs	r3, #7
 8001b4a:	e00e      	b.n	8001b6a <HAL_GPIO_Init+0x212>
 8001b4c:	2308      	movs	r3, #8
 8001b4e:	e00c      	b.n	8001b6a <HAL_GPIO_Init+0x212>
 8001b50:	2306      	movs	r3, #6
 8001b52:	e00a      	b.n	8001b6a <HAL_GPIO_Init+0x212>
 8001b54:	2305      	movs	r3, #5
 8001b56:	e008      	b.n	8001b6a <HAL_GPIO_Init+0x212>
 8001b58:	2304      	movs	r3, #4
 8001b5a:	e006      	b.n	8001b6a <HAL_GPIO_Init+0x212>
 8001b5c:	2303      	movs	r3, #3
 8001b5e:	e004      	b.n	8001b6a <HAL_GPIO_Init+0x212>
 8001b60:	2302      	movs	r3, #2
 8001b62:	e002      	b.n	8001b6a <HAL_GPIO_Init+0x212>
 8001b64:	2301      	movs	r3, #1
 8001b66:	e000      	b.n	8001b6a <HAL_GPIO_Init+0x212>
 8001b68:	2300      	movs	r3, #0
 8001b6a:	697a      	ldr	r2, [r7, #20]
 8001b6c:	f002 0203 	and.w	r2, r2, #3
 8001b70:	0092      	lsls	r2, r2, #2
 8001b72:	4093      	lsls	r3, r2
 8001b74:	693a      	ldr	r2, [r7, #16]
 8001b76:	4313      	orrs	r3, r2
 8001b78:	613b      	str	r3, [r7, #16]
 8001b7a:	4937      	ldr	r1, [pc, #220]	@ (8001c58 <HAL_GPIO_Init+0x300>)
 8001b7c:	697b      	ldr	r3, [r7, #20]
 8001b7e:	089b      	lsrs	r3, r3, #2
 8001b80:	3302      	adds	r3, #2
 8001b82:	693a      	ldr	r2, [r7, #16]
 8001b84:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001b88:	4b3b      	ldr	r3, [pc, #236]	@ (8001c78 <HAL_GPIO_Init+0x320>)
 8001b8a:	689b      	ldr	r3, [r3, #8]
 8001b8c:	613b      	str	r3, [r7, #16]
 8001b8e:	68fb      	ldr	r3, [r7, #12]
 8001b90:	43db      	mvns	r3, r3
 8001b92:	693a      	ldr	r2, [r7, #16]
 8001b94:	4013      	ands	r3, r2
 8001b96:	613b      	str	r3, [r7, #16]
 8001b98:	683b      	ldr	r3, [r7, #0]
 8001b9a:	685b      	ldr	r3, [r3, #4]
 8001b9c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001ba0:	2b00      	cmp	r3, #0
 8001ba2:	d003      	beq.n	8001bac <HAL_GPIO_Init+0x254>
 8001ba4:	693a      	ldr	r2, [r7, #16]
 8001ba6:	68fb      	ldr	r3, [r7, #12]
 8001ba8:	4313      	orrs	r3, r2
 8001baa:	613b      	str	r3, [r7, #16]
 8001bac:	4a32      	ldr	r2, [pc, #200]	@ (8001c78 <HAL_GPIO_Init+0x320>)
 8001bae:	693b      	ldr	r3, [r7, #16]
 8001bb0:	6093      	str	r3, [r2, #8]
 8001bb2:	4b31      	ldr	r3, [pc, #196]	@ (8001c78 <HAL_GPIO_Init+0x320>)
 8001bb4:	68db      	ldr	r3, [r3, #12]
 8001bb6:	613b      	str	r3, [r7, #16]
 8001bb8:	68fb      	ldr	r3, [r7, #12]
 8001bba:	43db      	mvns	r3, r3
 8001bbc:	693a      	ldr	r2, [r7, #16]
 8001bbe:	4013      	ands	r3, r2
 8001bc0:	613b      	str	r3, [r7, #16]
 8001bc2:	683b      	ldr	r3, [r7, #0]
 8001bc4:	685b      	ldr	r3, [r3, #4]
 8001bc6:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001bca:	2b00      	cmp	r3, #0
 8001bcc:	d003      	beq.n	8001bd6 <HAL_GPIO_Init+0x27e>
 8001bce:	693a      	ldr	r2, [r7, #16]
 8001bd0:	68fb      	ldr	r3, [r7, #12]
 8001bd2:	4313      	orrs	r3, r2
 8001bd4:	613b      	str	r3, [r7, #16]
 8001bd6:	4a28      	ldr	r2, [pc, #160]	@ (8001c78 <HAL_GPIO_Init+0x320>)
 8001bd8:	693b      	ldr	r3, [r7, #16]
 8001bda:	60d3      	str	r3, [r2, #12]
 8001bdc:	4b26      	ldr	r3, [pc, #152]	@ (8001c78 <HAL_GPIO_Init+0x320>)
 8001bde:	685b      	ldr	r3, [r3, #4]
 8001be0:	613b      	str	r3, [r7, #16]
 8001be2:	68fb      	ldr	r3, [r7, #12]
 8001be4:	43db      	mvns	r3, r3
 8001be6:	693a      	ldr	r2, [r7, #16]
 8001be8:	4013      	ands	r3, r2
 8001bea:	613b      	str	r3, [r7, #16]
 8001bec:	683b      	ldr	r3, [r7, #0]
 8001bee:	685b      	ldr	r3, [r3, #4]
 8001bf0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001bf4:	2b00      	cmp	r3, #0
 8001bf6:	d003      	beq.n	8001c00 <HAL_GPIO_Init+0x2a8>
 8001bf8:	693a      	ldr	r2, [r7, #16]
 8001bfa:	68fb      	ldr	r3, [r7, #12]
 8001bfc:	4313      	orrs	r3, r2
 8001bfe:	613b      	str	r3, [r7, #16]
 8001c00:	4a1d      	ldr	r2, [pc, #116]	@ (8001c78 <HAL_GPIO_Init+0x320>)
 8001c02:	693b      	ldr	r3, [r7, #16]
 8001c04:	6053      	str	r3, [r2, #4]
 8001c06:	4b1c      	ldr	r3, [pc, #112]	@ (8001c78 <HAL_GPIO_Init+0x320>)
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	613b      	str	r3, [r7, #16]
 8001c0c:	68fb      	ldr	r3, [r7, #12]
 8001c0e:	43db      	mvns	r3, r3
 8001c10:	693a      	ldr	r2, [r7, #16]
 8001c12:	4013      	ands	r3, r2
 8001c14:	613b      	str	r3, [r7, #16]
 8001c16:	683b      	ldr	r3, [r7, #0]
 8001c18:	685b      	ldr	r3, [r3, #4]
 8001c1a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001c1e:	2b00      	cmp	r3, #0
 8001c20:	d003      	beq.n	8001c2a <HAL_GPIO_Init+0x2d2>
 8001c22:	693a      	ldr	r2, [r7, #16]
 8001c24:	68fb      	ldr	r3, [r7, #12]
 8001c26:	4313      	orrs	r3, r2
 8001c28:	613b      	str	r3, [r7, #16]
 8001c2a:	4a13      	ldr	r2, [pc, #76]	@ (8001c78 <HAL_GPIO_Init+0x320>)
 8001c2c:	693b      	ldr	r3, [r7, #16]
 8001c2e:	6013      	str	r3, [r2, #0]
 8001c30:	697b      	ldr	r3, [r7, #20]
 8001c32:	3301      	adds	r3, #1
 8001c34:	617b      	str	r3, [r7, #20]
 8001c36:	683b      	ldr	r3, [r7, #0]
 8001c38:	681a      	ldr	r2, [r3, #0]
 8001c3a:	697b      	ldr	r3, [r7, #20]
 8001c3c:	fa22 f303 	lsr.w	r3, r2, r3
 8001c40:	2b00      	cmp	r3, #0
 8001c42:	f47f ae91 	bne.w	8001968 <HAL_GPIO_Init+0x10>
 8001c46:	bf00      	nop
 8001c48:	bf00      	nop
 8001c4a:	371c      	adds	r7, #28
 8001c4c:	46bd      	mov	sp, r7
 8001c4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c52:	4770      	bx	lr
 8001c54:	40021000 	.word	0x40021000
 8001c58:	40010000 	.word	0x40010000
 8001c5c:	48000400 	.word	0x48000400
 8001c60:	48000800 	.word	0x48000800
 8001c64:	48000c00 	.word	0x48000c00
 8001c68:	48001000 	.word	0x48001000
 8001c6c:	48001400 	.word	0x48001400
 8001c70:	48001800 	.word	0x48001800
 8001c74:	48001c00 	.word	0x48001c00
 8001c78:	40010400 	.word	0x40010400

08001c7c <HAL_GPIO_WritePin>:
 8001c7c:	b480      	push	{r7}
 8001c7e:	b083      	sub	sp, #12
 8001c80:	af00      	add	r7, sp, #0
 8001c82:	6078      	str	r0, [r7, #4]
 8001c84:	460b      	mov	r3, r1
 8001c86:	807b      	strh	r3, [r7, #2]
 8001c88:	4613      	mov	r3, r2
 8001c8a:	707b      	strb	r3, [r7, #1]
 8001c8c:	787b      	ldrb	r3, [r7, #1]
 8001c8e:	2b00      	cmp	r3, #0
 8001c90:	d003      	beq.n	8001c9a <HAL_GPIO_WritePin+0x1e>
 8001c92:	887a      	ldrh	r2, [r7, #2]
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	619a      	str	r2, [r3, #24]
 8001c98:	e002      	b.n	8001ca0 <HAL_GPIO_WritePin+0x24>
 8001c9a:	887a      	ldrh	r2, [r7, #2]
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	629a      	str	r2, [r3, #40]	@ 0x28
 8001ca0:	bf00      	nop
 8001ca2:	370c      	adds	r7, #12
 8001ca4:	46bd      	mov	sp, r7
 8001ca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001caa:	4770      	bx	lr

08001cac <HAL_PWREx_GetVoltageRange>:
 8001cac:	b480      	push	{r7}
 8001cae:	af00      	add	r7, sp, #0
 8001cb0:	4b0d      	ldr	r3, [pc, #52]	@ (8001ce8 <HAL_PWREx_GetVoltageRange+0x3c>)
 8001cb2:	681b      	ldr	r3, [r3, #0]
 8001cb4:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8001cb8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001cbc:	d102      	bne.n	8001cc4 <HAL_PWREx_GetVoltageRange+0x18>
 8001cbe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001cc2:	e00b      	b.n	8001cdc <HAL_PWREx_GetVoltageRange+0x30>
 8001cc4:	4b08      	ldr	r3, [pc, #32]	@ (8001ce8 <HAL_PWREx_GetVoltageRange+0x3c>)
 8001cc6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001cca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001cce:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001cd2:	d102      	bne.n	8001cda <HAL_PWREx_GetVoltageRange+0x2e>
 8001cd4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001cd8:	e000      	b.n	8001cdc <HAL_PWREx_GetVoltageRange+0x30>
 8001cda:	2300      	movs	r3, #0
 8001cdc:	4618      	mov	r0, r3
 8001cde:	46bd      	mov	sp, r7
 8001ce0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ce4:	4770      	bx	lr
 8001ce6:	bf00      	nop
 8001ce8:	40007000 	.word	0x40007000

08001cec <HAL_PWREx_ControlVoltageScaling>:
 8001cec:	b480      	push	{r7}
 8001cee:	b085      	sub	sp, #20
 8001cf0:	af00      	add	r7, sp, #0
 8001cf2:	6078      	str	r0, [r7, #4]
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	2b00      	cmp	r3, #0
 8001cf8:	d141      	bne.n	8001d7e <HAL_PWREx_ControlVoltageScaling+0x92>
 8001cfa:	4b4b      	ldr	r3, [pc, #300]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8001d02:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001d06:	d131      	bne.n	8001d6c <HAL_PWREx_ControlVoltageScaling+0x80>
 8001d08:	4b47      	ldr	r3, [pc, #284]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d0a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001d0e:	4a46      	ldr	r2, [pc, #280]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d10:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001d14:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8001d18:	4b43      	ldr	r3, [pc, #268]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d1a:	681b      	ldr	r3, [r3, #0]
 8001d1c:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8001d20:	4a41      	ldr	r2, [pc, #260]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d22:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001d26:	6013      	str	r3, [r2, #0]
 8001d28:	4b40      	ldr	r3, [pc, #256]	@ (8001e2c <HAL_PWREx_ControlVoltageScaling+0x140>)
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	2232      	movs	r2, #50	@ 0x32
 8001d2e:	fb02 f303 	mul.w	r3, r2, r3
 8001d32:	4a3f      	ldr	r2, [pc, #252]	@ (8001e30 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8001d34:	fba2 2303 	umull	r2, r3, r2, r3
 8001d38:	0c9b      	lsrs	r3, r3, #18
 8001d3a:	3301      	adds	r3, #1
 8001d3c:	60fb      	str	r3, [r7, #12]
 8001d3e:	e002      	b.n	8001d46 <HAL_PWREx_ControlVoltageScaling+0x5a>
 8001d40:	68fb      	ldr	r3, [r7, #12]
 8001d42:	3b01      	subs	r3, #1
 8001d44:	60fb      	str	r3, [r7, #12]
 8001d46:	4b38      	ldr	r3, [pc, #224]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d48:	695b      	ldr	r3, [r3, #20]
 8001d4a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001d4e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001d52:	d102      	bne.n	8001d5a <HAL_PWREx_ControlVoltageScaling+0x6e>
 8001d54:	68fb      	ldr	r3, [r7, #12]
 8001d56:	2b00      	cmp	r3, #0
 8001d58:	d1f2      	bne.n	8001d40 <HAL_PWREx_ControlVoltageScaling+0x54>
 8001d5a:	4b33      	ldr	r3, [pc, #204]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d5c:	695b      	ldr	r3, [r3, #20]
 8001d5e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001d62:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001d66:	d158      	bne.n	8001e1a <HAL_PWREx_ControlVoltageScaling+0x12e>
 8001d68:	2303      	movs	r3, #3
 8001d6a:	e057      	b.n	8001e1c <HAL_PWREx_ControlVoltageScaling+0x130>
 8001d6c:	4b2e      	ldr	r3, [pc, #184]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d6e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001d72:	4a2d      	ldr	r2, [pc, #180]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d74:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001d78:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8001d7c:	e04d      	b.n	8001e1a <HAL_PWREx_ControlVoltageScaling+0x12e>
 8001d7e:	687b      	ldr	r3, [r7, #4]
 8001d80:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001d84:	d141      	bne.n	8001e0a <HAL_PWREx_ControlVoltageScaling+0x11e>
 8001d86:	4b28      	ldr	r3, [pc, #160]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d88:	681b      	ldr	r3, [r3, #0]
 8001d8a:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8001d8e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001d92:	d131      	bne.n	8001df8 <HAL_PWREx_ControlVoltageScaling+0x10c>
 8001d94:	4b24      	ldr	r3, [pc, #144]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d96:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001d9a:	4a23      	ldr	r2, [pc, #140]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001d9c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001da0:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8001da4:	4b20      	ldr	r3, [pc, #128]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001da6:	681b      	ldr	r3, [r3, #0]
 8001da8:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8001dac:	4a1e      	ldr	r2, [pc, #120]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001dae:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001db2:	6013      	str	r3, [r2, #0]
 8001db4:	4b1d      	ldr	r3, [pc, #116]	@ (8001e2c <HAL_PWREx_ControlVoltageScaling+0x140>)
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	2232      	movs	r2, #50	@ 0x32
 8001dba:	fb02 f303 	mul.w	r3, r2, r3
 8001dbe:	4a1c      	ldr	r2, [pc, #112]	@ (8001e30 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8001dc0:	fba2 2303 	umull	r2, r3, r2, r3
 8001dc4:	0c9b      	lsrs	r3, r3, #18
 8001dc6:	3301      	adds	r3, #1
 8001dc8:	60fb      	str	r3, [r7, #12]
 8001dca:	e002      	b.n	8001dd2 <HAL_PWREx_ControlVoltageScaling+0xe6>
 8001dcc:	68fb      	ldr	r3, [r7, #12]
 8001dce:	3b01      	subs	r3, #1
 8001dd0:	60fb      	str	r3, [r7, #12]
 8001dd2:	4b15      	ldr	r3, [pc, #84]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001dd4:	695b      	ldr	r3, [r3, #20]
 8001dd6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001dda:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001dde:	d102      	bne.n	8001de6 <HAL_PWREx_ControlVoltageScaling+0xfa>
 8001de0:	68fb      	ldr	r3, [r7, #12]
 8001de2:	2b00      	cmp	r3, #0
 8001de4:	d1f2      	bne.n	8001dcc <HAL_PWREx_ControlVoltageScaling+0xe0>
 8001de6:	4b10      	ldr	r3, [pc, #64]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001de8:	695b      	ldr	r3, [r3, #20]
 8001dea:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001dee:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001df2:	d112      	bne.n	8001e1a <HAL_PWREx_ControlVoltageScaling+0x12e>
 8001df4:	2303      	movs	r3, #3
 8001df6:	e011      	b.n	8001e1c <HAL_PWREx_ControlVoltageScaling+0x130>
 8001df8:	4b0b      	ldr	r3, [pc, #44]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001dfa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001dfe:	4a0a      	ldr	r2, [pc, #40]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001e00:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001e04:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8001e08:	e007      	b.n	8001e1a <HAL_PWREx_ControlVoltageScaling+0x12e>
 8001e0a:	4b07      	ldr	r3, [pc, #28]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001e0c:	681b      	ldr	r3, [r3, #0]
 8001e0e:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8001e12:	4a05      	ldr	r2, [pc, #20]	@ (8001e28 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001e14:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001e18:	6013      	str	r3, [r2, #0]
 8001e1a:	2300      	movs	r3, #0
 8001e1c:	4618      	mov	r0, r3
 8001e1e:	3714      	adds	r7, #20
 8001e20:	46bd      	mov	sp, r7
 8001e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e26:	4770      	bx	lr
 8001e28:	40007000 	.word	0x40007000
 8001e2c:	20000004 	.word	0x20000004
 8001e30:	431bde83 	.word	0x431bde83

08001e34 <HAL_RCC_OscConfig>:
 8001e34:	b580      	push	{r7, lr}
 8001e36:	b088      	sub	sp, #32
 8001e38:	af00      	add	r7, sp, #0
 8001e3a:	6078      	str	r0, [r7, #4]
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	2b00      	cmp	r3, #0
 8001e40:	d102      	bne.n	8001e48 <HAL_RCC_OscConfig+0x14>
 8001e42:	2301      	movs	r3, #1
 8001e44:	f000 bc08 	b.w	8002658 <HAL_RCC_OscConfig+0x824>
 8001e48:	4b96      	ldr	r3, [pc, #600]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001e4a:	689b      	ldr	r3, [r3, #8]
 8001e4c:	f003 030c 	and.w	r3, r3, #12
 8001e50:	61bb      	str	r3, [r7, #24]
 8001e52:	4b94      	ldr	r3, [pc, #592]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001e54:	68db      	ldr	r3, [r3, #12]
 8001e56:	f003 0303 	and.w	r3, r3, #3
 8001e5a:	617b      	str	r3, [r7, #20]
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	681b      	ldr	r3, [r3, #0]
 8001e60:	f003 0310 	and.w	r3, r3, #16
 8001e64:	2b00      	cmp	r3, #0
 8001e66:	f000 80e4 	beq.w	8002032 <HAL_RCC_OscConfig+0x1fe>
 8001e6a:	69bb      	ldr	r3, [r7, #24]
 8001e6c:	2b00      	cmp	r3, #0
 8001e6e:	d007      	beq.n	8001e80 <HAL_RCC_OscConfig+0x4c>
 8001e70:	69bb      	ldr	r3, [r7, #24]
 8001e72:	2b0c      	cmp	r3, #12
 8001e74:	f040 808b 	bne.w	8001f8e <HAL_RCC_OscConfig+0x15a>
 8001e78:	697b      	ldr	r3, [r7, #20]
 8001e7a:	2b01      	cmp	r3, #1
 8001e7c:	f040 8087 	bne.w	8001f8e <HAL_RCC_OscConfig+0x15a>
 8001e80:	4b88      	ldr	r3, [pc, #544]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001e82:	681b      	ldr	r3, [r3, #0]
 8001e84:	f003 0302 	and.w	r3, r3, #2
 8001e88:	2b00      	cmp	r3, #0
 8001e8a:	d005      	beq.n	8001e98 <HAL_RCC_OscConfig+0x64>
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	699b      	ldr	r3, [r3, #24]
 8001e90:	2b00      	cmp	r3, #0
 8001e92:	d101      	bne.n	8001e98 <HAL_RCC_OscConfig+0x64>
 8001e94:	2301      	movs	r3, #1
 8001e96:	e3df      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	6a1a      	ldr	r2, [r3, #32]
 8001e9c:	4b81      	ldr	r3, [pc, #516]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001e9e:	681b      	ldr	r3, [r3, #0]
 8001ea0:	f003 0308 	and.w	r3, r3, #8
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d004      	beq.n	8001eb2 <HAL_RCC_OscConfig+0x7e>
 8001ea8:	4b7e      	ldr	r3, [pc, #504]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8001eb0:	e005      	b.n	8001ebe <HAL_RCC_OscConfig+0x8a>
 8001eb2:	4b7c      	ldr	r3, [pc, #496]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001eb4:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8001eb8:	091b      	lsrs	r3, r3, #4
 8001eba:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8001ebe:	4293      	cmp	r3, r2
 8001ec0:	d223      	bcs.n	8001f0a <HAL_RCC_OscConfig+0xd6>
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	6a1b      	ldr	r3, [r3, #32]
 8001ec6:	4618      	mov	r0, r3
 8001ec8:	f000 fd94 	bl	80029f4 <RCC_SetFlashLatencyFromMSIRange>
 8001ecc:	4603      	mov	r3, r0
 8001ece:	2b00      	cmp	r3, #0
 8001ed0:	d001      	beq.n	8001ed6 <HAL_RCC_OscConfig+0xa2>
 8001ed2:	2301      	movs	r3, #1
 8001ed4:	e3c0      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8001ed6:	4b73      	ldr	r3, [pc, #460]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001ed8:	681b      	ldr	r3, [r3, #0]
 8001eda:	4a72      	ldr	r2, [pc, #456]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001edc:	f043 0308 	orr.w	r3, r3, #8
 8001ee0:	6013      	str	r3, [r2, #0]
 8001ee2:	4b70      	ldr	r3, [pc, #448]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001ee4:	681b      	ldr	r3, [r3, #0]
 8001ee6:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	6a1b      	ldr	r3, [r3, #32]
 8001eee:	496d      	ldr	r1, [pc, #436]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001ef0:	4313      	orrs	r3, r2
 8001ef2:	600b      	str	r3, [r1, #0]
 8001ef4:	4b6b      	ldr	r3, [pc, #428]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001ef6:	685b      	ldr	r3, [r3, #4]
 8001ef8:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	69db      	ldr	r3, [r3, #28]
 8001f00:	021b      	lsls	r3, r3, #8
 8001f02:	4968      	ldr	r1, [pc, #416]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001f04:	4313      	orrs	r3, r2
 8001f06:	604b      	str	r3, [r1, #4]
 8001f08:	e025      	b.n	8001f56 <HAL_RCC_OscConfig+0x122>
 8001f0a:	4b66      	ldr	r3, [pc, #408]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001f0c:	681b      	ldr	r3, [r3, #0]
 8001f0e:	4a65      	ldr	r2, [pc, #404]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001f10:	f043 0308 	orr.w	r3, r3, #8
 8001f14:	6013      	str	r3, [r2, #0]
 8001f16:	4b63      	ldr	r3, [pc, #396]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001f18:	681b      	ldr	r3, [r3, #0]
 8001f1a:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	6a1b      	ldr	r3, [r3, #32]
 8001f22:	4960      	ldr	r1, [pc, #384]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001f24:	4313      	orrs	r3, r2
 8001f26:	600b      	str	r3, [r1, #0]
 8001f28:	4b5e      	ldr	r3, [pc, #376]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001f2a:	685b      	ldr	r3, [r3, #4]
 8001f2c:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	69db      	ldr	r3, [r3, #28]
 8001f34:	021b      	lsls	r3, r3, #8
 8001f36:	495b      	ldr	r1, [pc, #364]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001f38:	4313      	orrs	r3, r2
 8001f3a:	604b      	str	r3, [r1, #4]
 8001f3c:	69bb      	ldr	r3, [r7, #24]
 8001f3e:	2b00      	cmp	r3, #0
 8001f40:	d109      	bne.n	8001f56 <HAL_RCC_OscConfig+0x122>
 8001f42:	687b      	ldr	r3, [r7, #4]
 8001f44:	6a1b      	ldr	r3, [r3, #32]
 8001f46:	4618      	mov	r0, r3
 8001f48:	f000 fd54 	bl	80029f4 <RCC_SetFlashLatencyFromMSIRange>
 8001f4c:	4603      	mov	r3, r0
 8001f4e:	2b00      	cmp	r3, #0
 8001f50:	d001      	beq.n	8001f56 <HAL_RCC_OscConfig+0x122>
 8001f52:	2301      	movs	r3, #1
 8001f54:	e380      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8001f56:	f000 fcc1 	bl	80028dc <HAL_RCC_GetSysClockFreq>
 8001f5a:	4602      	mov	r2, r0
 8001f5c:	4b51      	ldr	r3, [pc, #324]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001f5e:	689b      	ldr	r3, [r3, #8]
 8001f60:	091b      	lsrs	r3, r3, #4
 8001f62:	f003 030f 	and.w	r3, r3, #15
 8001f66:	4950      	ldr	r1, [pc, #320]	@ (80020a8 <HAL_RCC_OscConfig+0x274>)
 8001f68:	5ccb      	ldrb	r3, [r1, r3]
 8001f6a:	f003 031f 	and.w	r3, r3, #31
 8001f6e:	fa22 f303 	lsr.w	r3, r2, r3
 8001f72:	4a4e      	ldr	r2, [pc, #312]	@ (80020ac <HAL_RCC_OscConfig+0x278>)
 8001f74:	6013      	str	r3, [r2, #0]
 8001f76:	4b4e      	ldr	r3, [pc, #312]	@ (80020b0 <HAL_RCC_OscConfig+0x27c>)
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	4618      	mov	r0, r3
 8001f7c:	f7ff fb86 	bl	800168c <HAL_InitTick>
 8001f80:	4603      	mov	r3, r0
 8001f82:	73fb      	strb	r3, [r7, #15]
 8001f84:	7bfb      	ldrb	r3, [r7, #15]
 8001f86:	2b00      	cmp	r3, #0
 8001f88:	d052      	beq.n	8002030 <HAL_RCC_OscConfig+0x1fc>
 8001f8a:	7bfb      	ldrb	r3, [r7, #15]
 8001f8c:	e364      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	699b      	ldr	r3, [r3, #24]
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d032      	beq.n	8001ffc <HAL_RCC_OscConfig+0x1c8>
 8001f96:	4b43      	ldr	r3, [pc, #268]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	4a42      	ldr	r2, [pc, #264]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001f9c:	f043 0301 	orr.w	r3, r3, #1
 8001fa0:	6013      	str	r3, [r2, #0]
 8001fa2:	f7ff fbc3 	bl	800172c <HAL_GetTick>
 8001fa6:	6138      	str	r0, [r7, #16]
 8001fa8:	e008      	b.n	8001fbc <HAL_RCC_OscConfig+0x188>
 8001faa:	f7ff fbbf 	bl	800172c <HAL_GetTick>
 8001fae:	4602      	mov	r2, r0
 8001fb0:	693b      	ldr	r3, [r7, #16]
 8001fb2:	1ad3      	subs	r3, r2, r3
 8001fb4:	2b02      	cmp	r3, #2
 8001fb6:	d901      	bls.n	8001fbc <HAL_RCC_OscConfig+0x188>
 8001fb8:	2303      	movs	r3, #3
 8001fba:	e34d      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8001fbc:	4b39      	ldr	r3, [pc, #228]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	f003 0302 	and.w	r3, r3, #2
 8001fc4:	2b00      	cmp	r3, #0
 8001fc6:	d0f0      	beq.n	8001faa <HAL_RCC_OscConfig+0x176>
 8001fc8:	4b36      	ldr	r3, [pc, #216]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	4a35      	ldr	r2, [pc, #212]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001fce:	f043 0308 	orr.w	r3, r3, #8
 8001fd2:	6013      	str	r3, [r2, #0]
 8001fd4:	4b33      	ldr	r3, [pc, #204]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	6a1b      	ldr	r3, [r3, #32]
 8001fe0:	4930      	ldr	r1, [pc, #192]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001fe2:	4313      	orrs	r3, r2
 8001fe4:	600b      	str	r3, [r1, #0]
 8001fe6:	4b2f      	ldr	r3, [pc, #188]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001fe8:	685b      	ldr	r3, [r3, #4]
 8001fea:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8001fee:	687b      	ldr	r3, [r7, #4]
 8001ff0:	69db      	ldr	r3, [r3, #28]
 8001ff2:	021b      	lsls	r3, r3, #8
 8001ff4:	492b      	ldr	r1, [pc, #172]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001ff6:	4313      	orrs	r3, r2
 8001ff8:	604b      	str	r3, [r1, #4]
 8001ffa:	e01a      	b.n	8002032 <HAL_RCC_OscConfig+0x1fe>
 8001ffc:	4b29      	ldr	r3, [pc, #164]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	4a28      	ldr	r2, [pc, #160]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8002002:	f023 0301 	bic.w	r3, r3, #1
 8002006:	6013      	str	r3, [r2, #0]
 8002008:	f7ff fb90 	bl	800172c <HAL_GetTick>
 800200c:	6138      	str	r0, [r7, #16]
 800200e:	e008      	b.n	8002022 <HAL_RCC_OscConfig+0x1ee>
 8002010:	f7ff fb8c 	bl	800172c <HAL_GetTick>
 8002014:	4602      	mov	r2, r0
 8002016:	693b      	ldr	r3, [r7, #16]
 8002018:	1ad3      	subs	r3, r2, r3
 800201a:	2b02      	cmp	r3, #2
 800201c:	d901      	bls.n	8002022 <HAL_RCC_OscConfig+0x1ee>
 800201e:	2303      	movs	r3, #3
 8002020:	e31a      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8002022:	4b20      	ldr	r3, [pc, #128]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	f003 0302 	and.w	r3, r3, #2
 800202a:	2b00      	cmp	r3, #0
 800202c:	d1f0      	bne.n	8002010 <HAL_RCC_OscConfig+0x1dc>
 800202e:	e000      	b.n	8002032 <HAL_RCC_OscConfig+0x1fe>
 8002030:	bf00      	nop
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	681b      	ldr	r3, [r3, #0]
 8002036:	f003 0301 	and.w	r3, r3, #1
 800203a:	2b00      	cmp	r3, #0
 800203c:	d073      	beq.n	8002126 <HAL_RCC_OscConfig+0x2f2>
 800203e:	69bb      	ldr	r3, [r7, #24]
 8002040:	2b08      	cmp	r3, #8
 8002042:	d005      	beq.n	8002050 <HAL_RCC_OscConfig+0x21c>
 8002044:	69bb      	ldr	r3, [r7, #24]
 8002046:	2b0c      	cmp	r3, #12
 8002048:	d10e      	bne.n	8002068 <HAL_RCC_OscConfig+0x234>
 800204a:	697b      	ldr	r3, [r7, #20]
 800204c:	2b03      	cmp	r3, #3
 800204e:	d10b      	bne.n	8002068 <HAL_RCC_OscConfig+0x234>
 8002050:	4b14      	ldr	r3, [pc, #80]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8002052:	681b      	ldr	r3, [r3, #0]
 8002054:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002058:	2b00      	cmp	r3, #0
 800205a:	d063      	beq.n	8002124 <HAL_RCC_OscConfig+0x2f0>
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	685b      	ldr	r3, [r3, #4]
 8002060:	2b00      	cmp	r3, #0
 8002062:	d15f      	bne.n	8002124 <HAL_RCC_OscConfig+0x2f0>
 8002064:	2301      	movs	r3, #1
 8002066:	e2f7      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	685b      	ldr	r3, [r3, #4]
 800206c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002070:	d106      	bne.n	8002080 <HAL_RCC_OscConfig+0x24c>
 8002072:	4b0c      	ldr	r3, [pc, #48]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8002074:	681b      	ldr	r3, [r3, #0]
 8002076:	4a0b      	ldr	r2, [pc, #44]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8002078:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800207c:	6013      	str	r3, [r2, #0]
 800207e:	e025      	b.n	80020cc <HAL_RCC_OscConfig+0x298>
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	685b      	ldr	r3, [r3, #4]
 8002084:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002088:	d114      	bne.n	80020b4 <HAL_RCC_OscConfig+0x280>
 800208a:	4b06      	ldr	r3, [pc, #24]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 800208c:	681b      	ldr	r3, [r3, #0]
 800208e:	4a05      	ldr	r2, [pc, #20]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8002090:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002094:	6013      	str	r3, [r2, #0]
 8002096:	4b03      	ldr	r3, [pc, #12]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	4a02      	ldr	r2, [pc, #8]	@ (80020a4 <HAL_RCC_OscConfig+0x270>)
 800209c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80020a0:	6013      	str	r3, [r2, #0]
 80020a2:	e013      	b.n	80020cc <HAL_RCC_OscConfig+0x298>
 80020a4:	40021000 	.word	0x40021000
 80020a8:	08004588 	.word	0x08004588
 80020ac:	20000004 	.word	0x20000004
 80020b0:	20000008 	.word	0x20000008
 80020b4:	4ba0      	ldr	r3, [pc, #640]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	4a9f      	ldr	r2, [pc, #636]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80020ba:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80020be:	6013      	str	r3, [r2, #0]
 80020c0:	4b9d      	ldr	r3, [pc, #628]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80020c2:	681b      	ldr	r3, [r3, #0]
 80020c4:	4a9c      	ldr	r2, [pc, #624]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80020c6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80020ca:	6013      	str	r3, [r2, #0]
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	685b      	ldr	r3, [r3, #4]
 80020d0:	2b00      	cmp	r3, #0
 80020d2:	d013      	beq.n	80020fc <HAL_RCC_OscConfig+0x2c8>
 80020d4:	f7ff fb2a 	bl	800172c <HAL_GetTick>
 80020d8:	6138      	str	r0, [r7, #16]
 80020da:	e008      	b.n	80020ee <HAL_RCC_OscConfig+0x2ba>
 80020dc:	f7ff fb26 	bl	800172c <HAL_GetTick>
 80020e0:	4602      	mov	r2, r0
 80020e2:	693b      	ldr	r3, [r7, #16]
 80020e4:	1ad3      	subs	r3, r2, r3
 80020e6:	2b64      	cmp	r3, #100	@ 0x64
 80020e8:	d901      	bls.n	80020ee <HAL_RCC_OscConfig+0x2ba>
 80020ea:	2303      	movs	r3, #3
 80020ec:	e2b4      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 80020ee:	4b92      	ldr	r3, [pc, #584]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80020f0:	681b      	ldr	r3, [r3, #0]
 80020f2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80020f6:	2b00      	cmp	r3, #0
 80020f8:	d0f0      	beq.n	80020dc <HAL_RCC_OscConfig+0x2a8>
 80020fa:	e014      	b.n	8002126 <HAL_RCC_OscConfig+0x2f2>
 80020fc:	f7ff fb16 	bl	800172c <HAL_GetTick>
 8002100:	6138      	str	r0, [r7, #16]
 8002102:	e008      	b.n	8002116 <HAL_RCC_OscConfig+0x2e2>
 8002104:	f7ff fb12 	bl	800172c <HAL_GetTick>
 8002108:	4602      	mov	r2, r0
 800210a:	693b      	ldr	r3, [r7, #16]
 800210c:	1ad3      	subs	r3, r2, r3
 800210e:	2b64      	cmp	r3, #100	@ 0x64
 8002110:	d901      	bls.n	8002116 <HAL_RCC_OscConfig+0x2e2>
 8002112:	2303      	movs	r3, #3
 8002114:	e2a0      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8002116:	4b88      	ldr	r3, [pc, #544]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 8002118:	681b      	ldr	r3, [r3, #0]
 800211a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800211e:	2b00      	cmp	r3, #0
 8002120:	d1f0      	bne.n	8002104 <HAL_RCC_OscConfig+0x2d0>
 8002122:	e000      	b.n	8002126 <HAL_RCC_OscConfig+0x2f2>
 8002124:	bf00      	nop
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	f003 0302 	and.w	r3, r3, #2
 800212e:	2b00      	cmp	r3, #0
 8002130:	d060      	beq.n	80021f4 <HAL_RCC_OscConfig+0x3c0>
 8002132:	69bb      	ldr	r3, [r7, #24]
 8002134:	2b04      	cmp	r3, #4
 8002136:	d005      	beq.n	8002144 <HAL_RCC_OscConfig+0x310>
 8002138:	69bb      	ldr	r3, [r7, #24]
 800213a:	2b0c      	cmp	r3, #12
 800213c:	d119      	bne.n	8002172 <HAL_RCC_OscConfig+0x33e>
 800213e:	697b      	ldr	r3, [r7, #20]
 8002140:	2b02      	cmp	r3, #2
 8002142:	d116      	bne.n	8002172 <HAL_RCC_OscConfig+0x33e>
 8002144:	4b7c      	ldr	r3, [pc, #496]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 8002146:	681b      	ldr	r3, [r3, #0]
 8002148:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800214c:	2b00      	cmp	r3, #0
 800214e:	d005      	beq.n	800215c <HAL_RCC_OscConfig+0x328>
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	68db      	ldr	r3, [r3, #12]
 8002154:	2b00      	cmp	r3, #0
 8002156:	d101      	bne.n	800215c <HAL_RCC_OscConfig+0x328>
 8002158:	2301      	movs	r3, #1
 800215a:	e27d      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 800215c:	4b76      	ldr	r3, [pc, #472]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800215e:	685b      	ldr	r3, [r3, #4]
 8002160:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	691b      	ldr	r3, [r3, #16]
 8002168:	061b      	lsls	r3, r3, #24
 800216a:	4973      	ldr	r1, [pc, #460]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800216c:	4313      	orrs	r3, r2
 800216e:	604b      	str	r3, [r1, #4]
 8002170:	e040      	b.n	80021f4 <HAL_RCC_OscConfig+0x3c0>
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	68db      	ldr	r3, [r3, #12]
 8002176:	2b00      	cmp	r3, #0
 8002178:	d023      	beq.n	80021c2 <HAL_RCC_OscConfig+0x38e>
 800217a:	4b6f      	ldr	r3, [pc, #444]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800217c:	681b      	ldr	r3, [r3, #0]
 800217e:	4a6e      	ldr	r2, [pc, #440]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 8002180:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002184:	6013      	str	r3, [r2, #0]
 8002186:	f7ff fad1 	bl	800172c <HAL_GetTick>
 800218a:	6138      	str	r0, [r7, #16]
 800218c:	e008      	b.n	80021a0 <HAL_RCC_OscConfig+0x36c>
 800218e:	f7ff facd 	bl	800172c <HAL_GetTick>
 8002192:	4602      	mov	r2, r0
 8002194:	693b      	ldr	r3, [r7, #16]
 8002196:	1ad3      	subs	r3, r2, r3
 8002198:	2b02      	cmp	r3, #2
 800219a:	d901      	bls.n	80021a0 <HAL_RCC_OscConfig+0x36c>
 800219c:	2303      	movs	r3, #3
 800219e:	e25b      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 80021a0:	4b65      	ldr	r3, [pc, #404]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80021a8:	2b00      	cmp	r3, #0
 80021aa:	d0f0      	beq.n	800218e <HAL_RCC_OscConfig+0x35a>
 80021ac:	4b62      	ldr	r3, [pc, #392]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80021ae:	685b      	ldr	r3, [r3, #4]
 80021b0:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	691b      	ldr	r3, [r3, #16]
 80021b8:	061b      	lsls	r3, r3, #24
 80021ba:	495f      	ldr	r1, [pc, #380]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80021bc:	4313      	orrs	r3, r2
 80021be:	604b      	str	r3, [r1, #4]
 80021c0:	e018      	b.n	80021f4 <HAL_RCC_OscConfig+0x3c0>
 80021c2:	4b5d      	ldr	r3, [pc, #372]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	4a5c      	ldr	r2, [pc, #368]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80021c8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80021cc:	6013      	str	r3, [r2, #0]
 80021ce:	f7ff faad 	bl	800172c <HAL_GetTick>
 80021d2:	6138      	str	r0, [r7, #16]
 80021d4:	e008      	b.n	80021e8 <HAL_RCC_OscConfig+0x3b4>
 80021d6:	f7ff faa9 	bl	800172c <HAL_GetTick>
 80021da:	4602      	mov	r2, r0
 80021dc:	693b      	ldr	r3, [r7, #16]
 80021de:	1ad3      	subs	r3, r2, r3
 80021e0:	2b02      	cmp	r3, #2
 80021e2:	d901      	bls.n	80021e8 <HAL_RCC_OscConfig+0x3b4>
 80021e4:	2303      	movs	r3, #3
 80021e6:	e237      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 80021e8:	4b53      	ldr	r3, [pc, #332]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80021f0:	2b00      	cmp	r3, #0
 80021f2:	d1f0      	bne.n	80021d6 <HAL_RCC_OscConfig+0x3a2>
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	f003 0308 	and.w	r3, r3, #8
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	d03c      	beq.n	800227a <HAL_RCC_OscConfig+0x446>
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	695b      	ldr	r3, [r3, #20]
 8002204:	2b00      	cmp	r3, #0
 8002206:	d01c      	beq.n	8002242 <HAL_RCC_OscConfig+0x40e>
 8002208:	4b4b      	ldr	r3, [pc, #300]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800220a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800220e:	4a4a      	ldr	r2, [pc, #296]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 8002210:	f043 0301 	orr.w	r3, r3, #1
 8002214:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8002218:	f7ff fa88 	bl	800172c <HAL_GetTick>
 800221c:	6138      	str	r0, [r7, #16]
 800221e:	e008      	b.n	8002232 <HAL_RCC_OscConfig+0x3fe>
 8002220:	f7ff fa84 	bl	800172c <HAL_GetTick>
 8002224:	4602      	mov	r2, r0
 8002226:	693b      	ldr	r3, [r7, #16]
 8002228:	1ad3      	subs	r3, r2, r3
 800222a:	2b02      	cmp	r3, #2
 800222c:	d901      	bls.n	8002232 <HAL_RCC_OscConfig+0x3fe>
 800222e:	2303      	movs	r3, #3
 8002230:	e212      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8002232:	4b41      	ldr	r3, [pc, #260]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 8002234:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002238:	f003 0302 	and.w	r3, r3, #2
 800223c:	2b00      	cmp	r3, #0
 800223e:	d0ef      	beq.n	8002220 <HAL_RCC_OscConfig+0x3ec>
 8002240:	e01b      	b.n	800227a <HAL_RCC_OscConfig+0x446>
 8002242:	4b3d      	ldr	r3, [pc, #244]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 8002244:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002248:	4a3b      	ldr	r2, [pc, #236]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800224a:	f023 0301 	bic.w	r3, r3, #1
 800224e:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8002252:	f7ff fa6b 	bl	800172c <HAL_GetTick>
 8002256:	6138      	str	r0, [r7, #16]
 8002258:	e008      	b.n	800226c <HAL_RCC_OscConfig+0x438>
 800225a:	f7ff fa67 	bl	800172c <HAL_GetTick>
 800225e:	4602      	mov	r2, r0
 8002260:	693b      	ldr	r3, [r7, #16]
 8002262:	1ad3      	subs	r3, r2, r3
 8002264:	2b02      	cmp	r3, #2
 8002266:	d901      	bls.n	800226c <HAL_RCC_OscConfig+0x438>
 8002268:	2303      	movs	r3, #3
 800226a:	e1f5      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 800226c:	4b32      	ldr	r3, [pc, #200]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800226e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002272:	f003 0302 	and.w	r3, r3, #2
 8002276:	2b00      	cmp	r3, #0
 8002278:	d1ef      	bne.n	800225a <HAL_RCC_OscConfig+0x426>
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	681b      	ldr	r3, [r3, #0]
 800227e:	f003 0304 	and.w	r3, r3, #4
 8002282:	2b00      	cmp	r3, #0
 8002284:	f000 80a6 	beq.w	80023d4 <HAL_RCC_OscConfig+0x5a0>
 8002288:	2300      	movs	r3, #0
 800228a:	77fb      	strb	r3, [r7, #31]
 800228c:	4b2a      	ldr	r3, [pc, #168]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800228e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002290:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002294:	2b00      	cmp	r3, #0
 8002296:	d10d      	bne.n	80022b4 <HAL_RCC_OscConfig+0x480>
 8002298:	4b27      	ldr	r3, [pc, #156]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800229a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800229c:	4a26      	ldr	r2, [pc, #152]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800229e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80022a2:	6593      	str	r3, [r2, #88]	@ 0x58
 80022a4:	4b24      	ldr	r3, [pc, #144]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80022a6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80022a8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80022ac:	60bb      	str	r3, [r7, #8]
 80022ae:	68bb      	ldr	r3, [r7, #8]
 80022b0:	2301      	movs	r3, #1
 80022b2:	77fb      	strb	r3, [r7, #31]
 80022b4:	4b21      	ldr	r3, [pc, #132]	@ (800233c <HAL_RCC_OscConfig+0x508>)
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80022bc:	2b00      	cmp	r3, #0
 80022be:	d118      	bne.n	80022f2 <HAL_RCC_OscConfig+0x4be>
 80022c0:	4b1e      	ldr	r3, [pc, #120]	@ (800233c <HAL_RCC_OscConfig+0x508>)
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	4a1d      	ldr	r2, [pc, #116]	@ (800233c <HAL_RCC_OscConfig+0x508>)
 80022c6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80022ca:	6013      	str	r3, [r2, #0]
 80022cc:	f7ff fa2e 	bl	800172c <HAL_GetTick>
 80022d0:	6138      	str	r0, [r7, #16]
 80022d2:	e008      	b.n	80022e6 <HAL_RCC_OscConfig+0x4b2>
 80022d4:	f7ff fa2a 	bl	800172c <HAL_GetTick>
 80022d8:	4602      	mov	r2, r0
 80022da:	693b      	ldr	r3, [r7, #16]
 80022dc:	1ad3      	subs	r3, r2, r3
 80022de:	2b02      	cmp	r3, #2
 80022e0:	d901      	bls.n	80022e6 <HAL_RCC_OscConfig+0x4b2>
 80022e2:	2303      	movs	r3, #3
 80022e4:	e1b8      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 80022e6:	4b15      	ldr	r3, [pc, #84]	@ (800233c <HAL_RCC_OscConfig+0x508>)
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80022ee:	2b00      	cmp	r3, #0
 80022f0:	d0f0      	beq.n	80022d4 <HAL_RCC_OscConfig+0x4a0>
 80022f2:	687b      	ldr	r3, [r7, #4]
 80022f4:	689b      	ldr	r3, [r3, #8]
 80022f6:	2b01      	cmp	r3, #1
 80022f8:	d108      	bne.n	800230c <HAL_RCC_OscConfig+0x4d8>
 80022fa:	4b0f      	ldr	r3, [pc, #60]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 80022fc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002300:	4a0d      	ldr	r2, [pc, #52]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 8002302:	f043 0301 	orr.w	r3, r3, #1
 8002306:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800230a:	e029      	b.n	8002360 <HAL_RCC_OscConfig+0x52c>
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	689b      	ldr	r3, [r3, #8]
 8002310:	2b05      	cmp	r3, #5
 8002312:	d115      	bne.n	8002340 <HAL_RCC_OscConfig+0x50c>
 8002314:	4b08      	ldr	r3, [pc, #32]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 8002316:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800231a:	4a07      	ldr	r2, [pc, #28]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800231c:	f043 0304 	orr.w	r3, r3, #4
 8002320:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002324:	4b04      	ldr	r3, [pc, #16]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 8002326:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800232a:	4a03      	ldr	r2, [pc, #12]	@ (8002338 <HAL_RCC_OscConfig+0x504>)
 800232c:	f043 0301 	orr.w	r3, r3, #1
 8002330:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002334:	e014      	b.n	8002360 <HAL_RCC_OscConfig+0x52c>
 8002336:	bf00      	nop
 8002338:	40021000 	.word	0x40021000
 800233c:	40007000 	.word	0x40007000
 8002340:	4b9d      	ldr	r3, [pc, #628]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002342:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002346:	4a9c      	ldr	r2, [pc, #624]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002348:	f023 0301 	bic.w	r3, r3, #1
 800234c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002350:	4b99      	ldr	r3, [pc, #612]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002352:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002356:	4a98      	ldr	r2, [pc, #608]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002358:	f023 0304 	bic.w	r3, r3, #4
 800235c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	689b      	ldr	r3, [r3, #8]
 8002364:	2b00      	cmp	r3, #0
 8002366:	d016      	beq.n	8002396 <HAL_RCC_OscConfig+0x562>
 8002368:	f7ff f9e0 	bl	800172c <HAL_GetTick>
 800236c:	6138      	str	r0, [r7, #16]
 800236e:	e00a      	b.n	8002386 <HAL_RCC_OscConfig+0x552>
 8002370:	f7ff f9dc 	bl	800172c <HAL_GetTick>
 8002374:	4602      	mov	r2, r0
 8002376:	693b      	ldr	r3, [r7, #16]
 8002378:	1ad3      	subs	r3, r2, r3
 800237a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800237e:	4293      	cmp	r3, r2
 8002380:	d901      	bls.n	8002386 <HAL_RCC_OscConfig+0x552>
 8002382:	2303      	movs	r3, #3
 8002384:	e168      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8002386:	4b8c      	ldr	r3, [pc, #560]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002388:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800238c:	f003 0302 	and.w	r3, r3, #2
 8002390:	2b00      	cmp	r3, #0
 8002392:	d0ed      	beq.n	8002370 <HAL_RCC_OscConfig+0x53c>
 8002394:	e015      	b.n	80023c2 <HAL_RCC_OscConfig+0x58e>
 8002396:	f7ff f9c9 	bl	800172c <HAL_GetTick>
 800239a:	6138      	str	r0, [r7, #16]
 800239c:	e00a      	b.n	80023b4 <HAL_RCC_OscConfig+0x580>
 800239e:	f7ff f9c5 	bl	800172c <HAL_GetTick>
 80023a2:	4602      	mov	r2, r0
 80023a4:	693b      	ldr	r3, [r7, #16]
 80023a6:	1ad3      	subs	r3, r2, r3
 80023a8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80023ac:	4293      	cmp	r3, r2
 80023ae:	d901      	bls.n	80023b4 <HAL_RCC_OscConfig+0x580>
 80023b0:	2303      	movs	r3, #3
 80023b2:	e151      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 80023b4:	4b80      	ldr	r3, [pc, #512]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 80023b6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80023ba:	f003 0302 	and.w	r3, r3, #2
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d1ed      	bne.n	800239e <HAL_RCC_OscConfig+0x56a>
 80023c2:	7ffb      	ldrb	r3, [r7, #31]
 80023c4:	2b01      	cmp	r3, #1
 80023c6:	d105      	bne.n	80023d4 <HAL_RCC_OscConfig+0x5a0>
 80023c8:	4b7b      	ldr	r3, [pc, #492]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 80023ca:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80023cc:	4a7a      	ldr	r2, [pc, #488]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 80023ce:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80023d2:	6593      	str	r3, [r2, #88]	@ 0x58
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	f003 0320 	and.w	r3, r3, #32
 80023dc:	2b00      	cmp	r3, #0
 80023de:	d03c      	beq.n	800245a <HAL_RCC_OscConfig+0x626>
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80023e4:	2b00      	cmp	r3, #0
 80023e6:	d01c      	beq.n	8002422 <HAL_RCC_OscConfig+0x5ee>
 80023e8:	4b73      	ldr	r3, [pc, #460]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 80023ea:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80023ee:	4a72      	ldr	r2, [pc, #456]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 80023f0:	f043 0301 	orr.w	r3, r3, #1
 80023f4:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 80023f8:	f7ff f998 	bl	800172c <HAL_GetTick>
 80023fc:	6138      	str	r0, [r7, #16]
 80023fe:	e008      	b.n	8002412 <HAL_RCC_OscConfig+0x5de>
 8002400:	f7ff f994 	bl	800172c <HAL_GetTick>
 8002404:	4602      	mov	r2, r0
 8002406:	693b      	ldr	r3, [r7, #16]
 8002408:	1ad3      	subs	r3, r2, r3
 800240a:	2b02      	cmp	r3, #2
 800240c:	d901      	bls.n	8002412 <HAL_RCC_OscConfig+0x5de>
 800240e:	2303      	movs	r3, #3
 8002410:	e122      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8002412:	4b69      	ldr	r3, [pc, #420]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002414:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002418:	f003 0302 	and.w	r3, r3, #2
 800241c:	2b00      	cmp	r3, #0
 800241e:	d0ef      	beq.n	8002400 <HAL_RCC_OscConfig+0x5cc>
 8002420:	e01b      	b.n	800245a <HAL_RCC_OscConfig+0x626>
 8002422:	4b65      	ldr	r3, [pc, #404]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002424:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002428:	4a63      	ldr	r2, [pc, #396]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 800242a:	f023 0301 	bic.w	r3, r3, #1
 800242e:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8002432:	f7ff f97b 	bl	800172c <HAL_GetTick>
 8002436:	6138      	str	r0, [r7, #16]
 8002438:	e008      	b.n	800244c <HAL_RCC_OscConfig+0x618>
 800243a:	f7ff f977 	bl	800172c <HAL_GetTick>
 800243e:	4602      	mov	r2, r0
 8002440:	693b      	ldr	r3, [r7, #16]
 8002442:	1ad3      	subs	r3, r2, r3
 8002444:	2b02      	cmp	r3, #2
 8002446:	d901      	bls.n	800244c <HAL_RCC_OscConfig+0x618>
 8002448:	2303      	movs	r3, #3
 800244a:	e105      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 800244c:	4b5a      	ldr	r3, [pc, #360]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 800244e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002452:	f003 0302 	and.w	r3, r3, #2
 8002456:	2b00      	cmp	r3, #0
 8002458:	d1ef      	bne.n	800243a <HAL_RCC_OscConfig+0x606>
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800245e:	2b00      	cmp	r3, #0
 8002460:	f000 80f9 	beq.w	8002656 <HAL_RCC_OscConfig+0x822>
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002468:	2b02      	cmp	r3, #2
 800246a:	f040 80cf 	bne.w	800260c <HAL_RCC_OscConfig+0x7d8>
 800246e:	4b52      	ldr	r3, [pc, #328]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002470:	68db      	ldr	r3, [r3, #12]
 8002472:	617b      	str	r3, [r7, #20]
 8002474:	697b      	ldr	r3, [r7, #20]
 8002476:	f003 0203 	and.w	r2, r3, #3
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800247e:	429a      	cmp	r2, r3
 8002480:	d12c      	bne.n	80024dc <HAL_RCC_OscConfig+0x6a8>
 8002482:	697b      	ldr	r3, [r7, #20]
 8002484:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800248c:	3b01      	subs	r3, #1
 800248e:	011b      	lsls	r3, r3, #4
 8002490:	429a      	cmp	r2, r3
 8002492:	d123      	bne.n	80024dc <HAL_RCC_OscConfig+0x6a8>
 8002494:	697b      	ldr	r3, [r7, #20]
 8002496:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800249e:	021b      	lsls	r3, r3, #8
 80024a0:	429a      	cmp	r2, r3
 80024a2:	d11b      	bne.n	80024dc <HAL_RCC_OscConfig+0x6a8>
 80024a4:	697b      	ldr	r3, [r7, #20]
 80024a6:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80024ae:	06db      	lsls	r3, r3, #27
 80024b0:	429a      	cmp	r2, r3
 80024b2:	d113      	bne.n	80024dc <HAL_RCC_OscConfig+0x6a8>
 80024b4:	697b      	ldr	r3, [r7, #20]
 80024b6:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80024be:	085b      	lsrs	r3, r3, #1
 80024c0:	3b01      	subs	r3, #1
 80024c2:	055b      	lsls	r3, r3, #21
 80024c4:	429a      	cmp	r2, r3
 80024c6:	d109      	bne.n	80024dc <HAL_RCC_OscConfig+0x6a8>
 80024c8:	697b      	ldr	r3, [r7, #20]
 80024ca:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024d2:	085b      	lsrs	r3, r3, #1
 80024d4:	3b01      	subs	r3, #1
 80024d6:	065b      	lsls	r3, r3, #25
 80024d8:	429a      	cmp	r2, r3
 80024da:	d071      	beq.n	80025c0 <HAL_RCC_OscConfig+0x78c>
 80024dc:	69bb      	ldr	r3, [r7, #24]
 80024de:	2b0c      	cmp	r3, #12
 80024e0:	d068      	beq.n	80025b4 <HAL_RCC_OscConfig+0x780>
 80024e2:	4b35      	ldr	r3, [pc, #212]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 80024e4:	681b      	ldr	r3, [r3, #0]
 80024e6:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	d105      	bne.n	80024fa <HAL_RCC_OscConfig+0x6c6>
 80024ee:	4b32      	ldr	r3, [pc, #200]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 80024f0:	681b      	ldr	r3, [r3, #0]
 80024f2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80024f6:	2b00      	cmp	r3, #0
 80024f8:	d001      	beq.n	80024fe <HAL_RCC_OscConfig+0x6ca>
 80024fa:	2301      	movs	r3, #1
 80024fc:	e0ac      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 80024fe:	4b2e      	ldr	r3, [pc, #184]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002500:	681b      	ldr	r3, [r3, #0]
 8002502:	4a2d      	ldr	r2, [pc, #180]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002504:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8002508:	6013      	str	r3, [r2, #0]
 800250a:	f7ff f90f 	bl	800172c <HAL_GetTick>
 800250e:	6138      	str	r0, [r7, #16]
 8002510:	e008      	b.n	8002524 <HAL_RCC_OscConfig+0x6f0>
 8002512:	f7ff f90b 	bl	800172c <HAL_GetTick>
 8002516:	4602      	mov	r2, r0
 8002518:	693b      	ldr	r3, [r7, #16]
 800251a:	1ad3      	subs	r3, r2, r3
 800251c:	2b02      	cmp	r3, #2
 800251e:	d901      	bls.n	8002524 <HAL_RCC_OscConfig+0x6f0>
 8002520:	2303      	movs	r3, #3
 8002522:	e099      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8002524:	4b24      	ldr	r3, [pc, #144]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800252c:	2b00      	cmp	r3, #0
 800252e:	d1f0      	bne.n	8002512 <HAL_RCC_OscConfig+0x6de>
 8002530:	4b21      	ldr	r3, [pc, #132]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002532:	68da      	ldr	r2, [r3, #12]
 8002534:	4b21      	ldr	r3, [pc, #132]	@ (80025bc <HAL_RCC_OscConfig+0x788>)
 8002536:	4013      	ands	r3, r2
 8002538:	687a      	ldr	r2, [r7, #4]
 800253a:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 800253c:	687a      	ldr	r2, [r7, #4]
 800253e:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8002540:	3a01      	subs	r2, #1
 8002542:	0112      	lsls	r2, r2, #4
 8002544:	4311      	orrs	r1, r2
 8002546:	687a      	ldr	r2, [r7, #4]
 8002548:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800254a:	0212      	lsls	r2, r2, #8
 800254c:	4311      	orrs	r1, r2
 800254e:	687a      	ldr	r2, [r7, #4]
 8002550:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8002552:	0852      	lsrs	r2, r2, #1
 8002554:	3a01      	subs	r2, #1
 8002556:	0552      	lsls	r2, r2, #21
 8002558:	4311      	orrs	r1, r2
 800255a:	687a      	ldr	r2, [r7, #4]
 800255c:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 800255e:	0852      	lsrs	r2, r2, #1
 8002560:	3a01      	subs	r2, #1
 8002562:	0652      	lsls	r2, r2, #25
 8002564:	4311      	orrs	r1, r2
 8002566:	687a      	ldr	r2, [r7, #4]
 8002568:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 800256a:	06d2      	lsls	r2, r2, #27
 800256c:	430a      	orrs	r2, r1
 800256e:	4912      	ldr	r1, [pc, #72]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002570:	4313      	orrs	r3, r2
 8002572:	60cb      	str	r3, [r1, #12]
 8002574:	4b10      	ldr	r3, [pc, #64]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	4a0f      	ldr	r2, [pc, #60]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 800257a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800257e:	6013      	str	r3, [r2, #0]
 8002580:	4b0d      	ldr	r3, [pc, #52]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002582:	68db      	ldr	r3, [r3, #12]
 8002584:	4a0c      	ldr	r2, [pc, #48]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 8002586:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800258a:	60d3      	str	r3, [r2, #12]
 800258c:	f7ff f8ce 	bl	800172c <HAL_GetTick>
 8002590:	6138      	str	r0, [r7, #16]
 8002592:	e008      	b.n	80025a6 <HAL_RCC_OscConfig+0x772>
 8002594:	f7ff f8ca 	bl	800172c <HAL_GetTick>
 8002598:	4602      	mov	r2, r0
 800259a:	693b      	ldr	r3, [r7, #16]
 800259c:	1ad3      	subs	r3, r2, r3
 800259e:	2b02      	cmp	r3, #2
 80025a0:	d901      	bls.n	80025a6 <HAL_RCC_OscConfig+0x772>
 80025a2:	2303      	movs	r3, #3
 80025a4:	e058      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 80025a6:	4b04      	ldr	r3, [pc, #16]	@ (80025b8 <HAL_RCC_OscConfig+0x784>)
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80025ae:	2b00      	cmp	r3, #0
 80025b0:	d0f0      	beq.n	8002594 <HAL_RCC_OscConfig+0x760>
 80025b2:	e050      	b.n	8002656 <HAL_RCC_OscConfig+0x822>
 80025b4:	2301      	movs	r3, #1
 80025b6:	e04f      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 80025b8:	40021000 	.word	0x40021000
 80025bc:	019d800c 	.word	0x019d800c
 80025c0:	4b27      	ldr	r3, [pc, #156]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 80025c2:	681b      	ldr	r3, [r3, #0]
 80025c4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80025c8:	2b00      	cmp	r3, #0
 80025ca:	d144      	bne.n	8002656 <HAL_RCC_OscConfig+0x822>
 80025cc:	4b24      	ldr	r3, [pc, #144]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	4a23      	ldr	r2, [pc, #140]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 80025d2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80025d6:	6013      	str	r3, [r2, #0]
 80025d8:	4b21      	ldr	r3, [pc, #132]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 80025da:	68db      	ldr	r3, [r3, #12]
 80025dc:	4a20      	ldr	r2, [pc, #128]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 80025de:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80025e2:	60d3      	str	r3, [r2, #12]
 80025e4:	f7ff f8a2 	bl	800172c <HAL_GetTick>
 80025e8:	6138      	str	r0, [r7, #16]
 80025ea:	e008      	b.n	80025fe <HAL_RCC_OscConfig+0x7ca>
 80025ec:	f7ff f89e 	bl	800172c <HAL_GetTick>
 80025f0:	4602      	mov	r2, r0
 80025f2:	693b      	ldr	r3, [r7, #16]
 80025f4:	1ad3      	subs	r3, r2, r3
 80025f6:	2b02      	cmp	r3, #2
 80025f8:	d901      	bls.n	80025fe <HAL_RCC_OscConfig+0x7ca>
 80025fa:	2303      	movs	r3, #3
 80025fc:	e02c      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 80025fe:	4b18      	ldr	r3, [pc, #96]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 8002600:	681b      	ldr	r3, [r3, #0]
 8002602:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002606:	2b00      	cmp	r3, #0
 8002608:	d0f0      	beq.n	80025ec <HAL_RCC_OscConfig+0x7b8>
 800260a:	e024      	b.n	8002656 <HAL_RCC_OscConfig+0x822>
 800260c:	69bb      	ldr	r3, [r7, #24]
 800260e:	2b0c      	cmp	r3, #12
 8002610:	d01f      	beq.n	8002652 <HAL_RCC_OscConfig+0x81e>
 8002612:	4b13      	ldr	r3, [pc, #76]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 8002614:	681b      	ldr	r3, [r3, #0]
 8002616:	4a12      	ldr	r2, [pc, #72]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 8002618:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800261c:	6013      	str	r3, [r2, #0]
 800261e:	f7ff f885 	bl	800172c <HAL_GetTick>
 8002622:	6138      	str	r0, [r7, #16]
 8002624:	e008      	b.n	8002638 <HAL_RCC_OscConfig+0x804>
 8002626:	f7ff f881 	bl	800172c <HAL_GetTick>
 800262a:	4602      	mov	r2, r0
 800262c:	693b      	ldr	r3, [r7, #16]
 800262e:	1ad3      	subs	r3, r2, r3
 8002630:	2b02      	cmp	r3, #2
 8002632:	d901      	bls.n	8002638 <HAL_RCC_OscConfig+0x804>
 8002634:	2303      	movs	r3, #3
 8002636:	e00f      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8002638:	4b09      	ldr	r3, [pc, #36]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 800263a:	681b      	ldr	r3, [r3, #0]
 800263c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002640:	2b00      	cmp	r3, #0
 8002642:	d1f0      	bne.n	8002626 <HAL_RCC_OscConfig+0x7f2>
 8002644:	4b06      	ldr	r3, [pc, #24]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 8002646:	68da      	ldr	r2, [r3, #12]
 8002648:	4905      	ldr	r1, [pc, #20]	@ (8002660 <HAL_RCC_OscConfig+0x82c>)
 800264a:	4b06      	ldr	r3, [pc, #24]	@ (8002664 <HAL_RCC_OscConfig+0x830>)
 800264c:	4013      	ands	r3, r2
 800264e:	60cb      	str	r3, [r1, #12]
 8002650:	e001      	b.n	8002656 <HAL_RCC_OscConfig+0x822>
 8002652:	2301      	movs	r3, #1
 8002654:	e000      	b.n	8002658 <HAL_RCC_OscConfig+0x824>
 8002656:	2300      	movs	r3, #0
 8002658:	4618      	mov	r0, r3
 800265a:	3720      	adds	r7, #32
 800265c:	46bd      	mov	sp, r7
 800265e:	bd80      	pop	{r7, pc}
 8002660:	40021000 	.word	0x40021000
 8002664:	feeefffc 	.word	0xfeeefffc

08002668 <HAL_RCC_ClockConfig>:
 8002668:	b580      	push	{r7, lr}
 800266a:	b086      	sub	sp, #24
 800266c:	af00      	add	r7, sp, #0
 800266e:	6078      	str	r0, [r7, #4]
 8002670:	6039      	str	r1, [r7, #0]
 8002672:	2300      	movs	r3, #0
 8002674:	617b      	str	r3, [r7, #20]
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	2b00      	cmp	r3, #0
 800267a:	d101      	bne.n	8002680 <HAL_RCC_ClockConfig+0x18>
 800267c:	2301      	movs	r3, #1
 800267e:	e11d      	b.n	80028bc <HAL_RCC_ClockConfig+0x254>
 8002680:	4b90      	ldr	r3, [pc, #576]	@ (80028c4 <HAL_RCC_ClockConfig+0x25c>)
 8002682:	681b      	ldr	r3, [r3, #0]
 8002684:	f003 030f 	and.w	r3, r3, #15
 8002688:	683a      	ldr	r2, [r7, #0]
 800268a:	429a      	cmp	r2, r3
 800268c:	d910      	bls.n	80026b0 <HAL_RCC_ClockConfig+0x48>
 800268e:	4b8d      	ldr	r3, [pc, #564]	@ (80028c4 <HAL_RCC_ClockConfig+0x25c>)
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	f023 020f 	bic.w	r2, r3, #15
 8002696:	498b      	ldr	r1, [pc, #556]	@ (80028c4 <HAL_RCC_ClockConfig+0x25c>)
 8002698:	683b      	ldr	r3, [r7, #0]
 800269a:	4313      	orrs	r3, r2
 800269c:	600b      	str	r3, [r1, #0]
 800269e:	4b89      	ldr	r3, [pc, #548]	@ (80028c4 <HAL_RCC_ClockConfig+0x25c>)
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	f003 030f 	and.w	r3, r3, #15
 80026a6:	683a      	ldr	r2, [r7, #0]
 80026a8:	429a      	cmp	r2, r3
 80026aa:	d001      	beq.n	80026b0 <HAL_RCC_ClockConfig+0x48>
 80026ac:	2301      	movs	r3, #1
 80026ae:	e105      	b.n	80028bc <HAL_RCC_ClockConfig+0x254>
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	681b      	ldr	r3, [r3, #0]
 80026b4:	f003 0302 	and.w	r3, r3, #2
 80026b8:	2b00      	cmp	r3, #0
 80026ba:	d010      	beq.n	80026de <HAL_RCC_ClockConfig+0x76>
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	689a      	ldr	r2, [r3, #8]
 80026c0:	4b81      	ldr	r3, [pc, #516]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 80026c2:	689b      	ldr	r3, [r3, #8]
 80026c4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80026c8:	429a      	cmp	r2, r3
 80026ca:	d908      	bls.n	80026de <HAL_RCC_ClockConfig+0x76>
 80026cc:	4b7e      	ldr	r3, [pc, #504]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 80026ce:	689b      	ldr	r3, [r3, #8]
 80026d0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	689b      	ldr	r3, [r3, #8]
 80026d8:	497b      	ldr	r1, [pc, #492]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 80026da:	4313      	orrs	r3, r2
 80026dc:	608b      	str	r3, [r1, #8]
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	681b      	ldr	r3, [r3, #0]
 80026e2:	f003 0301 	and.w	r3, r3, #1
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d079      	beq.n	80027de <HAL_RCC_ClockConfig+0x176>
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	685b      	ldr	r3, [r3, #4]
 80026ee:	2b03      	cmp	r3, #3
 80026f0:	d11e      	bne.n	8002730 <HAL_RCC_ClockConfig+0xc8>
 80026f2:	4b75      	ldr	r3, [pc, #468]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80026fa:	2b00      	cmp	r3, #0
 80026fc:	d101      	bne.n	8002702 <HAL_RCC_ClockConfig+0x9a>
 80026fe:	2301      	movs	r3, #1
 8002700:	e0dc      	b.n	80028bc <HAL_RCC_ClockConfig+0x254>
 8002702:	f000 f9d1 	bl	8002aa8 <RCC_GetSysClockFreqFromPLLSource>
 8002706:	4603      	mov	r3, r0
 8002708:	4a70      	ldr	r2, [pc, #448]	@ (80028cc <HAL_RCC_ClockConfig+0x264>)
 800270a:	4293      	cmp	r3, r2
 800270c:	d946      	bls.n	800279c <HAL_RCC_ClockConfig+0x134>
 800270e:	4b6e      	ldr	r3, [pc, #440]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 8002710:	689b      	ldr	r3, [r3, #8]
 8002712:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002716:	2b00      	cmp	r3, #0
 8002718:	d140      	bne.n	800279c <HAL_RCC_ClockConfig+0x134>
 800271a:	4b6b      	ldr	r3, [pc, #428]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 800271c:	689b      	ldr	r3, [r3, #8]
 800271e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8002722:	4a69      	ldr	r2, [pc, #420]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 8002724:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002728:	6093      	str	r3, [r2, #8]
 800272a:	2380      	movs	r3, #128	@ 0x80
 800272c:	617b      	str	r3, [r7, #20]
 800272e:	e035      	b.n	800279c <HAL_RCC_ClockConfig+0x134>
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	685b      	ldr	r3, [r3, #4]
 8002734:	2b02      	cmp	r3, #2
 8002736:	d107      	bne.n	8002748 <HAL_RCC_ClockConfig+0xe0>
 8002738:	4b63      	ldr	r3, [pc, #396]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002740:	2b00      	cmp	r3, #0
 8002742:	d115      	bne.n	8002770 <HAL_RCC_ClockConfig+0x108>
 8002744:	2301      	movs	r3, #1
 8002746:	e0b9      	b.n	80028bc <HAL_RCC_ClockConfig+0x254>
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	685b      	ldr	r3, [r3, #4]
 800274c:	2b00      	cmp	r3, #0
 800274e:	d107      	bne.n	8002760 <HAL_RCC_ClockConfig+0xf8>
 8002750:	4b5d      	ldr	r3, [pc, #372]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	f003 0302 	and.w	r3, r3, #2
 8002758:	2b00      	cmp	r3, #0
 800275a:	d109      	bne.n	8002770 <HAL_RCC_ClockConfig+0x108>
 800275c:	2301      	movs	r3, #1
 800275e:	e0ad      	b.n	80028bc <HAL_RCC_ClockConfig+0x254>
 8002760:	4b59      	ldr	r3, [pc, #356]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 8002762:	681b      	ldr	r3, [r3, #0]
 8002764:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002768:	2b00      	cmp	r3, #0
 800276a:	d101      	bne.n	8002770 <HAL_RCC_ClockConfig+0x108>
 800276c:	2301      	movs	r3, #1
 800276e:	e0a5      	b.n	80028bc <HAL_RCC_ClockConfig+0x254>
 8002770:	f000 f8b4 	bl	80028dc <HAL_RCC_GetSysClockFreq>
 8002774:	4603      	mov	r3, r0
 8002776:	4a55      	ldr	r2, [pc, #340]	@ (80028cc <HAL_RCC_ClockConfig+0x264>)
 8002778:	4293      	cmp	r3, r2
 800277a:	d90f      	bls.n	800279c <HAL_RCC_ClockConfig+0x134>
 800277c:	4b52      	ldr	r3, [pc, #328]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 800277e:	689b      	ldr	r3, [r3, #8]
 8002780:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002784:	2b00      	cmp	r3, #0
 8002786:	d109      	bne.n	800279c <HAL_RCC_ClockConfig+0x134>
 8002788:	4b4f      	ldr	r3, [pc, #316]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 800278a:	689b      	ldr	r3, [r3, #8]
 800278c:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8002790:	4a4d      	ldr	r2, [pc, #308]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 8002792:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002796:	6093      	str	r3, [r2, #8]
 8002798:	2380      	movs	r3, #128	@ 0x80
 800279a:	617b      	str	r3, [r7, #20]
 800279c:	4b4a      	ldr	r3, [pc, #296]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 800279e:	689b      	ldr	r3, [r3, #8]
 80027a0:	f023 0203 	bic.w	r2, r3, #3
 80027a4:	687b      	ldr	r3, [r7, #4]
 80027a6:	685b      	ldr	r3, [r3, #4]
 80027a8:	4947      	ldr	r1, [pc, #284]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 80027aa:	4313      	orrs	r3, r2
 80027ac:	608b      	str	r3, [r1, #8]
 80027ae:	f7fe ffbd 	bl	800172c <HAL_GetTick>
 80027b2:	6138      	str	r0, [r7, #16]
 80027b4:	e00a      	b.n	80027cc <HAL_RCC_ClockConfig+0x164>
 80027b6:	f7fe ffb9 	bl	800172c <HAL_GetTick>
 80027ba:	4602      	mov	r2, r0
 80027bc:	693b      	ldr	r3, [r7, #16]
 80027be:	1ad3      	subs	r3, r2, r3
 80027c0:	f241 3288 	movw	r2, #5000	@ 0x1388
 80027c4:	4293      	cmp	r3, r2
 80027c6:	d901      	bls.n	80027cc <HAL_RCC_ClockConfig+0x164>
 80027c8:	2303      	movs	r3, #3
 80027ca:	e077      	b.n	80028bc <HAL_RCC_ClockConfig+0x254>
 80027cc:	4b3e      	ldr	r3, [pc, #248]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 80027ce:	689b      	ldr	r3, [r3, #8]
 80027d0:	f003 020c 	and.w	r2, r3, #12
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	685b      	ldr	r3, [r3, #4]
 80027d8:	009b      	lsls	r3, r3, #2
 80027da:	429a      	cmp	r2, r3
 80027dc:	d1eb      	bne.n	80027b6 <HAL_RCC_ClockConfig+0x14e>
 80027de:	697b      	ldr	r3, [r7, #20]
 80027e0:	2b80      	cmp	r3, #128	@ 0x80
 80027e2:	d105      	bne.n	80027f0 <HAL_RCC_ClockConfig+0x188>
 80027e4:	4b38      	ldr	r3, [pc, #224]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 80027e6:	689b      	ldr	r3, [r3, #8]
 80027e8:	4a37      	ldr	r2, [pc, #220]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 80027ea:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80027ee:	6093      	str	r3, [r2, #8]
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	681b      	ldr	r3, [r3, #0]
 80027f4:	f003 0302 	and.w	r3, r3, #2
 80027f8:	2b00      	cmp	r3, #0
 80027fa:	d010      	beq.n	800281e <HAL_RCC_ClockConfig+0x1b6>
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	689a      	ldr	r2, [r3, #8]
 8002800:	4b31      	ldr	r3, [pc, #196]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 8002802:	689b      	ldr	r3, [r3, #8]
 8002804:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002808:	429a      	cmp	r2, r3
 800280a:	d208      	bcs.n	800281e <HAL_RCC_ClockConfig+0x1b6>
 800280c:	4b2e      	ldr	r3, [pc, #184]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 800280e:	689b      	ldr	r3, [r3, #8]
 8002810:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	689b      	ldr	r3, [r3, #8]
 8002818:	492b      	ldr	r1, [pc, #172]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 800281a:	4313      	orrs	r3, r2
 800281c:	608b      	str	r3, [r1, #8]
 800281e:	4b29      	ldr	r3, [pc, #164]	@ (80028c4 <HAL_RCC_ClockConfig+0x25c>)
 8002820:	681b      	ldr	r3, [r3, #0]
 8002822:	f003 030f 	and.w	r3, r3, #15
 8002826:	683a      	ldr	r2, [r7, #0]
 8002828:	429a      	cmp	r2, r3
 800282a:	d210      	bcs.n	800284e <HAL_RCC_ClockConfig+0x1e6>
 800282c:	4b25      	ldr	r3, [pc, #148]	@ (80028c4 <HAL_RCC_ClockConfig+0x25c>)
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	f023 020f 	bic.w	r2, r3, #15
 8002834:	4923      	ldr	r1, [pc, #140]	@ (80028c4 <HAL_RCC_ClockConfig+0x25c>)
 8002836:	683b      	ldr	r3, [r7, #0]
 8002838:	4313      	orrs	r3, r2
 800283a:	600b      	str	r3, [r1, #0]
 800283c:	4b21      	ldr	r3, [pc, #132]	@ (80028c4 <HAL_RCC_ClockConfig+0x25c>)
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	f003 030f 	and.w	r3, r3, #15
 8002844:	683a      	ldr	r2, [r7, #0]
 8002846:	429a      	cmp	r2, r3
 8002848:	d001      	beq.n	800284e <HAL_RCC_ClockConfig+0x1e6>
 800284a:	2301      	movs	r3, #1
 800284c:	e036      	b.n	80028bc <HAL_RCC_ClockConfig+0x254>
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	681b      	ldr	r3, [r3, #0]
 8002852:	f003 0304 	and.w	r3, r3, #4
 8002856:	2b00      	cmp	r3, #0
 8002858:	d008      	beq.n	800286c <HAL_RCC_ClockConfig+0x204>
 800285a:	4b1b      	ldr	r3, [pc, #108]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 800285c:	689b      	ldr	r3, [r3, #8]
 800285e:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	68db      	ldr	r3, [r3, #12]
 8002866:	4918      	ldr	r1, [pc, #96]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 8002868:	4313      	orrs	r3, r2
 800286a:	608b      	str	r3, [r1, #8]
 800286c:	687b      	ldr	r3, [r7, #4]
 800286e:	681b      	ldr	r3, [r3, #0]
 8002870:	f003 0308 	and.w	r3, r3, #8
 8002874:	2b00      	cmp	r3, #0
 8002876:	d009      	beq.n	800288c <HAL_RCC_ClockConfig+0x224>
 8002878:	4b13      	ldr	r3, [pc, #76]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 800287a:	689b      	ldr	r3, [r3, #8]
 800287c:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8002880:	687b      	ldr	r3, [r7, #4]
 8002882:	691b      	ldr	r3, [r3, #16]
 8002884:	00db      	lsls	r3, r3, #3
 8002886:	4910      	ldr	r1, [pc, #64]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 8002888:	4313      	orrs	r3, r2
 800288a:	608b      	str	r3, [r1, #8]
 800288c:	f000 f826 	bl	80028dc <HAL_RCC_GetSysClockFreq>
 8002890:	4602      	mov	r2, r0
 8002892:	4b0d      	ldr	r3, [pc, #52]	@ (80028c8 <HAL_RCC_ClockConfig+0x260>)
 8002894:	689b      	ldr	r3, [r3, #8]
 8002896:	091b      	lsrs	r3, r3, #4
 8002898:	f003 030f 	and.w	r3, r3, #15
 800289c:	490c      	ldr	r1, [pc, #48]	@ (80028d0 <HAL_RCC_ClockConfig+0x268>)
 800289e:	5ccb      	ldrb	r3, [r1, r3]
 80028a0:	f003 031f 	and.w	r3, r3, #31
 80028a4:	fa22 f303 	lsr.w	r3, r2, r3
 80028a8:	4a0a      	ldr	r2, [pc, #40]	@ (80028d4 <HAL_RCC_ClockConfig+0x26c>)
 80028aa:	6013      	str	r3, [r2, #0]
 80028ac:	4b0a      	ldr	r3, [pc, #40]	@ (80028d8 <HAL_RCC_ClockConfig+0x270>)
 80028ae:	681b      	ldr	r3, [r3, #0]
 80028b0:	4618      	mov	r0, r3
 80028b2:	f7fe feeb 	bl	800168c <HAL_InitTick>
 80028b6:	4603      	mov	r3, r0
 80028b8:	73fb      	strb	r3, [r7, #15]
 80028ba:	7bfb      	ldrb	r3, [r7, #15]
 80028bc:	4618      	mov	r0, r3
 80028be:	3718      	adds	r7, #24
 80028c0:	46bd      	mov	sp, r7
 80028c2:	bd80      	pop	{r7, pc}
 80028c4:	40022000 	.word	0x40022000
 80028c8:	40021000 	.word	0x40021000
 80028cc:	04c4b400 	.word	0x04c4b400
 80028d0:	08004588 	.word	0x08004588
 80028d4:	20000004 	.word	0x20000004
 80028d8:	20000008 	.word	0x20000008

080028dc <HAL_RCC_GetSysClockFreq>:
 80028dc:	b480      	push	{r7}
 80028de:	b089      	sub	sp, #36	@ 0x24
 80028e0:	af00      	add	r7, sp, #0
 80028e2:	2300      	movs	r3, #0
 80028e4:	61fb      	str	r3, [r7, #28]
 80028e6:	2300      	movs	r3, #0
 80028e8:	61bb      	str	r3, [r7, #24]
 80028ea:	4b3e      	ldr	r3, [pc, #248]	@ (80029e4 <HAL_RCC_GetSysClockFreq+0x108>)
 80028ec:	689b      	ldr	r3, [r3, #8]
 80028ee:	f003 030c 	and.w	r3, r3, #12
 80028f2:	613b      	str	r3, [r7, #16]
 80028f4:	4b3b      	ldr	r3, [pc, #236]	@ (80029e4 <HAL_RCC_GetSysClockFreq+0x108>)
 80028f6:	68db      	ldr	r3, [r3, #12]
 80028f8:	f003 0303 	and.w	r3, r3, #3
 80028fc:	60fb      	str	r3, [r7, #12]
 80028fe:	693b      	ldr	r3, [r7, #16]
 8002900:	2b00      	cmp	r3, #0
 8002902:	d005      	beq.n	8002910 <HAL_RCC_GetSysClockFreq+0x34>
 8002904:	693b      	ldr	r3, [r7, #16]
 8002906:	2b0c      	cmp	r3, #12
 8002908:	d121      	bne.n	800294e <HAL_RCC_GetSysClockFreq+0x72>
 800290a:	68fb      	ldr	r3, [r7, #12]
 800290c:	2b01      	cmp	r3, #1
 800290e:	d11e      	bne.n	800294e <HAL_RCC_GetSysClockFreq+0x72>
 8002910:	4b34      	ldr	r3, [pc, #208]	@ (80029e4 <HAL_RCC_GetSysClockFreq+0x108>)
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	f003 0308 	and.w	r3, r3, #8
 8002918:	2b00      	cmp	r3, #0
 800291a:	d107      	bne.n	800292c <HAL_RCC_GetSysClockFreq+0x50>
 800291c:	4b31      	ldr	r3, [pc, #196]	@ (80029e4 <HAL_RCC_GetSysClockFreq+0x108>)
 800291e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002922:	0a1b      	lsrs	r3, r3, #8
 8002924:	f003 030f 	and.w	r3, r3, #15
 8002928:	61fb      	str	r3, [r7, #28]
 800292a:	e005      	b.n	8002938 <HAL_RCC_GetSysClockFreq+0x5c>
 800292c:	4b2d      	ldr	r3, [pc, #180]	@ (80029e4 <HAL_RCC_GetSysClockFreq+0x108>)
 800292e:	681b      	ldr	r3, [r3, #0]
 8002930:	091b      	lsrs	r3, r3, #4
 8002932:	f003 030f 	and.w	r3, r3, #15
 8002936:	61fb      	str	r3, [r7, #28]
 8002938:	4a2b      	ldr	r2, [pc, #172]	@ (80029e8 <HAL_RCC_GetSysClockFreq+0x10c>)
 800293a:	69fb      	ldr	r3, [r7, #28]
 800293c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002940:	61fb      	str	r3, [r7, #28]
 8002942:	693b      	ldr	r3, [r7, #16]
 8002944:	2b00      	cmp	r3, #0
 8002946:	d10d      	bne.n	8002964 <HAL_RCC_GetSysClockFreq+0x88>
 8002948:	69fb      	ldr	r3, [r7, #28]
 800294a:	61bb      	str	r3, [r7, #24]
 800294c:	e00a      	b.n	8002964 <HAL_RCC_GetSysClockFreq+0x88>
 800294e:	693b      	ldr	r3, [r7, #16]
 8002950:	2b04      	cmp	r3, #4
 8002952:	d102      	bne.n	800295a <HAL_RCC_GetSysClockFreq+0x7e>
 8002954:	4b25      	ldr	r3, [pc, #148]	@ (80029ec <HAL_RCC_GetSysClockFreq+0x110>)
 8002956:	61bb      	str	r3, [r7, #24]
 8002958:	e004      	b.n	8002964 <HAL_RCC_GetSysClockFreq+0x88>
 800295a:	693b      	ldr	r3, [r7, #16]
 800295c:	2b08      	cmp	r3, #8
 800295e:	d101      	bne.n	8002964 <HAL_RCC_GetSysClockFreq+0x88>
 8002960:	4b23      	ldr	r3, [pc, #140]	@ (80029f0 <HAL_RCC_GetSysClockFreq+0x114>)
 8002962:	61bb      	str	r3, [r7, #24]
 8002964:	693b      	ldr	r3, [r7, #16]
 8002966:	2b0c      	cmp	r3, #12
 8002968:	d134      	bne.n	80029d4 <HAL_RCC_GetSysClockFreq+0xf8>
 800296a:	4b1e      	ldr	r3, [pc, #120]	@ (80029e4 <HAL_RCC_GetSysClockFreq+0x108>)
 800296c:	68db      	ldr	r3, [r3, #12]
 800296e:	f003 0303 	and.w	r3, r3, #3
 8002972:	60bb      	str	r3, [r7, #8]
 8002974:	68bb      	ldr	r3, [r7, #8]
 8002976:	2b02      	cmp	r3, #2
 8002978:	d003      	beq.n	8002982 <HAL_RCC_GetSysClockFreq+0xa6>
 800297a:	68bb      	ldr	r3, [r7, #8]
 800297c:	2b03      	cmp	r3, #3
 800297e:	d003      	beq.n	8002988 <HAL_RCC_GetSysClockFreq+0xac>
 8002980:	e005      	b.n	800298e <HAL_RCC_GetSysClockFreq+0xb2>
 8002982:	4b1a      	ldr	r3, [pc, #104]	@ (80029ec <HAL_RCC_GetSysClockFreq+0x110>)
 8002984:	617b      	str	r3, [r7, #20]
 8002986:	e005      	b.n	8002994 <HAL_RCC_GetSysClockFreq+0xb8>
 8002988:	4b19      	ldr	r3, [pc, #100]	@ (80029f0 <HAL_RCC_GetSysClockFreq+0x114>)
 800298a:	617b      	str	r3, [r7, #20]
 800298c:	e002      	b.n	8002994 <HAL_RCC_GetSysClockFreq+0xb8>
 800298e:	69fb      	ldr	r3, [r7, #28]
 8002990:	617b      	str	r3, [r7, #20]
 8002992:	bf00      	nop
 8002994:	4b13      	ldr	r3, [pc, #76]	@ (80029e4 <HAL_RCC_GetSysClockFreq+0x108>)
 8002996:	68db      	ldr	r3, [r3, #12]
 8002998:	091b      	lsrs	r3, r3, #4
 800299a:	f003 030f 	and.w	r3, r3, #15
 800299e:	3301      	adds	r3, #1
 80029a0:	607b      	str	r3, [r7, #4]
 80029a2:	4b10      	ldr	r3, [pc, #64]	@ (80029e4 <HAL_RCC_GetSysClockFreq+0x108>)
 80029a4:	68db      	ldr	r3, [r3, #12]
 80029a6:	0a1b      	lsrs	r3, r3, #8
 80029a8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80029ac:	697a      	ldr	r2, [r7, #20]
 80029ae:	fb03 f202 	mul.w	r2, r3, r2
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	fbb2 f3f3 	udiv	r3, r2, r3
 80029b8:	617b      	str	r3, [r7, #20]
 80029ba:	4b0a      	ldr	r3, [pc, #40]	@ (80029e4 <HAL_RCC_GetSysClockFreq+0x108>)
 80029bc:	68db      	ldr	r3, [r3, #12]
 80029be:	0e5b      	lsrs	r3, r3, #25
 80029c0:	f003 0303 	and.w	r3, r3, #3
 80029c4:	3301      	adds	r3, #1
 80029c6:	005b      	lsls	r3, r3, #1
 80029c8:	603b      	str	r3, [r7, #0]
 80029ca:	697a      	ldr	r2, [r7, #20]
 80029cc:	683b      	ldr	r3, [r7, #0]
 80029ce:	fbb2 f3f3 	udiv	r3, r2, r3
 80029d2:	61bb      	str	r3, [r7, #24]
 80029d4:	69bb      	ldr	r3, [r7, #24]
 80029d6:	4618      	mov	r0, r3
 80029d8:	3724      	adds	r7, #36	@ 0x24
 80029da:	46bd      	mov	sp, r7
 80029dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029e0:	4770      	bx	lr
 80029e2:	bf00      	nop
 80029e4:	40021000 	.word	0x40021000
 80029e8:	08004598 	.word	0x08004598
 80029ec:	00f42400 	.word	0x00f42400
 80029f0:	007a1200 	.word	0x007a1200

080029f4 <RCC_SetFlashLatencyFromMSIRange>:
 80029f4:	b580      	push	{r7, lr}
 80029f6:	b086      	sub	sp, #24
 80029f8:	af00      	add	r7, sp, #0
 80029fa:	6078      	str	r0, [r7, #4]
 80029fc:	2300      	movs	r3, #0
 80029fe:	613b      	str	r3, [r7, #16]
 8002a00:	4b27      	ldr	r3, [pc, #156]	@ (8002aa0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8002a02:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002a04:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d003      	beq.n	8002a14 <RCC_SetFlashLatencyFromMSIRange+0x20>
 8002a0c:	f7ff f94e 	bl	8001cac <HAL_PWREx_GetVoltageRange>
 8002a10:	6178      	str	r0, [r7, #20]
 8002a12:	e014      	b.n	8002a3e <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8002a14:	4b22      	ldr	r3, [pc, #136]	@ (8002aa0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8002a16:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002a18:	4a21      	ldr	r2, [pc, #132]	@ (8002aa0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8002a1a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002a1e:	6593      	str	r3, [r2, #88]	@ 0x58
 8002a20:	4b1f      	ldr	r3, [pc, #124]	@ (8002aa0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8002a22:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002a24:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002a28:	60fb      	str	r3, [r7, #12]
 8002a2a:	68fb      	ldr	r3, [r7, #12]
 8002a2c:	f7ff f93e 	bl	8001cac <HAL_PWREx_GetVoltageRange>
 8002a30:	6178      	str	r0, [r7, #20]
 8002a32:	4b1b      	ldr	r3, [pc, #108]	@ (8002aa0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8002a34:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002a36:	4a1a      	ldr	r2, [pc, #104]	@ (8002aa0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8002a38:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002a3c:	6593      	str	r3, [r2, #88]	@ 0x58
 8002a3e:	697b      	ldr	r3, [r7, #20]
 8002a40:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002a44:	d10b      	bne.n	8002a5e <RCC_SetFlashLatencyFromMSIRange+0x6a>
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	2b80      	cmp	r3, #128	@ 0x80
 8002a4a:	d913      	bls.n	8002a74 <RCC_SetFlashLatencyFromMSIRange+0x80>
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	2ba0      	cmp	r3, #160	@ 0xa0
 8002a50:	d902      	bls.n	8002a58 <RCC_SetFlashLatencyFromMSIRange+0x64>
 8002a52:	2302      	movs	r3, #2
 8002a54:	613b      	str	r3, [r7, #16]
 8002a56:	e00d      	b.n	8002a74 <RCC_SetFlashLatencyFromMSIRange+0x80>
 8002a58:	2301      	movs	r3, #1
 8002a5a:	613b      	str	r3, [r7, #16]
 8002a5c:	e00a      	b.n	8002a74 <RCC_SetFlashLatencyFromMSIRange+0x80>
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	2b7f      	cmp	r3, #127	@ 0x7f
 8002a62:	d902      	bls.n	8002a6a <RCC_SetFlashLatencyFromMSIRange+0x76>
 8002a64:	2302      	movs	r3, #2
 8002a66:	613b      	str	r3, [r7, #16]
 8002a68:	e004      	b.n	8002a74 <RCC_SetFlashLatencyFromMSIRange+0x80>
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	2b70      	cmp	r3, #112	@ 0x70
 8002a6e:	d101      	bne.n	8002a74 <RCC_SetFlashLatencyFromMSIRange+0x80>
 8002a70:	2301      	movs	r3, #1
 8002a72:	613b      	str	r3, [r7, #16]
 8002a74:	4b0b      	ldr	r3, [pc, #44]	@ (8002aa4 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 8002a76:	681b      	ldr	r3, [r3, #0]
 8002a78:	f023 020f 	bic.w	r2, r3, #15
 8002a7c:	4909      	ldr	r1, [pc, #36]	@ (8002aa4 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 8002a7e:	693b      	ldr	r3, [r7, #16]
 8002a80:	4313      	orrs	r3, r2
 8002a82:	600b      	str	r3, [r1, #0]
 8002a84:	4b07      	ldr	r3, [pc, #28]	@ (8002aa4 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	f003 030f 	and.w	r3, r3, #15
 8002a8c:	693a      	ldr	r2, [r7, #16]
 8002a8e:	429a      	cmp	r2, r3
 8002a90:	d001      	beq.n	8002a96 <RCC_SetFlashLatencyFromMSIRange+0xa2>
 8002a92:	2301      	movs	r3, #1
 8002a94:	e000      	b.n	8002a98 <RCC_SetFlashLatencyFromMSIRange+0xa4>
 8002a96:	2300      	movs	r3, #0
 8002a98:	4618      	mov	r0, r3
 8002a9a:	3718      	adds	r7, #24
 8002a9c:	46bd      	mov	sp, r7
 8002a9e:	bd80      	pop	{r7, pc}
 8002aa0:	40021000 	.word	0x40021000
 8002aa4:	40022000 	.word	0x40022000

08002aa8 <RCC_GetSysClockFreqFromPLLSource>:
 8002aa8:	b480      	push	{r7}
 8002aaa:	b087      	sub	sp, #28
 8002aac:	af00      	add	r7, sp, #0
 8002aae:	4b2d      	ldr	r3, [pc, #180]	@ (8002b64 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002ab0:	68db      	ldr	r3, [r3, #12]
 8002ab2:	f003 0303 	and.w	r3, r3, #3
 8002ab6:	60fb      	str	r3, [r7, #12]
 8002ab8:	68fb      	ldr	r3, [r7, #12]
 8002aba:	2b03      	cmp	r3, #3
 8002abc:	d00b      	beq.n	8002ad6 <RCC_GetSysClockFreqFromPLLSource+0x2e>
 8002abe:	68fb      	ldr	r3, [r7, #12]
 8002ac0:	2b03      	cmp	r3, #3
 8002ac2:	d825      	bhi.n	8002b10 <RCC_GetSysClockFreqFromPLLSource+0x68>
 8002ac4:	68fb      	ldr	r3, [r7, #12]
 8002ac6:	2b01      	cmp	r3, #1
 8002ac8:	d008      	beq.n	8002adc <RCC_GetSysClockFreqFromPLLSource+0x34>
 8002aca:	68fb      	ldr	r3, [r7, #12]
 8002acc:	2b02      	cmp	r3, #2
 8002ace:	d11f      	bne.n	8002b10 <RCC_GetSysClockFreqFromPLLSource+0x68>
 8002ad0:	4b25      	ldr	r3, [pc, #148]	@ (8002b68 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 8002ad2:	613b      	str	r3, [r7, #16]
 8002ad4:	e01f      	b.n	8002b16 <RCC_GetSysClockFreqFromPLLSource+0x6e>
 8002ad6:	4b25      	ldr	r3, [pc, #148]	@ (8002b6c <RCC_GetSysClockFreqFromPLLSource+0xc4>)
 8002ad8:	613b      	str	r3, [r7, #16]
 8002ada:	e01c      	b.n	8002b16 <RCC_GetSysClockFreqFromPLLSource+0x6e>
 8002adc:	4b21      	ldr	r3, [pc, #132]	@ (8002b64 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002ade:	681b      	ldr	r3, [r3, #0]
 8002ae0:	f003 0308 	and.w	r3, r3, #8
 8002ae4:	2b00      	cmp	r3, #0
 8002ae6:	d107      	bne.n	8002af8 <RCC_GetSysClockFreqFromPLLSource+0x50>
 8002ae8:	4b1e      	ldr	r3, [pc, #120]	@ (8002b64 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002aea:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8002aee:	0a1b      	lsrs	r3, r3, #8
 8002af0:	f003 030f 	and.w	r3, r3, #15
 8002af4:	617b      	str	r3, [r7, #20]
 8002af6:	e005      	b.n	8002b04 <RCC_GetSysClockFreqFromPLLSource+0x5c>
 8002af8:	4b1a      	ldr	r3, [pc, #104]	@ (8002b64 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	091b      	lsrs	r3, r3, #4
 8002afe:	f003 030f 	and.w	r3, r3, #15
 8002b02:	617b      	str	r3, [r7, #20]
 8002b04:	4a1a      	ldr	r2, [pc, #104]	@ (8002b70 <RCC_GetSysClockFreqFromPLLSource+0xc8>)
 8002b06:	697b      	ldr	r3, [r7, #20]
 8002b08:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002b0c:	613b      	str	r3, [r7, #16]
 8002b0e:	e002      	b.n	8002b16 <RCC_GetSysClockFreqFromPLLSource+0x6e>
 8002b10:	2300      	movs	r3, #0
 8002b12:	613b      	str	r3, [r7, #16]
 8002b14:	bf00      	nop
 8002b16:	4b13      	ldr	r3, [pc, #76]	@ (8002b64 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002b18:	68db      	ldr	r3, [r3, #12]
 8002b1a:	091b      	lsrs	r3, r3, #4
 8002b1c:	f003 030f 	and.w	r3, r3, #15
 8002b20:	3301      	adds	r3, #1
 8002b22:	60bb      	str	r3, [r7, #8]
 8002b24:	4b0f      	ldr	r3, [pc, #60]	@ (8002b64 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002b26:	68db      	ldr	r3, [r3, #12]
 8002b28:	0a1b      	lsrs	r3, r3, #8
 8002b2a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8002b2e:	693a      	ldr	r2, [r7, #16]
 8002b30:	fb03 f202 	mul.w	r2, r3, r2
 8002b34:	68bb      	ldr	r3, [r7, #8]
 8002b36:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b3a:	613b      	str	r3, [r7, #16]
 8002b3c:	4b09      	ldr	r3, [pc, #36]	@ (8002b64 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002b3e:	68db      	ldr	r3, [r3, #12]
 8002b40:	0e5b      	lsrs	r3, r3, #25
 8002b42:	f003 0303 	and.w	r3, r3, #3
 8002b46:	3301      	adds	r3, #1
 8002b48:	005b      	lsls	r3, r3, #1
 8002b4a:	607b      	str	r3, [r7, #4]
 8002b4c:	693a      	ldr	r2, [r7, #16]
 8002b4e:	687b      	ldr	r3, [r7, #4]
 8002b50:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b54:	603b      	str	r3, [r7, #0]
 8002b56:	683b      	ldr	r3, [r7, #0]
 8002b58:	4618      	mov	r0, r3
 8002b5a:	371c      	adds	r7, #28
 8002b5c:	46bd      	mov	sp, r7
 8002b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b62:	4770      	bx	lr
 8002b64:	40021000 	.word	0x40021000
 8002b68:	00f42400 	.word	0x00f42400
 8002b6c:	007a1200 	.word	0x007a1200
 8002b70:	08004598 	.word	0x08004598

08002b74 <HAL_SPI_Init>:
 8002b74:	b580      	push	{r7, lr}
 8002b76:	b084      	sub	sp, #16
 8002b78:	af00      	add	r7, sp, #0
 8002b7a:	6078      	str	r0, [r7, #4]
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d101      	bne.n	8002b86 <HAL_SPI_Init+0x12>
 8002b82:	2301      	movs	r3, #1
 8002b84:	e095      	b.n	8002cb2 <HAL_SPI_Init+0x13e>
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002b8a:	2b00      	cmp	r3, #0
 8002b8c:	d108      	bne.n	8002ba0 <HAL_SPI_Init+0x2c>
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	685b      	ldr	r3, [r3, #4]
 8002b92:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8002b96:	d009      	beq.n	8002bac <HAL_SPI_Init+0x38>
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	2200      	movs	r2, #0
 8002b9c:	61da      	str	r2, [r3, #28]
 8002b9e:	e005      	b.n	8002bac <HAL_SPI_Init+0x38>
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	2200      	movs	r2, #0
 8002ba4:	611a      	str	r2, [r3, #16]
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	2200      	movs	r2, #0
 8002baa:	615a      	str	r2, [r3, #20]
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	2200      	movs	r2, #0
 8002bb0:	629a      	str	r2, [r3, #40]	@ 0x28
 8002bb2:	687b      	ldr	r3, [r7, #4]
 8002bb4:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8002bb8:	b2db      	uxtb	r3, r3
 8002bba:	2b00      	cmp	r3, #0
 8002bbc:	d106      	bne.n	8002bcc <HAL_SPI_Init+0x58>
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	2200      	movs	r2, #0
 8002bc2:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8002bc6:	6878      	ldr	r0, [r7, #4]
 8002bc8:	f7fe fb34 	bl	8001234 <HAL_SPI_MspInit>
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	2202      	movs	r2, #2
 8002bd0:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	681a      	ldr	r2, [r3, #0]
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002be2:	601a      	str	r2, [r3, #0]
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	68db      	ldr	r3, [r3, #12]
 8002be8:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8002bec:	d902      	bls.n	8002bf4 <HAL_SPI_Init+0x80>
 8002bee:	2300      	movs	r3, #0
 8002bf0:	60fb      	str	r3, [r7, #12]
 8002bf2:	e002      	b.n	8002bfa <HAL_SPI_Init+0x86>
 8002bf4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002bf8:	60fb      	str	r3, [r7, #12]
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	68db      	ldr	r3, [r3, #12]
 8002bfe:	f5b3 6f70 	cmp.w	r3, #3840	@ 0xf00
 8002c02:	d007      	beq.n	8002c14 <HAL_SPI_Init+0xa0>
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	68db      	ldr	r3, [r3, #12]
 8002c08:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8002c0c:	d002      	beq.n	8002c14 <HAL_SPI_Init+0xa0>
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	2200      	movs	r2, #0
 8002c12:	629a      	str	r2, [r3, #40]	@ 0x28
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	685b      	ldr	r3, [r3, #4]
 8002c18:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	689b      	ldr	r3, [r3, #8]
 8002c20:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8002c24:	431a      	orrs	r2, r3
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	691b      	ldr	r3, [r3, #16]
 8002c2a:	f003 0302 	and.w	r3, r3, #2
 8002c2e:	431a      	orrs	r2, r3
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	695b      	ldr	r3, [r3, #20]
 8002c34:	f003 0301 	and.w	r3, r3, #1
 8002c38:	431a      	orrs	r2, r3
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	699b      	ldr	r3, [r3, #24]
 8002c3e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002c42:	431a      	orrs	r2, r3
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	69db      	ldr	r3, [r3, #28]
 8002c48:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8002c4c:	431a      	orrs	r2, r3
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	6a1b      	ldr	r3, [r3, #32]
 8002c52:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002c56:	ea42 0103 	orr.w	r1, r2, r3
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c5e:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8002c62:	687b      	ldr	r3, [r7, #4]
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	430a      	orrs	r2, r1
 8002c68:	601a      	str	r2, [r3, #0]
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	699b      	ldr	r3, [r3, #24]
 8002c6e:	0c1b      	lsrs	r3, r3, #16
 8002c70:	f003 0204 	and.w	r2, r3, #4
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c78:	f003 0310 	and.w	r3, r3, #16
 8002c7c:	431a      	orrs	r2, r3
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002c82:	f003 0308 	and.w	r3, r3, #8
 8002c86:	431a      	orrs	r2, r3
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	68db      	ldr	r3, [r3, #12]
 8002c8c:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8002c90:	ea42 0103 	orr.w	r1, r2, r3
 8002c94:	68fb      	ldr	r3, [r7, #12]
 8002c96:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	430a      	orrs	r2, r1
 8002ca0:	605a      	str	r2, [r3, #4]
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	2200      	movs	r2, #0
 8002ca6:	661a      	str	r2, [r3, #96]	@ 0x60
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	2201      	movs	r2, #1
 8002cac:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8002cb0:	2300      	movs	r3, #0
 8002cb2:	4618      	mov	r0, r3
 8002cb4:	3710      	adds	r7, #16
 8002cb6:	46bd      	mov	sp, r7
 8002cb8:	bd80      	pop	{r7, pc}

08002cba <HAL_SPI_Transmit>:
 8002cba:	b580      	push	{r7, lr}
 8002cbc:	b088      	sub	sp, #32
 8002cbe:	af00      	add	r7, sp, #0
 8002cc0:	60f8      	str	r0, [r7, #12]
 8002cc2:	60b9      	str	r1, [r7, #8]
 8002cc4:	603b      	str	r3, [r7, #0]
 8002cc6:	4613      	mov	r3, r2
 8002cc8:	80fb      	strh	r3, [r7, #6]
 8002cca:	2300      	movs	r3, #0
 8002ccc:	77fb      	strb	r3, [r7, #31]
 8002cce:	68fb      	ldr	r3, [r7, #12]
 8002cd0:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8002cd4:	2b01      	cmp	r3, #1
 8002cd6:	d101      	bne.n	8002cdc <HAL_SPI_Transmit+0x22>
 8002cd8:	2302      	movs	r3, #2
 8002cda:	e15f      	b.n	8002f9c <HAL_SPI_Transmit+0x2e2>
 8002cdc:	68fb      	ldr	r3, [r7, #12]
 8002cde:	2201      	movs	r2, #1
 8002ce0:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8002ce4:	f7fe fd22 	bl	800172c <HAL_GetTick>
 8002ce8:	61b8      	str	r0, [r7, #24]
 8002cea:	88fb      	ldrh	r3, [r7, #6]
 8002cec:	82fb      	strh	r3, [r7, #22]
 8002cee:	68fb      	ldr	r3, [r7, #12]
 8002cf0:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8002cf4:	b2db      	uxtb	r3, r3
 8002cf6:	2b01      	cmp	r3, #1
 8002cf8:	d002      	beq.n	8002d00 <HAL_SPI_Transmit+0x46>
 8002cfa:	2302      	movs	r3, #2
 8002cfc:	77fb      	strb	r3, [r7, #31]
 8002cfe:	e148      	b.n	8002f92 <HAL_SPI_Transmit+0x2d8>
 8002d00:	68bb      	ldr	r3, [r7, #8]
 8002d02:	2b00      	cmp	r3, #0
 8002d04:	d002      	beq.n	8002d0c <HAL_SPI_Transmit+0x52>
 8002d06:	88fb      	ldrh	r3, [r7, #6]
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	d102      	bne.n	8002d12 <HAL_SPI_Transmit+0x58>
 8002d0c:	2301      	movs	r3, #1
 8002d0e:	77fb      	strb	r3, [r7, #31]
 8002d10:	e13f      	b.n	8002f92 <HAL_SPI_Transmit+0x2d8>
 8002d12:	68fb      	ldr	r3, [r7, #12]
 8002d14:	2203      	movs	r2, #3
 8002d16:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8002d1a:	68fb      	ldr	r3, [r7, #12]
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	661a      	str	r2, [r3, #96]	@ 0x60
 8002d20:	68fb      	ldr	r3, [r7, #12]
 8002d22:	68ba      	ldr	r2, [r7, #8]
 8002d24:	639a      	str	r2, [r3, #56]	@ 0x38
 8002d26:	68fb      	ldr	r3, [r7, #12]
 8002d28:	88fa      	ldrh	r2, [r7, #6]
 8002d2a:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8002d2c:	68fb      	ldr	r3, [r7, #12]
 8002d2e:	88fa      	ldrh	r2, [r7, #6]
 8002d30:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8002d32:	68fb      	ldr	r3, [r7, #12]
 8002d34:	2200      	movs	r2, #0
 8002d36:	641a      	str	r2, [r3, #64]	@ 0x40
 8002d38:	68fb      	ldr	r3, [r7, #12]
 8002d3a:	2200      	movs	r2, #0
 8002d3c:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8002d40:	68fb      	ldr	r3, [r7, #12]
 8002d42:	2200      	movs	r2, #0
 8002d44:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8002d48:	68fb      	ldr	r3, [r7, #12]
 8002d4a:	2200      	movs	r2, #0
 8002d4c:	651a      	str	r2, [r3, #80]	@ 0x50
 8002d4e:	68fb      	ldr	r3, [r7, #12]
 8002d50:	2200      	movs	r2, #0
 8002d52:	64da      	str	r2, [r3, #76]	@ 0x4c
 8002d54:	68fb      	ldr	r3, [r7, #12]
 8002d56:	689b      	ldr	r3, [r3, #8]
 8002d58:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8002d5c:	d10f      	bne.n	8002d7e <HAL_SPI_Transmit+0xc4>
 8002d5e:	68fb      	ldr	r3, [r7, #12]
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	681a      	ldr	r2, [r3, #0]
 8002d64:	68fb      	ldr	r3, [r7, #12]
 8002d66:	681b      	ldr	r3, [r3, #0]
 8002d68:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002d6c:	601a      	str	r2, [r3, #0]
 8002d6e:	68fb      	ldr	r3, [r7, #12]
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	681a      	ldr	r2, [r3, #0]
 8002d74:	68fb      	ldr	r3, [r7, #12]
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8002d7c:	601a      	str	r2, [r3, #0]
 8002d7e:	68fb      	ldr	r3, [r7, #12]
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	681b      	ldr	r3, [r3, #0]
 8002d84:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002d88:	2b40      	cmp	r3, #64	@ 0x40
 8002d8a:	d007      	beq.n	8002d9c <HAL_SPI_Transmit+0xe2>
 8002d8c:	68fb      	ldr	r3, [r7, #12]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	681a      	ldr	r2, [r3, #0]
 8002d92:	68fb      	ldr	r3, [r7, #12]
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002d9a:	601a      	str	r2, [r3, #0]
 8002d9c:	68fb      	ldr	r3, [r7, #12]
 8002d9e:	68db      	ldr	r3, [r3, #12]
 8002da0:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8002da4:	d94f      	bls.n	8002e46 <HAL_SPI_Transmit+0x18c>
 8002da6:	68fb      	ldr	r3, [r7, #12]
 8002da8:	685b      	ldr	r3, [r3, #4]
 8002daa:	2b00      	cmp	r3, #0
 8002dac:	d002      	beq.n	8002db4 <HAL_SPI_Transmit+0xfa>
 8002dae:	8afb      	ldrh	r3, [r7, #22]
 8002db0:	2b01      	cmp	r3, #1
 8002db2:	d142      	bne.n	8002e3a <HAL_SPI_Transmit+0x180>
 8002db4:	68fb      	ldr	r3, [r7, #12]
 8002db6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002db8:	881a      	ldrh	r2, [r3, #0]
 8002dba:	68fb      	ldr	r3, [r7, #12]
 8002dbc:	681b      	ldr	r3, [r3, #0]
 8002dbe:	60da      	str	r2, [r3, #12]
 8002dc0:	68fb      	ldr	r3, [r7, #12]
 8002dc2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002dc4:	1c9a      	adds	r2, r3, #2
 8002dc6:	68fb      	ldr	r3, [r7, #12]
 8002dc8:	639a      	str	r2, [r3, #56]	@ 0x38
 8002dca:	68fb      	ldr	r3, [r7, #12]
 8002dcc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8002dce:	b29b      	uxth	r3, r3
 8002dd0:	3b01      	subs	r3, #1
 8002dd2:	b29a      	uxth	r2, r3
 8002dd4:	68fb      	ldr	r3, [r7, #12]
 8002dd6:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8002dd8:	e02f      	b.n	8002e3a <HAL_SPI_Transmit+0x180>
 8002dda:	68fb      	ldr	r3, [r7, #12]
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	689b      	ldr	r3, [r3, #8]
 8002de0:	f003 0302 	and.w	r3, r3, #2
 8002de4:	2b02      	cmp	r3, #2
 8002de6:	d112      	bne.n	8002e0e <HAL_SPI_Transmit+0x154>
 8002de8:	68fb      	ldr	r3, [r7, #12]
 8002dea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002dec:	881a      	ldrh	r2, [r3, #0]
 8002dee:	68fb      	ldr	r3, [r7, #12]
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	60da      	str	r2, [r3, #12]
 8002df4:	68fb      	ldr	r3, [r7, #12]
 8002df6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002df8:	1c9a      	adds	r2, r3, #2
 8002dfa:	68fb      	ldr	r3, [r7, #12]
 8002dfc:	639a      	str	r2, [r3, #56]	@ 0x38
 8002dfe:	68fb      	ldr	r3, [r7, #12]
 8002e00:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8002e02:	b29b      	uxth	r3, r3
 8002e04:	3b01      	subs	r3, #1
 8002e06:	b29a      	uxth	r2, r3
 8002e08:	68fb      	ldr	r3, [r7, #12]
 8002e0a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8002e0c:	e015      	b.n	8002e3a <HAL_SPI_Transmit+0x180>
 8002e0e:	f7fe fc8d 	bl	800172c <HAL_GetTick>
 8002e12:	4602      	mov	r2, r0
 8002e14:	69bb      	ldr	r3, [r7, #24]
 8002e16:	1ad3      	subs	r3, r2, r3
 8002e18:	683a      	ldr	r2, [r7, #0]
 8002e1a:	429a      	cmp	r2, r3
 8002e1c:	d803      	bhi.n	8002e26 <HAL_SPI_Transmit+0x16c>
 8002e1e:	683b      	ldr	r3, [r7, #0]
 8002e20:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8002e24:	d102      	bne.n	8002e2c <HAL_SPI_Transmit+0x172>
 8002e26:	683b      	ldr	r3, [r7, #0]
 8002e28:	2b00      	cmp	r3, #0
 8002e2a:	d106      	bne.n	8002e3a <HAL_SPI_Transmit+0x180>
 8002e2c:	2303      	movs	r3, #3
 8002e2e:	77fb      	strb	r3, [r7, #31]
 8002e30:	68fb      	ldr	r3, [r7, #12]
 8002e32:	2201      	movs	r2, #1
 8002e34:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8002e38:	e0ab      	b.n	8002f92 <HAL_SPI_Transmit+0x2d8>
 8002e3a:	68fb      	ldr	r3, [r7, #12]
 8002e3c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8002e3e:	b29b      	uxth	r3, r3
 8002e40:	2b00      	cmp	r3, #0
 8002e42:	d1ca      	bne.n	8002dda <HAL_SPI_Transmit+0x120>
 8002e44:	e080      	b.n	8002f48 <HAL_SPI_Transmit+0x28e>
 8002e46:	68fb      	ldr	r3, [r7, #12]
 8002e48:	685b      	ldr	r3, [r3, #4]
 8002e4a:	2b00      	cmp	r3, #0
 8002e4c:	d002      	beq.n	8002e54 <HAL_SPI_Transmit+0x19a>
 8002e4e:	8afb      	ldrh	r3, [r7, #22]
 8002e50:	2b01      	cmp	r3, #1
 8002e52:	d174      	bne.n	8002f3e <HAL_SPI_Transmit+0x284>
 8002e54:	68fb      	ldr	r3, [r7, #12]
 8002e56:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8002e58:	b29b      	uxth	r3, r3
 8002e5a:	2b01      	cmp	r3, #1
 8002e5c:	d912      	bls.n	8002e84 <HAL_SPI_Transmit+0x1ca>
 8002e5e:	68fb      	ldr	r3, [r7, #12]
 8002e60:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e62:	881a      	ldrh	r2, [r3, #0]
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	60da      	str	r2, [r3, #12]
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e6e:	1c9a      	adds	r2, r3, #2
 8002e70:	68fb      	ldr	r3, [r7, #12]
 8002e72:	639a      	str	r2, [r3, #56]	@ 0x38
 8002e74:	68fb      	ldr	r3, [r7, #12]
 8002e76:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8002e78:	b29b      	uxth	r3, r3
 8002e7a:	3b02      	subs	r3, #2
 8002e7c:	b29a      	uxth	r2, r3
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8002e82:	e05c      	b.n	8002f3e <HAL_SPI_Transmit+0x284>
 8002e84:	68fb      	ldr	r3, [r7, #12]
 8002e86:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	330c      	adds	r3, #12
 8002e8e:	7812      	ldrb	r2, [r2, #0]
 8002e90:	701a      	strb	r2, [r3, #0]
 8002e92:	68fb      	ldr	r3, [r7, #12]
 8002e94:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e96:	1c5a      	adds	r2, r3, #1
 8002e98:	68fb      	ldr	r3, [r7, #12]
 8002e9a:	639a      	str	r2, [r3, #56]	@ 0x38
 8002e9c:	68fb      	ldr	r3, [r7, #12]
 8002e9e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8002ea0:	b29b      	uxth	r3, r3
 8002ea2:	3b01      	subs	r3, #1
 8002ea4:	b29a      	uxth	r2, r3
 8002ea6:	68fb      	ldr	r3, [r7, #12]
 8002ea8:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8002eaa:	e048      	b.n	8002f3e <HAL_SPI_Transmit+0x284>
 8002eac:	68fb      	ldr	r3, [r7, #12]
 8002eae:	681b      	ldr	r3, [r3, #0]
 8002eb0:	689b      	ldr	r3, [r3, #8]
 8002eb2:	f003 0302 	and.w	r3, r3, #2
 8002eb6:	2b02      	cmp	r3, #2
 8002eb8:	d12b      	bne.n	8002f12 <HAL_SPI_Transmit+0x258>
 8002eba:	68fb      	ldr	r3, [r7, #12]
 8002ebc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8002ebe:	b29b      	uxth	r3, r3
 8002ec0:	2b01      	cmp	r3, #1
 8002ec2:	d912      	bls.n	8002eea <HAL_SPI_Transmit+0x230>
 8002ec4:	68fb      	ldr	r3, [r7, #12]
 8002ec6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002ec8:	881a      	ldrh	r2, [r3, #0]
 8002eca:	68fb      	ldr	r3, [r7, #12]
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	60da      	str	r2, [r3, #12]
 8002ed0:	68fb      	ldr	r3, [r7, #12]
 8002ed2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002ed4:	1c9a      	adds	r2, r3, #2
 8002ed6:	68fb      	ldr	r3, [r7, #12]
 8002ed8:	639a      	str	r2, [r3, #56]	@ 0x38
 8002eda:	68fb      	ldr	r3, [r7, #12]
 8002edc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8002ede:	b29b      	uxth	r3, r3
 8002ee0:	3b02      	subs	r3, #2
 8002ee2:	b29a      	uxth	r2, r3
 8002ee4:	68fb      	ldr	r3, [r7, #12]
 8002ee6:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8002ee8:	e029      	b.n	8002f3e <HAL_SPI_Transmit+0x284>
 8002eea:	68fb      	ldr	r3, [r7, #12]
 8002eec:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8002eee:	68fb      	ldr	r3, [r7, #12]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	330c      	adds	r3, #12
 8002ef4:	7812      	ldrb	r2, [r2, #0]
 8002ef6:	701a      	strb	r2, [r3, #0]
 8002ef8:	68fb      	ldr	r3, [r7, #12]
 8002efa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002efc:	1c5a      	adds	r2, r3, #1
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	639a      	str	r2, [r3, #56]	@ 0x38
 8002f02:	68fb      	ldr	r3, [r7, #12]
 8002f04:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8002f06:	b29b      	uxth	r3, r3
 8002f08:	3b01      	subs	r3, #1
 8002f0a:	b29a      	uxth	r2, r3
 8002f0c:	68fb      	ldr	r3, [r7, #12]
 8002f0e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8002f10:	e015      	b.n	8002f3e <HAL_SPI_Transmit+0x284>
 8002f12:	f7fe fc0b 	bl	800172c <HAL_GetTick>
 8002f16:	4602      	mov	r2, r0
 8002f18:	69bb      	ldr	r3, [r7, #24]
 8002f1a:	1ad3      	subs	r3, r2, r3
 8002f1c:	683a      	ldr	r2, [r7, #0]
 8002f1e:	429a      	cmp	r2, r3
 8002f20:	d803      	bhi.n	8002f2a <HAL_SPI_Transmit+0x270>
 8002f22:	683b      	ldr	r3, [r7, #0]
 8002f24:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8002f28:	d102      	bne.n	8002f30 <HAL_SPI_Transmit+0x276>
 8002f2a:	683b      	ldr	r3, [r7, #0]
 8002f2c:	2b00      	cmp	r3, #0
 8002f2e:	d106      	bne.n	8002f3e <HAL_SPI_Transmit+0x284>
 8002f30:	2303      	movs	r3, #3
 8002f32:	77fb      	strb	r3, [r7, #31]
 8002f34:	68fb      	ldr	r3, [r7, #12]
 8002f36:	2201      	movs	r2, #1
 8002f38:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8002f3c:	e029      	b.n	8002f92 <HAL_SPI_Transmit+0x2d8>
 8002f3e:	68fb      	ldr	r3, [r7, #12]
 8002f40:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8002f42:	b29b      	uxth	r3, r3
 8002f44:	2b00      	cmp	r3, #0
 8002f46:	d1b1      	bne.n	8002eac <HAL_SPI_Transmit+0x1f2>
 8002f48:	69ba      	ldr	r2, [r7, #24]
 8002f4a:	6839      	ldr	r1, [r7, #0]
 8002f4c:	68f8      	ldr	r0, [r7, #12]
 8002f4e:	f000 fb69 	bl	8003624 <SPI_EndRxTxTransaction>
 8002f52:	4603      	mov	r3, r0
 8002f54:	2b00      	cmp	r3, #0
 8002f56:	d002      	beq.n	8002f5e <HAL_SPI_Transmit+0x2a4>
 8002f58:	68fb      	ldr	r3, [r7, #12]
 8002f5a:	2220      	movs	r2, #32
 8002f5c:	661a      	str	r2, [r3, #96]	@ 0x60
 8002f5e:	68fb      	ldr	r3, [r7, #12]
 8002f60:	689b      	ldr	r3, [r3, #8]
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d10a      	bne.n	8002f7c <HAL_SPI_Transmit+0x2c2>
 8002f66:	2300      	movs	r3, #0
 8002f68:	613b      	str	r3, [r7, #16]
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	68db      	ldr	r3, [r3, #12]
 8002f70:	613b      	str	r3, [r7, #16]
 8002f72:	68fb      	ldr	r3, [r7, #12]
 8002f74:	681b      	ldr	r3, [r3, #0]
 8002f76:	689b      	ldr	r3, [r3, #8]
 8002f78:	613b      	str	r3, [r7, #16]
 8002f7a:	693b      	ldr	r3, [r7, #16]
 8002f7c:	68fb      	ldr	r3, [r7, #12]
 8002f7e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002f80:	2b00      	cmp	r3, #0
 8002f82:	d002      	beq.n	8002f8a <HAL_SPI_Transmit+0x2d0>
 8002f84:	2301      	movs	r3, #1
 8002f86:	77fb      	strb	r3, [r7, #31]
 8002f88:	e003      	b.n	8002f92 <HAL_SPI_Transmit+0x2d8>
 8002f8a:	68fb      	ldr	r3, [r7, #12]
 8002f8c:	2201      	movs	r2, #1
 8002f8e:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8002f92:	68fb      	ldr	r3, [r7, #12]
 8002f94:	2200      	movs	r2, #0
 8002f96:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8002f9a:	7ffb      	ldrb	r3, [r7, #31]
 8002f9c:	4618      	mov	r0, r3
 8002f9e:	3720      	adds	r7, #32
 8002fa0:	46bd      	mov	sp, r7
 8002fa2:	bd80      	pop	{r7, pc}

08002fa4 <HAL_SPI_TransmitReceive>:
 8002fa4:	b580      	push	{r7, lr}
 8002fa6:	b08a      	sub	sp, #40	@ 0x28
 8002fa8:	af00      	add	r7, sp, #0
 8002faa:	60f8      	str	r0, [r7, #12]
 8002fac:	60b9      	str	r1, [r7, #8]
 8002fae:	607a      	str	r2, [r7, #4]
 8002fb0:	807b      	strh	r3, [r7, #2]
 8002fb2:	2301      	movs	r3, #1
 8002fb4:	627b      	str	r3, [r7, #36]	@ 0x24
 8002fb6:	2300      	movs	r3, #0
 8002fb8:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8002fbc:	68fb      	ldr	r3, [r7, #12]
 8002fbe:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 8002fc2:	2b01      	cmp	r3, #1
 8002fc4:	d101      	bne.n	8002fca <HAL_SPI_TransmitReceive+0x26>
 8002fc6:	2302      	movs	r3, #2
 8002fc8:	e20a      	b.n	80033e0 <HAL_SPI_TransmitReceive+0x43c>
 8002fca:	68fb      	ldr	r3, [r7, #12]
 8002fcc:	2201      	movs	r2, #1
 8002fce:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8002fd2:	f7fe fbab 	bl	800172c <HAL_GetTick>
 8002fd6:	61f8      	str	r0, [r7, #28]
 8002fd8:	68fb      	ldr	r3, [r7, #12]
 8002fda:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8002fde:	76fb      	strb	r3, [r7, #27]
 8002fe0:	68fb      	ldr	r3, [r7, #12]
 8002fe2:	685b      	ldr	r3, [r3, #4]
 8002fe4:	617b      	str	r3, [r7, #20]
 8002fe6:	887b      	ldrh	r3, [r7, #2]
 8002fe8:	827b      	strh	r3, [r7, #18]
 8002fea:	887b      	ldrh	r3, [r7, #2]
 8002fec:	823b      	strh	r3, [r7, #16]
 8002fee:	7efb      	ldrb	r3, [r7, #27]
 8002ff0:	2b01      	cmp	r3, #1
 8002ff2:	d00e      	beq.n	8003012 <HAL_SPI_TransmitReceive+0x6e>
 8002ff4:	697b      	ldr	r3, [r7, #20]
 8002ff6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8002ffa:	d106      	bne.n	800300a <HAL_SPI_TransmitReceive+0x66>
 8002ffc:	68fb      	ldr	r3, [r7, #12]
 8002ffe:	689b      	ldr	r3, [r3, #8]
 8003000:	2b00      	cmp	r3, #0
 8003002:	d102      	bne.n	800300a <HAL_SPI_TransmitReceive+0x66>
 8003004:	7efb      	ldrb	r3, [r7, #27]
 8003006:	2b04      	cmp	r3, #4
 8003008:	d003      	beq.n	8003012 <HAL_SPI_TransmitReceive+0x6e>
 800300a:	2302      	movs	r3, #2
 800300c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8003010:	e1e0      	b.n	80033d4 <HAL_SPI_TransmitReceive+0x430>
 8003012:	68bb      	ldr	r3, [r7, #8]
 8003014:	2b00      	cmp	r3, #0
 8003016:	d005      	beq.n	8003024 <HAL_SPI_TransmitReceive+0x80>
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	2b00      	cmp	r3, #0
 800301c:	d002      	beq.n	8003024 <HAL_SPI_TransmitReceive+0x80>
 800301e:	887b      	ldrh	r3, [r7, #2]
 8003020:	2b00      	cmp	r3, #0
 8003022:	d103      	bne.n	800302c <HAL_SPI_TransmitReceive+0x88>
 8003024:	2301      	movs	r3, #1
 8003026:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800302a:	e1d3      	b.n	80033d4 <HAL_SPI_TransmitReceive+0x430>
 800302c:	68fb      	ldr	r3, [r7, #12]
 800302e:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8003032:	b2db      	uxtb	r3, r3
 8003034:	2b04      	cmp	r3, #4
 8003036:	d003      	beq.n	8003040 <HAL_SPI_TransmitReceive+0x9c>
 8003038:	68fb      	ldr	r3, [r7, #12]
 800303a:	2205      	movs	r2, #5
 800303c:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8003040:	68fb      	ldr	r3, [r7, #12]
 8003042:	2200      	movs	r2, #0
 8003044:	661a      	str	r2, [r3, #96]	@ 0x60
 8003046:	68fb      	ldr	r3, [r7, #12]
 8003048:	687a      	ldr	r2, [r7, #4]
 800304a:	641a      	str	r2, [r3, #64]	@ 0x40
 800304c:	68fb      	ldr	r3, [r7, #12]
 800304e:	887a      	ldrh	r2, [r7, #2]
 8003050:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	887a      	ldrh	r2, [r7, #2]
 8003058:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 800305c:	68fb      	ldr	r3, [r7, #12]
 800305e:	68ba      	ldr	r2, [r7, #8]
 8003060:	639a      	str	r2, [r3, #56]	@ 0x38
 8003062:	68fb      	ldr	r3, [r7, #12]
 8003064:	887a      	ldrh	r2, [r7, #2]
 8003066:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003068:	68fb      	ldr	r3, [r7, #12]
 800306a:	887a      	ldrh	r2, [r7, #2]
 800306c:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800306e:	68fb      	ldr	r3, [r7, #12]
 8003070:	2200      	movs	r2, #0
 8003072:	64da      	str	r2, [r3, #76]	@ 0x4c
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	2200      	movs	r2, #0
 8003078:	651a      	str	r2, [r3, #80]	@ 0x50
 800307a:	68fb      	ldr	r3, [r7, #12]
 800307c:	68db      	ldr	r3, [r3, #12]
 800307e:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8003082:	d802      	bhi.n	800308a <HAL_SPI_TransmitReceive+0xe6>
 8003084:	8a3b      	ldrh	r3, [r7, #16]
 8003086:	2b01      	cmp	r3, #1
 8003088:	d908      	bls.n	800309c <HAL_SPI_TransmitReceive+0xf8>
 800308a:	68fb      	ldr	r3, [r7, #12]
 800308c:	681b      	ldr	r3, [r3, #0]
 800308e:	685a      	ldr	r2, [r3, #4]
 8003090:	68fb      	ldr	r3, [r7, #12]
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003098:	605a      	str	r2, [r3, #4]
 800309a:	e007      	b.n	80030ac <HAL_SPI_TransmitReceive+0x108>
 800309c:	68fb      	ldr	r3, [r7, #12]
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	685a      	ldr	r2, [r3, #4]
 80030a2:	68fb      	ldr	r3, [r7, #12]
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80030aa:	605a      	str	r2, [r3, #4]
 80030ac:	68fb      	ldr	r3, [r7, #12]
 80030ae:	681b      	ldr	r3, [r3, #0]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80030b6:	2b40      	cmp	r3, #64	@ 0x40
 80030b8:	d007      	beq.n	80030ca <HAL_SPI_TransmitReceive+0x126>
 80030ba:	68fb      	ldr	r3, [r7, #12]
 80030bc:	681b      	ldr	r3, [r3, #0]
 80030be:	681a      	ldr	r2, [r3, #0]
 80030c0:	68fb      	ldr	r3, [r7, #12]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80030c8:	601a      	str	r2, [r3, #0]
 80030ca:	68fb      	ldr	r3, [r7, #12]
 80030cc:	68db      	ldr	r3, [r3, #12]
 80030ce:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 80030d2:	f240 8081 	bls.w	80031d8 <HAL_SPI_TransmitReceive+0x234>
 80030d6:	68fb      	ldr	r3, [r7, #12]
 80030d8:	685b      	ldr	r3, [r3, #4]
 80030da:	2b00      	cmp	r3, #0
 80030dc:	d002      	beq.n	80030e4 <HAL_SPI_TransmitReceive+0x140>
 80030de:	8a7b      	ldrh	r3, [r7, #18]
 80030e0:	2b01      	cmp	r3, #1
 80030e2:	d16d      	bne.n	80031c0 <HAL_SPI_TransmitReceive+0x21c>
 80030e4:	68fb      	ldr	r3, [r7, #12]
 80030e6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80030e8:	881a      	ldrh	r2, [r3, #0]
 80030ea:	68fb      	ldr	r3, [r7, #12]
 80030ec:	681b      	ldr	r3, [r3, #0]
 80030ee:	60da      	str	r2, [r3, #12]
 80030f0:	68fb      	ldr	r3, [r7, #12]
 80030f2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80030f4:	1c9a      	adds	r2, r3, #2
 80030f6:	68fb      	ldr	r3, [r7, #12]
 80030f8:	639a      	str	r2, [r3, #56]	@ 0x38
 80030fa:	68fb      	ldr	r3, [r7, #12]
 80030fc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80030fe:	b29b      	uxth	r3, r3
 8003100:	3b01      	subs	r3, #1
 8003102:	b29a      	uxth	r2, r3
 8003104:	68fb      	ldr	r3, [r7, #12]
 8003106:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003108:	e05a      	b.n	80031c0 <HAL_SPI_TransmitReceive+0x21c>
 800310a:	68fb      	ldr	r3, [r7, #12]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	689b      	ldr	r3, [r3, #8]
 8003110:	f003 0302 	and.w	r3, r3, #2
 8003114:	2b02      	cmp	r3, #2
 8003116:	d11b      	bne.n	8003150 <HAL_SPI_TransmitReceive+0x1ac>
 8003118:	68fb      	ldr	r3, [r7, #12]
 800311a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800311c:	b29b      	uxth	r3, r3
 800311e:	2b00      	cmp	r3, #0
 8003120:	d016      	beq.n	8003150 <HAL_SPI_TransmitReceive+0x1ac>
 8003122:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003124:	2b01      	cmp	r3, #1
 8003126:	d113      	bne.n	8003150 <HAL_SPI_TransmitReceive+0x1ac>
 8003128:	68fb      	ldr	r3, [r7, #12]
 800312a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800312c:	881a      	ldrh	r2, [r3, #0]
 800312e:	68fb      	ldr	r3, [r7, #12]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	60da      	str	r2, [r3, #12]
 8003134:	68fb      	ldr	r3, [r7, #12]
 8003136:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003138:	1c9a      	adds	r2, r3, #2
 800313a:	68fb      	ldr	r3, [r7, #12]
 800313c:	639a      	str	r2, [r3, #56]	@ 0x38
 800313e:	68fb      	ldr	r3, [r7, #12]
 8003140:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003142:	b29b      	uxth	r3, r3
 8003144:	3b01      	subs	r3, #1
 8003146:	b29a      	uxth	r2, r3
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800314c:	2300      	movs	r3, #0
 800314e:	627b      	str	r3, [r7, #36]	@ 0x24
 8003150:	68fb      	ldr	r3, [r7, #12]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	689b      	ldr	r3, [r3, #8]
 8003156:	f003 0301 	and.w	r3, r3, #1
 800315a:	2b01      	cmp	r3, #1
 800315c:	d11c      	bne.n	8003198 <HAL_SPI_TransmitReceive+0x1f4>
 800315e:	68fb      	ldr	r3, [r7, #12]
 8003160:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8003164:	b29b      	uxth	r3, r3
 8003166:	2b00      	cmp	r3, #0
 8003168:	d016      	beq.n	8003198 <HAL_SPI_TransmitReceive+0x1f4>
 800316a:	68fb      	ldr	r3, [r7, #12]
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	68da      	ldr	r2, [r3, #12]
 8003170:	68fb      	ldr	r3, [r7, #12]
 8003172:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003174:	b292      	uxth	r2, r2
 8003176:	801a      	strh	r2, [r3, #0]
 8003178:	68fb      	ldr	r3, [r7, #12]
 800317a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800317c:	1c9a      	adds	r2, r3, #2
 800317e:	68fb      	ldr	r3, [r7, #12]
 8003180:	641a      	str	r2, [r3, #64]	@ 0x40
 8003182:	68fb      	ldr	r3, [r7, #12]
 8003184:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8003188:	b29b      	uxth	r3, r3
 800318a:	3b01      	subs	r3, #1
 800318c:	b29a      	uxth	r2, r3
 800318e:	68fb      	ldr	r3, [r7, #12]
 8003190:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8003194:	2301      	movs	r3, #1
 8003196:	627b      	str	r3, [r7, #36]	@ 0x24
 8003198:	f7fe fac8 	bl	800172c <HAL_GetTick>
 800319c:	4602      	mov	r2, r0
 800319e:	69fb      	ldr	r3, [r7, #28]
 80031a0:	1ad3      	subs	r3, r2, r3
 80031a2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80031a4:	429a      	cmp	r2, r3
 80031a6:	d80b      	bhi.n	80031c0 <HAL_SPI_TransmitReceive+0x21c>
 80031a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80031aa:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80031ae:	d007      	beq.n	80031c0 <HAL_SPI_TransmitReceive+0x21c>
 80031b0:	2303      	movs	r3, #3
 80031b2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80031b6:	68fb      	ldr	r3, [r7, #12]
 80031b8:	2201      	movs	r2, #1
 80031ba:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 80031be:	e109      	b.n	80033d4 <HAL_SPI_TransmitReceive+0x430>
 80031c0:	68fb      	ldr	r3, [r7, #12]
 80031c2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80031c4:	b29b      	uxth	r3, r3
 80031c6:	2b00      	cmp	r3, #0
 80031c8:	d19f      	bne.n	800310a <HAL_SPI_TransmitReceive+0x166>
 80031ca:	68fb      	ldr	r3, [r7, #12]
 80031cc:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80031d0:	b29b      	uxth	r3, r3
 80031d2:	2b00      	cmp	r3, #0
 80031d4:	d199      	bne.n	800310a <HAL_SPI_TransmitReceive+0x166>
 80031d6:	e0e3      	b.n	80033a0 <HAL_SPI_TransmitReceive+0x3fc>
 80031d8:	68fb      	ldr	r3, [r7, #12]
 80031da:	685b      	ldr	r3, [r3, #4]
 80031dc:	2b00      	cmp	r3, #0
 80031de:	d003      	beq.n	80031e8 <HAL_SPI_TransmitReceive+0x244>
 80031e0:	8a7b      	ldrh	r3, [r7, #18]
 80031e2:	2b01      	cmp	r3, #1
 80031e4:	f040 80cf 	bne.w	8003386 <HAL_SPI_TransmitReceive+0x3e2>
 80031e8:	68fb      	ldr	r3, [r7, #12]
 80031ea:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80031ec:	b29b      	uxth	r3, r3
 80031ee:	2b01      	cmp	r3, #1
 80031f0:	d912      	bls.n	8003218 <HAL_SPI_TransmitReceive+0x274>
 80031f2:	68fb      	ldr	r3, [r7, #12]
 80031f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80031f6:	881a      	ldrh	r2, [r3, #0]
 80031f8:	68fb      	ldr	r3, [r7, #12]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	60da      	str	r2, [r3, #12]
 80031fe:	68fb      	ldr	r3, [r7, #12]
 8003200:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003202:	1c9a      	adds	r2, r3, #2
 8003204:	68fb      	ldr	r3, [r7, #12]
 8003206:	639a      	str	r2, [r3, #56]	@ 0x38
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800320c:	b29b      	uxth	r3, r3
 800320e:	3b02      	subs	r3, #2
 8003210:	b29a      	uxth	r2, r3
 8003212:	68fb      	ldr	r3, [r7, #12]
 8003214:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8003216:	e0b6      	b.n	8003386 <HAL_SPI_TransmitReceive+0x3e2>
 8003218:	68fb      	ldr	r3, [r7, #12]
 800321a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	681b      	ldr	r3, [r3, #0]
 8003220:	330c      	adds	r3, #12
 8003222:	7812      	ldrb	r2, [r2, #0]
 8003224:	701a      	strb	r2, [r3, #0]
 8003226:	68fb      	ldr	r3, [r7, #12]
 8003228:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800322a:	1c5a      	adds	r2, r3, #1
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	639a      	str	r2, [r3, #56]	@ 0x38
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003234:	b29b      	uxth	r3, r3
 8003236:	3b01      	subs	r3, #1
 8003238:	b29a      	uxth	r2, r3
 800323a:	68fb      	ldr	r3, [r7, #12]
 800323c:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800323e:	e0a2      	b.n	8003386 <HAL_SPI_TransmitReceive+0x3e2>
 8003240:	68fb      	ldr	r3, [r7, #12]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	689b      	ldr	r3, [r3, #8]
 8003246:	f003 0302 	and.w	r3, r3, #2
 800324a:	2b02      	cmp	r3, #2
 800324c:	d134      	bne.n	80032b8 <HAL_SPI_TransmitReceive+0x314>
 800324e:	68fb      	ldr	r3, [r7, #12]
 8003250:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003252:	b29b      	uxth	r3, r3
 8003254:	2b00      	cmp	r3, #0
 8003256:	d02f      	beq.n	80032b8 <HAL_SPI_TransmitReceive+0x314>
 8003258:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800325a:	2b01      	cmp	r3, #1
 800325c:	d12c      	bne.n	80032b8 <HAL_SPI_TransmitReceive+0x314>
 800325e:	68fb      	ldr	r3, [r7, #12]
 8003260:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003262:	b29b      	uxth	r3, r3
 8003264:	2b01      	cmp	r3, #1
 8003266:	d912      	bls.n	800328e <HAL_SPI_TransmitReceive+0x2ea>
 8003268:	68fb      	ldr	r3, [r7, #12]
 800326a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800326c:	881a      	ldrh	r2, [r3, #0]
 800326e:	68fb      	ldr	r3, [r7, #12]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	60da      	str	r2, [r3, #12]
 8003274:	68fb      	ldr	r3, [r7, #12]
 8003276:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003278:	1c9a      	adds	r2, r3, #2
 800327a:	68fb      	ldr	r3, [r7, #12]
 800327c:	639a      	str	r2, [r3, #56]	@ 0x38
 800327e:	68fb      	ldr	r3, [r7, #12]
 8003280:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8003282:	b29b      	uxth	r3, r3
 8003284:	3b02      	subs	r3, #2
 8003286:	b29a      	uxth	r2, r3
 8003288:	68fb      	ldr	r3, [r7, #12]
 800328a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800328c:	e012      	b.n	80032b4 <HAL_SPI_TransmitReceive+0x310>
 800328e:	68fb      	ldr	r3, [r7, #12]
 8003290:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8003292:	68fb      	ldr	r3, [r7, #12]
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	330c      	adds	r3, #12
 8003298:	7812      	ldrb	r2, [r2, #0]
 800329a:	701a      	strb	r2, [r3, #0]
 800329c:	68fb      	ldr	r3, [r7, #12]
 800329e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80032a0:	1c5a      	adds	r2, r3, #1
 80032a2:	68fb      	ldr	r3, [r7, #12]
 80032a4:	639a      	str	r2, [r3, #56]	@ 0x38
 80032a6:	68fb      	ldr	r3, [r7, #12]
 80032a8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80032aa:	b29b      	uxth	r3, r3
 80032ac:	3b01      	subs	r3, #1
 80032ae:	b29a      	uxth	r2, r3
 80032b0:	68fb      	ldr	r3, [r7, #12]
 80032b2:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80032b4:	2300      	movs	r3, #0
 80032b6:	627b      	str	r3, [r7, #36]	@ 0x24
 80032b8:	68fb      	ldr	r3, [r7, #12]
 80032ba:	681b      	ldr	r3, [r3, #0]
 80032bc:	689b      	ldr	r3, [r3, #8]
 80032be:	f003 0301 	and.w	r3, r3, #1
 80032c2:	2b01      	cmp	r3, #1
 80032c4:	d148      	bne.n	8003358 <HAL_SPI_TransmitReceive+0x3b4>
 80032c6:	68fb      	ldr	r3, [r7, #12]
 80032c8:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80032cc:	b29b      	uxth	r3, r3
 80032ce:	2b00      	cmp	r3, #0
 80032d0:	d042      	beq.n	8003358 <HAL_SPI_TransmitReceive+0x3b4>
 80032d2:	68fb      	ldr	r3, [r7, #12]
 80032d4:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80032d8:	b29b      	uxth	r3, r3
 80032da:	2b01      	cmp	r3, #1
 80032dc:	d923      	bls.n	8003326 <HAL_SPI_TransmitReceive+0x382>
 80032de:	68fb      	ldr	r3, [r7, #12]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	68da      	ldr	r2, [r3, #12]
 80032e4:	68fb      	ldr	r3, [r7, #12]
 80032e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80032e8:	b292      	uxth	r2, r2
 80032ea:	801a      	strh	r2, [r3, #0]
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80032f0:	1c9a      	adds	r2, r3, #2
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	641a      	str	r2, [r3, #64]	@ 0x40
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80032fc:	b29b      	uxth	r3, r3
 80032fe:	3b02      	subs	r3, #2
 8003300:	b29a      	uxth	r2, r3
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8003308:	68fb      	ldr	r3, [r7, #12]
 800330a:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800330e:	b29b      	uxth	r3, r3
 8003310:	2b01      	cmp	r3, #1
 8003312:	d81f      	bhi.n	8003354 <HAL_SPI_TransmitReceive+0x3b0>
 8003314:	68fb      	ldr	r3, [r7, #12]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	685a      	ldr	r2, [r3, #4]
 800331a:	68fb      	ldr	r3, [r7, #12]
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8003322:	605a      	str	r2, [r3, #4]
 8003324:	e016      	b.n	8003354 <HAL_SPI_TransmitReceive+0x3b0>
 8003326:	68fb      	ldr	r3, [r7, #12]
 8003328:	681b      	ldr	r3, [r3, #0]
 800332a:	f103 020c 	add.w	r2, r3, #12
 800332e:	68fb      	ldr	r3, [r7, #12]
 8003330:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003332:	7812      	ldrb	r2, [r2, #0]
 8003334:	b2d2      	uxtb	r2, r2
 8003336:	701a      	strb	r2, [r3, #0]
 8003338:	68fb      	ldr	r3, [r7, #12]
 800333a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800333c:	1c5a      	adds	r2, r3, #1
 800333e:	68fb      	ldr	r3, [r7, #12]
 8003340:	641a      	str	r2, [r3, #64]	@ 0x40
 8003342:	68fb      	ldr	r3, [r7, #12]
 8003344:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8003348:	b29b      	uxth	r3, r3
 800334a:	3b01      	subs	r3, #1
 800334c:	b29a      	uxth	r2, r3
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
 8003354:	2301      	movs	r3, #1
 8003356:	627b      	str	r3, [r7, #36]	@ 0x24
 8003358:	f7fe f9e8 	bl	800172c <HAL_GetTick>
 800335c:	4602      	mov	r2, r0
 800335e:	69fb      	ldr	r3, [r7, #28]
 8003360:	1ad3      	subs	r3, r2, r3
 8003362:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003364:	429a      	cmp	r2, r3
 8003366:	d803      	bhi.n	8003370 <HAL_SPI_TransmitReceive+0x3cc>
 8003368:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800336a:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800336e:	d102      	bne.n	8003376 <HAL_SPI_TransmitReceive+0x3d2>
 8003370:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003372:	2b00      	cmp	r3, #0
 8003374:	d107      	bne.n	8003386 <HAL_SPI_TransmitReceive+0x3e2>
 8003376:	2303      	movs	r3, #3
 8003378:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800337c:	68fb      	ldr	r3, [r7, #12]
 800337e:	2201      	movs	r2, #1
 8003380:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8003384:	e026      	b.n	80033d4 <HAL_SPI_TransmitReceive+0x430>
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800338a:	b29b      	uxth	r3, r3
 800338c:	2b00      	cmp	r3, #0
 800338e:	f47f af57 	bne.w	8003240 <HAL_SPI_TransmitReceive+0x29c>
 8003392:	68fb      	ldr	r3, [r7, #12]
 8003394:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8003398:	b29b      	uxth	r3, r3
 800339a:	2b00      	cmp	r3, #0
 800339c:	f47f af50 	bne.w	8003240 <HAL_SPI_TransmitReceive+0x29c>
 80033a0:	69fa      	ldr	r2, [r7, #28]
 80033a2:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80033a4:	68f8      	ldr	r0, [r7, #12]
 80033a6:	f000 f93d 	bl	8003624 <SPI_EndRxTxTransaction>
 80033aa:	4603      	mov	r3, r0
 80033ac:	2b00      	cmp	r3, #0
 80033ae:	d005      	beq.n	80033bc <HAL_SPI_TransmitReceive+0x418>
 80033b0:	2301      	movs	r3, #1
 80033b2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80033b6:	68fb      	ldr	r3, [r7, #12]
 80033b8:	2220      	movs	r2, #32
 80033ba:	661a      	str	r2, [r3, #96]	@ 0x60
 80033bc:	68fb      	ldr	r3, [r7, #12]
 80033be:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80033c0:	2b00      	cmp	r3, #0
 80033c2:	d003      	beq.n	80033cc <HAL_SPI_TransmitReceive+0x428>
 80033c4:	2301      	movs	r3, #1
 80033c6:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80033ca:	e003      	b.n	80033d4 <HAL_SPI_TransmitReceive+0x430>
 80033cc:	68fb      	ldr	r3, [r7, #12]
 80033ce:	2201      	movs	r2, #1
 80033d0:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 80033d4:	68fb      	ldr	r3, [r7, #12]
 80033d6:	2200      	movs	r2, #0
 80033d8:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80033dc:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 80033e0:	4618      	mov	r0, r3
 80033e2:	3728      	adds	r7, #40	@ 0x28
 80033e4:	46bd      	mov	sp, r7
 80033e6:	bd80      	pop	{r7, pc}

080033e8 <SPI_WaitFlagStateUntilTimeout>:
 80033e8:	b580      	push	{r7, lr}
 80033ea:	b088      	sub	sp, #32
 80033ec:	af00      	add	r7, sp, #0
 80033ee:	60f8      	str	r0, [r7, #12]
 80033f0:	60b9      	str	r1, [r7, #8]
 80033f2:	603b      	str	r3, [r7, #0]
 80033f4:	4613      	mov	r3, r2
 80033f6:	71fb      	strb	r3, [r7, #7]
 80033f8:	f7fe f998 	bl	800172c <HAL_GetTick>
 80033fc:	4602      	mov	r2, r0
 80033fe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003400:	1a9b      	subs	r3, r3, r2
 8003402:	683a      	ldr	r2, [r7, #0]
 8003404:	4413      	add	r3, r2
 8003406:	61fb      	str	r3, [r7, #28]
 8003408:	f7fe f990 	bl	800172c <HAL_GetTick>
 800340c:	61b8      	str	r0, [r7, #24]
 800340e:	4b39      	ldr	r3, [pc, #228]	@ (80034f4 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8003410:	681b      	ldr	r3, [r3, #0]
 8003412:	015b      	lsls	r3, r3, #5
 8003414:	0d1b      	lsrs	r3, r3, #20
 8003416:	69fa      	ldr	r2, [r7, #28]
 8003418:	fb02 f303 	mul.w	r3, r2, r3
 800341c:	617b      	str	r3, [r7, #20]
 800341e:	e054      	b.n	80034ca <SPI_WaitFlagStateUntilTimeout+0xe2>
 8003420:	683b      	ldr	r3, [r7, #0]
 8003422:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8003426:	d050      	beq.n	80034ca <SPI_WaitFlagStateUntilTimeout+0xe2>
 8003428:	f7fe f980 	bl	800172c <HAL_GetTick>
 800342c:	4602      	mov	r2, r0
 800342e:	69bb      	ldr	r3, [r7, #24]
 8003430:	1ad3      	subs	r3, r2, r3
 8003432:	69fa      	ldr	r2, [r7, #28]
 8003434:	429a      	cmp	r2, r3
 8003436:	d902      	bls.n	800343e <SPI_WaitFlagStateUntilTimeout+0x56>
 8003438:	69fb      	ldr	r3, [r7, #28]
 800343a:	2b00      	cmp	r3, #0
 800343c:	d13d      	bne.n	80034ba <SPI_WaitFlagStateUntilTimeout+0xd2>
 800343e:	68fb      	ldr	r3, [r7, #12]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	685a      	ldr	r2, [r3, #4]
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800344c:	605a      	str	r2, [r3, #4]
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	685b      	ldr	r3, [r3, #4]
 8003452:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8003456:	d111      	bne.n	800347c <SPI_WaitFlagStateUntilTimeout+0x94>
 8003458:	68fb      	ldr	r3, [r7, #12]
 800345a:	689b      	ldr	r3, [r3, #8]
 800345c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003460:	d004      	beq.n	800346c <SPI_WaitFlagStateUntilTimeout+0x84>
 8003462:	68fb      	ldr	r3, [r7, #12]
 8003464:	689b      	ldr	r3, [r3, #8]
 8003466:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800346a:	d107      	bne.n	800347c <SPI_WaitFlagStateUntilTimeout+0x94>
 800346c:	68fb      	ldr	r3, [r7, #12]
 800346e:	681b      	ldr	r3, [r3, #0]
 8003470:	681a      	ldr	r2, [r3, #0]
 8003472:	68fb      	ldr	r3, [r7, #12]
 8003474:	681b      	ldr	r3, [r3, #0]
 8003476:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800347a:	601a      	str	r2, [r3, #0]
 800347c:	68fb      	ldr	r3, [r7, #12]
 800347e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003480:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003484:	d10f      	bne.n	80034a6 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8003486:	68fb      	ldr	r3, [r7, #12]
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	681a      	ldr	r2, [r3, #0]
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003494:	601a      	str	r2, [r3, #0]
 8003496:	68fb      	ldr	r3, [r7, #12]
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	681a      	ldr	r2, [r3, #0]
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80034a4:	601a      	str	r2, [r3, #0]
 80034a6:	68fb      	ldr	r3, [r7, #12]
 80034a8:	2201      	movs	r2, #1
 80034aa:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 80034ae:	68fb      	ldr	r3, [r7, #12]
 80034b0:	2200      	movs	r2, #0
 80034b2:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80034b6:	2303      	movs	r3, #3
 80034b8:	e017      	b.n	80034ea <SPI_WaitFlagStateUntilTimeout+0x102>
 80034ba:	697b      	ldr	r3, [r7, #20]
 80034bc:	2b00      	cmp	r3, #0
 80034be:	d101      	bne.n	80034c4 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80034c0:	2300      	movs	r3, #0
 80034c2:	61fb      	str	r3, [r7, #28]
 80034c4:	697b      	ldr	r3, [r7, #20]
 80034c6:	3b01      	subs	r3, #1
 80034c8:	617b      	str	r3, [r7, #20]
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	689a      	ldr	r2, [r3, #8]
 80034d0:	68bb      	ldr	r3, [r7, #8]
 80034d2:	4013      	ands	r3, r2
 80034d4:	68ba      	ldr	r2, [r7, #8]
 80034d6:	429a      	cmp	r2, r3
 80034d8:	bf0c      	ite	eq
 80034da:	2301      	moveq	r3, #1
 80034dc:	2300      	movne	r3, #0
 80034de:	b2db      	uxtb	r3, r3
 80034e0:	461a      	mov	r2, r3
 80034e2:	79fb      	ldrb	r3, [r7, #7]
 80034e4:	429a      	cmp	r2, r3
 80034e6:	d19b      	bne.n	8003420 <SPI_WaitFlagStateUntilTimeout+0x38>
 80034e8:	2300      	movs	r3, #0
 80034ea:	4618      	mov	r0, r3
 80034ec:	3720      	adds	r7, #32
 80034ee:	46bd      	mov	sp, r7
 80034f0:	bd80      	pop	{r7, pc}
 80034f2:	bf00      	nop
 80034f4:	20000004 	.word	0x20000004

080034f8 <SPI_WaitFifoStateUntilTimeout>:
 80034f8:	b580      	push	{r7, lr}
 80034fa:	b08a      	sub	sp, #40	@ 0x28
 80034fc:	af00      	add	r7, sp, #0
 80034fe:	60f8      	str	r0, [r7, #12]
 8003500:	60b9      	str	r1, [r7, #8]
 8003502:	607a      	str	r2, [r7, #4]
 8003504:	603b      	str	r3, [r7, #0]
 8003506:	2300      	movs	r3, #0
 8003508:	75fb      	strb	r3, [r7, #23]
 800350a:	f7fe f90f 	bl	800172c <HAL_GetTick>
 800350e:	4602      	mov	r2, r0
 8003510:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003512:	1a9b      	subs	r3, r3, r2
 8003514:	683a      	ldr	r2, [r7, #0]
 8003516:	4413      	add	r3, r2
 8003518:	627b      	str	r3, [r7, #36]	@ 0x24
 800351a:	f7fe f907 	bl	800172c <HAL_GetTick>
 800351e:	6238      	str	r0, [r7, #32]
 8003520:	68fb      	ldr	r3, [r7, #12]
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	330c      	adds	r3, #12
 8003526:	61fb      	str	r3, [r7, #28]
 8003528:	4b3d      	ldr	r3, [pc, #244]	@ (8003620 <SPI_WaitFifoStateUntilTimeout+0x128>)
 800352a:	681a      	ldr	r2, [r3, #0]
 800352c:	4613      	mov	r3, r2
 800352e:	009b      	lsls	r3, r3, #2
 8003530:	4413      	add	r3, r2
 8003532:	00da      	lsls	r2, r3, #3
 8003534:	1ad3      	subs	r3, r2, r3
 8003536:	0d1b      	lsrs	r3, r3, #20
 8003538:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800353a:	fb02 f303 	mul.w	r3, r2, r3
 800353e:	61bb      	str	r3, [r7, #24]
 8003540:	e060      	b.n	8003604 <SPI_WaitFifoStateUntilTimeout+0x10c>
 8003542:	68bb      	ldr	r3, [r7, #8]
 8003544:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8003548:	d107      	bne.n	800355a <SPI_WaitFifoStateUntilTimeout+0x62>
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	2b00      	cmp	r3, #0
 800354e:	d104      	bne.n	800355a <SPI_WaitFifoStateUntilTimeout+0x62>
 8003550:	69fb      	ldr	r3, [r7, #28]
 8003552:	781b      	ldrb	r3, [r3, #0]
 8003554:	b2db      	uxtb	r3, r3
 8003556:	75fb      	strb	r3, [r7, #23]
 8003558:	7dfb      	ldrb	r3, [r7, #23]
 800355a:	683b      	ldr	r3, [r7, #0]
 800355c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8003560:	d050      	beq.n	8003604 <SPI_WaitFifoStateUntilTimeout+0x10c>
 8003562:	f7fe f8e3 	bl	800172c <HAL_GetTick>
 8003566:	4602      	mov	r2, r0
 8003568:	6a3b      	ldr	r3, [r7, #32]
 800356a:	1ad3      	subs	r3, r2, r3
 800356c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800356e:	429a      	cmp	r2, r3
 8003570:	d902      	bls.n	8003578 <SPI_WaitFifoStateUntilTimeout+0x80>
 8003572:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003574:	2b00      	cmp	r3, #0
 8003576:	d13d      	bne.n	80035f4 <SPI_WaitFifoStateUntilTimeout+0xfc>
 8003578:	68fb      	ldr	r3, [r7, #12]
 800357a:	681b      	ldr	r3, [r3, #0]
 800357c:	685a      	ldr	r2, [r3, #4]
 800357e:	68fb      	ldr	r3, [r7, #12]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8003586:	605a      	str	r2, [r3, #4]
 8003588:	68fb      	ldr	r3, [r7, #12]
 800358a:	685b      	ldr	r3, [r3, #4]
 800358c:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8003590:	d111      	bne.n	80035b6 <SPI_WaitFifoStateUntilTimeout+0xbe>
 8003592:	68fb      	ldr	r3, [r7, #12]
 8003594:	689b      	ldr	r3, [r3, #8]
 8003596:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800359a:	d004      	beq.n	80035a6 <SPI_WaitFifoStateUntilTimeout+0xae>
 800359c:	68fb      	ldr	r3, [r7, #12]
 800359e:	689b      	ldr	r3, [r3, #8]
 80035a0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80035a4:	d107      	bne.n	80035b6 <SPI_WaitFifoStateUntilTimeout+0xbe>
 80035a6:	68fb      	ldr	r3, [r7, #12]
 80035a8:	681b      	ldr	r3, [r3, #0]
 80035aa:	681a      	ldr	r2, [r3, #0]
 80035ac:	68fb      	ldr	r3, [r7, #12]
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80035b4:	601a      	str	r2, [r3, #0]
 80035b6:	68fb      	ldr	r3, [r7, #12]
 80035b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80035ba:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80035be:	d10f      	bne.n	80035e0 <SPI_WaitFifoStateUntilTimeout+0xe8>
 80035c0:	68fb      	ldr	r3, [r7, #12]
 80035c2:	681b      	ldr	r3, [r3, #0]
 80035c4:	681a      	ldr	r2, [r3, #0]
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80035ce:	601a      	str	r2, [r3, #0]
 80035d0:	68fb      	ldr	r3, [r7, #12]
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	681a      	ldr	r2, [r3, #0]
 80035d6:	68fb      	ldr	r3, [r7, #12]
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80035de:	601a      	str	r2, [r3, #0]
 80035e0:	68fb      	ldr	r3, [r7, #12]
 80035e2:	2201      	movs	r2, #1
 80035e4:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	2200      	movs	r2, #0
 80035ec:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 80035f0:	2303      	movs	r3, #3
 80035f2:	e010      	b.n	8003616 <SPI_WaitFifoStateUntilTimeout+0x11e>
 80035f4:	69bb      	ldr	r3, [r7, #24]
 80035f6:	2b00      	cmp	r3, #0
 80035f8:	d101      	bne.n	80035fe <SPI_WaitFifoStateUntilTimeout+0x106>
 80035fa:	2300      	movs	r3, #0
 80035fc:	627b      	str	r3, [r7, #36]	@ 0x24
 80035fe:	69bb      	ldr	r3, [r7, #24]
 8003600:	3b01      	subs	r3, #1
 8003602:	61bb      	str	r3, [r7, #24]
 8003604:	68fb      	ldr	r3, [r7, #12]
 8003606:	681b      	ldr	r3, [r3, #0]
 8003608:	689a      	ldr	r2, [r3, #8]
 800360a:	68bb      	ldr	r3, [r7, #8]
 800360c:	4013      	ands	r3, r2
 800360e:	687a      	ldr	r2, [r7, #4]
 8003610:	429a      	cmp	r2, r3
 8003612:	d196      	bne.n	8003542 <SPI_WaitFifoStateUntilTimeout+0x4a>
 8003614:	2300      	movs	r3, #0
 8003616:	4618      	mov	r0, r3
 8003618:	3728      	adds	r7, #40	@ 0x28
 800361a:	46bd      	mov	sp, r7
 800361c:	bd80      	pop	{r7, pc}
 800361e:	bf00      	nop
 8003620:	20000004 	.word	0x20000004

08003624 <SPI_EndRxTxTransaction>:
 8003624:	b580      	push	{r7, lr}
 8003626:	b086      	sub	sp, #24
 8003628:	af02      	add	r7, sp, #8
 800362a:	60f8      	str	r0, [r7, #12]
 800362c:	60b9      	str	r1, [r7, #8]
 800362e:	607a      	str	r2, [r7, #4]
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	9300      	str	r3, [sp, #0]
 8003634:	68bb      	ldr	r3, [r7, #8]
 8003636:	2200      	movs	r2, #0
 8003638:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
 800363c:	68f8      	ldr	r0, [r7, #12]
 800363e:	f7ff ff5b 	bl	80034f8 <SPI_WaitFifoStateUntilTimeout>
 8003642:	4603      	mov	r3, r0
 8003644:	2b00      	cmp	r3, #0
 8003646:	d007      	beq.n	8003658 <SPI_EndRxTxTransaction+0x34>
 8003648:	68fb      	ldr	r3, [r7, #12]
 800364a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800364c:	f043 0220 	orr.w	r2, r3, #32
 8003650:	68fb      	ldr	r3, [r7, #12]
 8003652:	661a      	str	r2, [r3, #96]	@ 0x60
 8003654:	2303      	movs	r3, #3
 8003656:	e027      	b.n	80036a8 <SPI_EndRxTxTransaction+0x84>
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	9300      	str	r3, [sp, #0]
 800365c:	68bb      	ldr	r3, [r7, #8]
 800365e:	2200      	movs	r2, #0
 8003660:	2180      	movs	r1, #128	@ 0x80
 8003662:	68f8      	ldr	r0, [r7, #12]
 8003664:	f7ff fec0 	bl	80033e8 <SPI_WaitFlagStateUntilTimeout>
 8003668:	4603      	mov	r3, r0
 800366a:	2b00      	cmp	r3, #0
 800366c:	d007      	beq.n	800367e <SPI_EndRxTxTransaction+0x5a>
 800366e:	68fb      	ldr	r3, [r7, #12]
 8003670:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003672:	f043 0220 	orr.w	r2, r3, #32
 8003676:	68fb      	ldr	r3, [r7, #12]
 8003678:	661a      	str	r2, [r3, #96]	@ 0x60
 800367a:	2303      	movs	r3, #3
 800367c:	e014      	b.n	80036a8 <SPI_EndRxTxTransaction+0x84>
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	9300      	str	r3, [sp, #0]
 8003682:	68bb      	ldr	r3, [r7, #8]
 8003684:	2200      	movs	r2, #0
 8003686:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 800368a:	68f8      	ldr	r0, [r7, #12]
 800368c:	f7ff ff34 	bl	80034f8 <SPI_WaitFifoStateUntilTimeout>
 8003690:	4603      	mov	r3, r0
 8003692:	2b00      	cmp	r3, #0
 8003694:	d007      	beq.n	80036a6 <SPI_EndRxTxTransaction+0x82>
 8003696:	68fb      	ldr	r3, [r7, #12]
 8003698:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800369a:	f043 0220 	orr.w	r2, r3, #32
 800369e:	68fb      	ldr	r3, [r7, #12]
 80036a0:	661a      	str	r2, [r3, #96]	@ 0x60
 80036a2:	2303      	movs	r3, #3
 80036a4:	e000      	b.n	80036a8 <SPI_EndRxTxTransaction+0x84>
 80036a6:	2300      	movs	r3, #0
 80036a8:	4618      	mov	r0, r3
 80036aa:	3710      	adds	r7, #16
 80036ac:	46bd      	mov	sp, r7
 80036ae:	bd80      	pop	{r7, pc}

080036b0 <siprintf>:
 80036b0:	b40e      	push	{r1, r2, r3}
 80036b2:	b500      	push	{lr}
 80036b4:	b09c      	sub	sp, #112	@ 0x70
 80036b6:	ab1d      	add	r3, sp, #116	@ 0x74
 80036b8:	9002      	str	r0, [sp, #8]
 80036ba:	9006      	str	r0, [sp, #24]
 80036bc:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80036c0:	4809      	ldr	r0, [pc, #36]	@ (80036e8 <siprintf+0x38>)
 80036c2:	9107      	str	r1, [sp, #28]
 80036c4:	9104      	str	r1, [sp, #16]
 80036c6:	4909      	ldr	r1, [pc, #36]	@ (80036ec <siprintf+0x3c>)
 80036c8:	f853 2b04 	ldr.w	r2, [r3], #4
 80036cc:	9105      	str	r1, [sp, #20]
 80036ce:	6800      	ldr	r0, [r0, #0]
 80036d0:	9301      	str	r3, [sp, #4]
 80036d2:	a902      	add	r1, sp, #8
 80036d4:	f000 f8aa 	bl	800382c <_svfiprintf_r>
 80036d8:	9b02      	ldr	r3, [sp, #8]
 80036da:	2200      	movs	r2, #0
 80036dc:	701a      	strb	r2, [r3, #0]
 80036de:	b01c      	add	sp, #112	@ 0x70
 80036e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80036e4:	b003      	add	sp, #12
 80036e6:	4770      	bx	lr
 80036e8:	20000010 	.word	0x20000010
 80036ec:	ffff0208 	.word	0xffff0208

080036f0 <memset>:
 80036f0:	4402      	add	r2, r0
 80036f2:	4603      	mov	r3, r0
 80036f4:	4293      	cmp	r3, r2
 80036f6:	d100      	bne.n	80036fa <memset+0xa>
 80036f8:	4770      	bx	lr
 80036fa:	f803 1b01 	strb.w	r1, [r3], #1
 80036fe:	e7f9      	b.n	80036f4 <memset+0x4>

08003700 <__errno>:
 8003700:	4b01      	ldr	r3, [pc, #4]	@ (8003708 <__errno+0x8>)
 8003702:	6818      	ldr	r0, [r3, #0]
 8003704:	4770      	bx	lr
 8003706:	bf00      	nop
 8003708:	20000010 	.word	0x20000010

0800370c <__libc_init_array>:
 800370c:	b570      	push	{r4, r5, r6, lr}
 800370e:	4d0d      	ldr	r5, [pc, #52]	@ (8003744 <__libc_init_array+0x38>)
 8003710:	4c0d      	ldr	r4, [pc, #52]	@ (8003748 <__libc_init_array+0x3c>)
 8003712:	1b64      	subs	r4, r4, r5
 8003714:	10a4      	asrs	r4, r4, #2
 8003716:	2600      	movs	r6, #0
 8003718:	42a6      	cmp	r6, r4
 800371a:	d109      	bne.n	8003730 <__libc_init_array+0x24>
 800371c:	4d0b      	ldr	r5, [pc, #44]	@ (800374c <__libc_init_array+0x40>)
 800371e:	4c0c      	ldr	r4, [pc, #48]	@ (8003750 <__libc_init_array+0x44>)
 8003720:	f000 fc66 	bl	8003ff0 <_init>
 8003724:	1b64      	subs	r4, r4, r5
 8003726:	10a4      	asrs	r4, r4, #2
 8003728:	2600      	movs	r6, #0
 800372a:	42a6      	cmp	r6, r4
 800372c:	d105      	bne.n	800373a <__libc_init_array+0x2e>
 800372e:	bd70      	pop	{r4, r5, r6, pc}
 8003730:	f855 3b04 	ldr.w	r3, [r5], #4
 8003734:	4798      	blx	r3
 8003736:	3601      	adds	r6, #1
 8003738:	e7ee      	b.n	8003718 <__libc_init_array+0xc>
 800373a:	f855 3b04 	ldr.w	r3, [r5], #4
 800373e:	4798      	blx	r3
 8003740:	3601      	adds	r6, #1
 8003742:	e7f2      	b.n	800372a <__libc_init_array+0x1e>
 8003744:	08004604 	.word	0x08004604
 8003748:	08004604 	.word	0x08004604
 800374c:	08004604 	.word	0x08004604
 8003750:	08004608 	.word	0x08004608

08003754 <__retarget_lock_acquire_recursive>:
 8003754:	4770      	bx	lr

08003756 <__retarget_lock_release_recursive>:
 8003756:	4770      	bx	lr

08003758 <memcpy>:
 8003758:	440a      	add	r2, r1
 800375a:	4291      	cmp	r1, r2
 800375c:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8003760:	d100      	bne.n	8003764 <memcpy+0xc>
 8003762:	4770      	bx	lr
 8003764:	b510      	push	{r4, lr}
 8003766:	f811 4b01 	ldrb.w	r4, [r1], #1
 800376a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800376e:	4291      	cmp	r1, r2
 8003770:	d1f9      	bne.n	8003766 <memcpy+0xe>
 8003772:	bd10      	pop	{r4, pc}

08003774 <__ssputs_r>:
 8003774:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003778:	688e      	ldr	r6, [r1, #8]
 800377a:	461f      	mov	r7, r3
 800377c:	42be      	cmp	r6, r7
 800377e:	680b      	ldr	r3, [r1, #0]
 8003780:	4682      	mov	sl, r0
 8003782:	460c      	mov	r4, r1
 8003784:	4690      	mov	r8, r2
 8003786:	d82d      	bhi.n	80037e4 <__ssputs_r+0x70>
 8003788:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800378c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003790:	d026      	beq.n	80037e0 <__ssputs_r+0x6c>
 8003792:	6965      	ldr	r5, [r4, #20]
 8003794:	6909      	ldr	r1, [r1, #16]
 8003796:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800379a:	eba3 0901 	sub.w	r9, r3, r1
 800379e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80037a2:	1c7b      	adds	r3, r7, #1
 80037a4:	444b      	add	r3, r9
 80037a6:	106d      	asrs	r5, r5, #1
 80037a8:	429d      	cmp	r5, r3
 80037aa:	bf38      	it	cc
 80037ac:	461d      	movcc	r5, r3
 80037ae:	0553      	lsls	r3, r2, #21
 80037b0:	d527      	bpl.n	8003802 <__ssputs_r+0x8e>
 80037b2:	4629      	mov	r1, r5
 80037b4:	f000 f958 	bl	8003a68 <_malloc_r>
 80037b8:	4606      	mov	r6, r0
 80037ba:	b360      	cbz	r0, 8003816 <__ssputs_r+0xa2>
 80037bc:	6921      	ldr	r1, [r4, #16]
 80037be:	464a      	mov	r2, r9
 80037c0:	f7ff ffca 	bl	8003758 <memcpy>
 80037c4:	89a3      	ldrh	r3, [r4, #12]
 80037c6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80037ca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80037ce:	81a3      	strh	r3, [r4, #12]
 80037d0:	6126      	str	r6, [r4, #16]
 80037d2:	6165      	str	r5, [r4, #20]
 80037d4:	444e      	add	r6, r9
 80037d6:	eba5 0509 	sub.w	r5, r5, r9
 80037da:	6026      	str	r6, [r4, #0]
 80037dc:	60a5      	str	r5, [r4, #8]
 80037de:	463e      	mov	r6, r7
 80037e0:	42be      	cmp	r6, r7
 80037e2:	d900      	bls.n	80037e6 <__ssputs_r+0x72>
 80037e4:	463e      	mov	r6, r7
 80037e6:	6820      	ldr	r0, [r4, #0]
 80037e8:	4632      	mov	r2, r6
 80037ea:	4641      	mov	r1, r8
 80037ec:	f000 fb84 	bl	8003ef8 <memmove>
 80037f0:	68a3      	ldr	r3, [r4, #8]
 80037f2:	1b9b      	subs	r3, r3, r6
 80037f4:	60a3      	str	r3, [r4, #8]
 80037f6:	6823      	ldr	r3, [r4, #0]
 80037f8:	4433      	add	r3, r6
 80037fa:	6023      	str	r3, [r4, #0]
 80037fc:	2000      	movs	r0, #0
 80037fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003802:	462a      	mov	r2, r5
 8003804:	f000 fb4a 	bl	8003e9c <_realloc_r>
 8003808:	4606      	mov	r6, r0
 800380a:	2800      	cmp	r0, #0
 800380c:	d1e0      	bne.n	80037d0 <__ssputs_r+0x5c>
 800380e:	6921      	ldr	r1, [r4, #16]
 8003810:	4650      	mov	r0, sl
 8003812:	f000 fb9b 	bl	8003f4c <_free_r>
 8003816:	230c      	movs	r3, #12
 8003818:	f8ca 3000 	str.w	r3, [sl]
 800381c:	89a3      	ldrh	r3, [r4, #12]
 800381e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003822:	81a3      	strh	r3, [r4, #12]
 8003824:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003828:	e7e9      	b.n	80037fe <__ssputs_r+0x8a>
	...

0800382c <_svfiprintf_r>:
 800382c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003830:	4698      	mov	r8, r3
 8003832:	898b      	ldrh	r3, [r1, #12]
 8003834:	061b      	lsls	r3, r3, #24
 8003836:	b09d      	sub	sp, #116	@ 0x74
 8003838:	4607      	mov	r7, r0
 800383a:	460d      	mov	r5, r1
 800383c:	4614      	mov	r4, r2
 800383e:	d510      	bpl.n	8003862 <_svfiprintf_r+0x36>
 8003840:	690b      	ldr	r3, [r1, #16]
 8003842:	b973      	cbnz	r3, 8003862 <_svfiprintf_r+0x36>
 8003844:	2140      	movs	r1, #64	@ 0x40
 8003846:	f000 f90f 	bl	8003a68 <_malloc_r>
 800384a:	6028      	str	r0, [r5, #0]
 800384c:	6128      	str	r0, [r5, #16]
 800384e:	b930      	cbnz	r0, 800385e <_svfiprintf_r+0x32>
 8003850:	230c      	movs	r3, #12
 8003852:	603b      	str	r3, [r7, #0]
 8003854:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003858:	b01d      	add	sp, #116	@ 0x74
 800385a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800385e:	2340      	movs	r3, #64	@ 0x40
 8003860:	616b      	str	r3, [r5, #20]
 8003862:	2300      	movs	r3, #0
 8003864:	9309      	str	r3, [sp, #36]	@ 0x24
 8003866:	2320      	movs	r3, #32
 8003868:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800386c:	f8cd 800c 	str.w	r8, [sp, #12]
 8003870:	2330      	movs	r3, #48	@ 0x30
 8003872:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003a10 <_svfiprintf_r+0x1e4>
 8003876:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800387a:	f04f 0901 	mov.w	r9, #1
 800387e:	4623      	mov	r3, r4
 8003880:	469a      	mov	sl, r3
 8003882:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003886:	b10a      	cbz	r2, 800388c <_svfiprintf_r+0x60>
 8003888:	2a25      	cmp	r2, #37	@ 0x25
 800388a:	d1f9      	bne.n	8003880 <_svfiprintf_r+0x54>
 800388c:	ebba 0b04 	subs.w	fp, sl, r4
 8003890:	d00b      	beq.n	80038aa <_svfiprintf_r+0x7e>
 8003892:	465b      	mov	r3, fp
 8003894:	4622      	mov	r2, r4
 8003896:	4629      	mov	r1, r5
 8003898:	4638      	mov	r0, r7
 800389a:	f7ff ff6b 	bl	8003774 <__ssputs_r>
 800389e:	3001      	adds	r0, #1
 80038a0:	f000 80a7 	beq.w	80039f2 <_svfiprintf_r+0x1c6>
 80038a4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80038a6:	445a      	add	r2, fp
 80038a8:	9209      	str	r2, [sp, #36]	@ 0x24
 80038aa:	f89a 3000 	ldrb.w	r3, [sl]
 80038ae:	2b00      	cmp	r3, #0
 80038b0:	f000 809f 	beq.w	80039f2 <_svfiprintf_r+0x1c6>
 80038b4:	2300      	movs	r3, #0
 80038b6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80038ba:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80038be:	f10a 0a01 	add.w	sl, sl, #1
 80038c2:	9304      	str	r3, [sp, #16]
 80038c4:	9307      	str	r3, [sp, #28]
 80038c6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80038ca:	931a      	str	r3, [sp, #104]	@ 0x68
 80038cc:	4654      	mov	r4, sl
 80038ce:	2205      	movs	r2, #5
 80038d0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80038d4:	484e      	ldr	r0, [pc, #312]	@ (8003a10 <_svfiprintf_r+0x1e4>)
 80038d6:	f7fc fc93 	bl	8000200 <memchr>
 80038da:	9a04      	ldr	r2, [sp, #16]
 80038dc:	b9d8      	cbnz	r0, 8003916 <_svfiprintf_r+0xea>
 80038de:	06d0      	lsls	r0, r2, #27
 80038e0:	bf44      	itt	mi
 80038e2:	2320      	movmi	r3, #32
 80038e4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80038e8:	0711      	lsls	r1, r2, #28
 80038ea:	bf44      	itt	mi
 80038ec:	232b      	movmi	r3, #43	@ 0x2b
 80038ee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80038f2:	f89a 3000 	ldrb.w	r3, [sl]
 80038f6:	2b2a      	cmp	r3, #42	@ 0x2a
 80038f8:	d015      	beq.n	8003926 <_svfiprintf_r+0xfa>
 80038fa:	9a07      	ldr	r2, [sp, #28]
 80038fc:	4654      	mov	r4, sl
 80038fe:	2000      	movs	r0, #0
 8003900:	f04f 0c0a 	mov.w	ip, #10
 8003904:	4621      	mov	r1, r4
 8003906:	f811 3b01 	ldrb.w	r3, [r1], #1
 800390a:	3b30      	subs	r3, #48	@ 0x30
 800390c:	2b09      	cmp	r3, #9
 800390e:	d94b      	bls.n	80039a8 <_svfiprintf_r+0x17c>
 8003910:	b1b0      	cbz	r0, 8003940 <_svfiprintf_r+0x114>
 8003912:	9207      	str	r2, [sp, #28]
 8003914:	e014      	b.n	8003940 <_svfiprintf_r+0x114>
 8003916:	eba0 0308 	sub.w	r3, r0, r8
 800391a:	fa09 f303 	lsl.w	r3, r9, r3
 800391e:	4313      	orrs	r3, r2
 8003920:	9304      	str	r3, [sp, #16]
 8003922:	46a2      	mov	sl, r4
 8003924:	e7d2      	b.n	80038cc <_svfiprintf_r+0xa0>
 8003926:	9b03      	ldr	r3, [sp, #12]
 8003928:	1d19      	adds	r1, r3, #4
 800392a:	681b      	ldr	r3, [r3, #0]
 800392c:	9103      	str	r1, [sp, #12]
 800392e:	2b00      	cmp	r3, #0
 8003930:	bfbb      	ittet	lt
 8003932:	425b      	neglt	r3, r3
 8003934:	f042 0202 	orrlt.w	r2, r2, #2
 8003938:	9307      	strge	r3, [sp, #28]
 800393a:	9307      	strlt	r3, [sp, #28]
 800393c:	bfb8      	it	lt
 800393e:	9204      	strlt	r2, [sp, #16]
 8003940:	7823      	ldrb	r3, [r4, #0]
 8003942:	2b2e      	cmp	r3, #46	@ 0x2e
 8003944:	d10a      	bne.n	800395c <_svfiprintf_r+0x130>
 8003946:	7863      	ldrb	r3, [r4, #1]
 8003948:	2b2a      	cmp	r3, #42	@ 0x2a
 800394a:	d132      	bne.n	80039b2 <_svfiprintf_r+0x186>
 800394c:	9b03      	ldr	r3, [sp, #12]
 800394e:	1d1a      	adds	r2, r3, #4
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	9203      	str	r2, [sp, #12]
 8003954:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003958:	3402      	adds	r4, #2
 800395a:	9305      	str	r3, [sp, #20]
 800395c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003a20 <_svfiprintf_r+0x1f4>
 8003960:	7821      	ldrb	r1, [r4, #0]
 8003962:	2203      	movs	r2, #3
 8003964:	4650      	mov	r0, sl
 8003966:	f7fc fc4b 	bl	8000200 <memchr>
 800396a:	b138      	cbz	r0, 800397c <_svfiprintf_r+0x150>
 800396c:	9b04      	ldr	r3, [sp, #16]
 800396e:	eba0 000a 	sub.w	r0, r0, sl
 8003972:	2240      	movs	r2, #64	@ 0x40
 8003974:	4082      	lsls	r2, r0
 8003976:	4313      	orrs	r3, r2
 8003978:	3401      	adds	r4, #1
 800397a:	9304      	str	r3, [sp, #16]
 800397c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003980:	4824      	ldr	r0, [pc, #144]	@ (8003a14 <_svfiprintf_r+0x1e8>)
 8003982:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003986:	2206      	movs	r2, #6
 8003988:	f7fc fc3a 	bl	8000200 <memchr>
 800398c:	2800      	cmp	r0, #0
 800398e:	d036      	beq.n	80039fe <_svfiprintf_r+0x1d2>
 8003990:	4b21      	ldr	r3, [pc, #132]	@ (8003a18 <_svfiprintf_r+0x1ec>)
 8003992:	bb1b      	cbnz	r3, 80039dc <_svfiprintf_r+0x1b0>
 8003994:	9b03      	ldr	r3, [sp, #12]
 8003996:	3307      	adds	r3, #7
 8003998:	f023 0307 	bic.w	r3, r3, #7
 800399c:	3308      	adds	r3, #8
 800399e:	9303      	str	r3, [sp, #12]
 80039a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80039a2:	4433      	add	r3, r6
 80039a4:	9309      	str	r3, [sp, #36]	@ 0x24
 80039a6:	e76a      	b.n	800387e <_svfiprintf_r+0x52>
 80039a8:	fb0c 3202 	mla	r2, ip, r2, r3
 80039ac:	460c      	mov	r4, r1
 80039ae:	2001      	movs	r0, #1
 80039b0:	e7a8      	b.n	8003904 <_svfiprintf_r+0xd8>
 80039b2:	2300      	movs	r3, #0
 80039b4:	3401      	adds	r4, #1
 80039b6:	9305      	str	r3, [sp, #20]
 80039b8:	4619      	mov	r1, r3
 80039ba:	f04f 0c0a 	mov.w	ip, #10
 80039be:	4620      	mov	r0, r4
 80039c0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80039c4:	3a30      	subs	r2, #48	@ 0x30
 80039c6:	2a09      	cmp	r2, #9
 80039c8:	d903      	bls.n	80039d2 <_svfiprintf_r+0x1a6>
 80039ca:	2b00      	cmp	r3, #0
 80039cc:	d0c6      	beq.n	800395c <_svfiprintf_r+0x130>
 80039ce:	9105      	str	r1, [sp, #20]
 80039d0:	e7c4      	b.n	800395c <_svfiprintf_r+0x130>
 80039d2:	fb0c 2101 	mla	r1, ip, r1, r2
 80039d6:	4604      	mov	r4, r0
 80039d8:	2301      	movs	r3, #1
 80039da:	e7f0      	b.n	80039be <_svfiprintf_r+0x192>
 80039dc:	ab03      	add	r3, sp, #12
 80039de:	9300      	str	r3, [sp, #0]
 80039e0:	462a      	mov	r2, r5
 80039e2:	4b0e      	ldr	r3, [pc, #56]	@ (8003a1c <_svfiprintf_r+0x1f0>)
 80039e4:	a904      	add	r1, sp, #16
 80039e6:	4638      	mov	r0, r7
 80039e8:	f3af 8000 	nop.w
 80039ec:	1c42      	adds	r2, r0, #1
 80039ee:	4606      	mov	r6, r0
 80039f0:	d1d6      	bne.n	80039a0 <_svfiprintf_r+0x174>
 80039f2:	89ab      	ldrh	r3, [r5, #12]
 80039f4:	065b      	lsls	r3, r3, #25
 80039f6:	f53f af2d 	bmi.w	8003854 <_svfiprintf_r+0x28>
 80039fa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80039fc:	e72c      	b.n	8003858 <_svfiprintf_r+0x2c>
 80039fe:	ab03      	add	r3, sp, #12
 8003a00:	9300      	str	r3, [sp, #0]
 8003a02:	462a      	mov	r2, r5
 8003a04:	4b05      	ldr	r3, [pc, #20]	@ (8003a1c <_svfiprintf_r+0x1f0>)
 8003a06:	a904      	add	r1, sp, #16
 8003a08:	4638      	mov	r0, r7
 8003a0a:	f000 f91b 	bl	8003c44 <_printf_i>
 8003a0e:	e7ed      	b.n	80039ec <_svfiprintf_r+0x1c0>
 8003a10:	080045c8 	.word	0x080045c8
 8003a14:	080045d2 	.word	0x080045d2
 8003a18:	00000000 	.word	0x00000000
 8003a1c:	08003775 	.word	0x08003775
 8003a20:	080045ce 	.word	0x080045ce

08003a24 <sbrk_aligned>:
 8003a24:	b570      	push	{r4, r5, r6, lr}
 8003a26:	4e0f      	ldr	r6, [pc, #60]	@ (8003a64 <sbrk_aligned+0x40>)
 8003a28:	460c      	mov	r4, r1
 8003a2a:	6831      	ldr	r1, [r6, #0]
 8003a2c:	4605      	mov	r5, r0
 8003a2e:	b911      	cbnz	r1, 8003a36 <sbrk_aligned+0x12>
 8003a30:	f000 fa7c 	bl	8003f2c <_sbrk_r>
 8003a34:	6030      	str	r0, [r6, #0]
 8003a36:	4621      	mov	r1, r4
 8003a38:	4628      	mov	r0, r5
 8003a3a:	f000 fa77 	bl	8003f2c <_sbrk_r>
 8003a3e:	1c43      	adds	r3, r0, #1
 8003a40:	d103      	bne.n	8003a4a <sbrk_aligned+0x26>
 8003a42:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8003a46:	4620      	mov	r0, r4
 8003a48:	bd70      	pop	{r4, r5, r6, pc}
 8003a4a:	1cc4      	adds	r4, r0, #3
 8003a4c:	f024 0403 	bic.w	r4, r4, #3
 8003a50:	42a0      	cmp	r0, r4
 8003a52:	d0f8      	beq.n	8003a46 <sbrk_aligned+0x22>
 8003a54:	1a21      	subs	r1, r4, r0
 8003a56:	4628      	mov	r0, r5
 8003a58:	f000 fa68 	bl	8003f2c <_sbrk_r>
 8003a5c:	3001      	adds	r0, #1
 8003a5e:	d1f2      	bne.n	8003a46 <sbrk_aligned+0x22>
 8003a60:	e7ef      	b.n	8003a42 <sbrk_aligned+0x1e>
 8003a62:	bf00      	nop
 8003a64:	200002a0 	.word	0x200002a0

08003a68 <_malloc_r>:
 8003a68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003a6c:	1ccd      	adds	r5, r1, #3
 8003a6e:	f025 0503 	bic.w	r5, r5, #3
 8003a72:	3508      	adds	r5, #8
 8003a74:	2d0c      	cmp	r5, #12
 8003a76:	bf38      	it	cc
 8003a78:	250c      	movcc	r5, #12
 8003a7a:	2d00      	cmp	r5, #0
 8003a7c:	4606      	mov	r6, r0
 8003a7e:	db01      	blt.n	8003a84 <_malloc_r+0x1c>
 8003a80:	42a9      	cmp	r1, r5
 8003a82:	d904      	bls.n	8003a8e <_malloc_r+0x26>
 8003a84:	230c      	movs	r3, #12
 8003a86:	6033      	str	r3, [r6, #0]
 8003a88:	2000      	movs	r0, #0
 8003a8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003a8e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003b64 <_malloc_r+0xfc>
 8003a92:	f000 f9f7 	bl	8003e84 <__malloc_lock>
 8003a96:	f8d8 3000 	ldr.w	r3, [r8]
 8003a9a:	461c      	mov	r4, r3
 8003a9c:	bb44      	cbnz	r4, 8003af0 <_malloc_r+0x88>
 8003a9e:	4629      	mov	r1, r5
 8003aa0:	4630      	mov	r0, r6
 8003aa2:	f7ff ffbf 	bl	8003a24 <sbrk_aligned>
 8003aa6:	1c43      	adds	r3, r0, #1
 8003aa8:	4604      	mov	r4, r0
 8003aaa:	d158      	bne.n	8003b5e <_malloc_r+0xf6>
 8003aac:	f8d8 4000 	ldr.w	r4, [r8]
 8003ab0:	4627      	mov	r7, r4
 8003ab2:	2f00      	cmp	r7, #0
 8003ab4:	d143      	bne.n	8003b3e <_malloc_r+0xd6>
 8003ab6:	2c00      	cmp	r4, #0
 8003ab8:	d04b      	beq.n	8003b52 <_malloc_r+0xea>
 8003aba:	6823      	ldr	r3, [r4, #0]
 8003abc:	4639      	mov	r1, r7
 8003abe:	4630      	mov	r0, r6
 8003ac0:	eb04 0903 	add.w	r9, r4, r3
 8003ac4:	f000 fa32 	bl	8003f2c <_sbrk_r>
 8003ac8:	4581      	cmp	r9, r0
 8003aca:	d142      	bne.n	8003b52 <_malloc_r+0xea>
 8003acc:	6821      	ldr	r1, [r4, #0]
 8003ace:	1a6d      	subs	r5, r5, r1
 8003ad0:	4629      	mov	r1, r5
 8003ad2:	4630      	mov	r0, r6
 8003ad4:	f7ff ffa6 	bl	8003a24 <sbrk_aligned>
 8003ad8:	3001      	adds	r0, #1
 8003ada:	d03a      	beq.n	8003b52 <_malloc_r+0xea>
 8003adc:	6823      	ldr	r3, [r4, #0]
 8003ade:	442b      	add	r3, r5
 8003ae0:	6023      	str	r3, [r4, #0]
 8003ae2:	f8d8 3000 	ldr.w	r3, [r8]
 8003ae6:	685a      	ldr	r2, [r3, #4]
 8003ae8:	bb62      	cbnz	r2, 8003b44 <_malloc_r+0xdc>
 8003aea:	f8c8 7000 	str.w	r7, [r8]
 8003aee:	e00f      	b.n	8003b10 <_malloc_r+0xa8>
 8003af0:	6822      	ldr	r2, [r4, #0]
 8003af2:	1b52      	subs	r2, r2, r5
 8003af4:	d420      	bmi.n	8003b38 <_malloc_r+0xd0>
 8003af6:	2a0b      	cmp	r2, #11
 8003af8:	d917      	bls.n	8003b2a <_malloc_r+0xc2>
 8003afa:	1961      	adds	r1, r4, r5
 8003afc:	42a3      	cmp	r3, r4
 8003afe:	6025      	str	r5, [r4, #0]
 8003b00:	bf18      	it	ne
 8003b02:	6059      	strne	r1, [r3, #4]
 8003b04:	6863      	ldr	r3, [r4, #4]
 8003b06:	bf08      	it	eq
 8003b08:	f8c8 1000 	streq.w	r1, [r8]
 8003b0c:	5162      	str	r2, [r4, r5]
 8003b0e:	604b      	str	r3, [r1, #4]
 8003b10:	4630      	mov	r0, r6
 8003b12:	f000 f9bd 	bl	8003e90 <__malloc_unlock>
 8003b16:	f104 000b 	add.w	r0, r4, #11
 8003b1a:	1d23      	adds	r3, r4, #4
 8003b1c:	f020 0007 	bic.w	r0, r0, #7
 8003b20:	1ac2      	subs	r2, r0, r3
 8003b22:	bf1c      	itt	ne
 8003b24:	1a1b      	subne	r3, r3, r0
 8003b26:	50a3      	strne	r3, [r4, r2]
 8003b28:	e7af      	b.n	8003a8a <_malloc_r+0x22>
 8003b2a:	6862      	ldr	r2, [r4, #4]
 8003b2c:	42a3      	cmp	r3, r4
 8003b2e:	bf0c      	ite	eq
 8003b30:	f8c8 2000 	streq.w	r2, [r8]
 8003b34:	605a      	strne	r2, [r3, #4]
 8003b36:	e7eb      	b.n	8003b10 <_malloc_r+0xa8>
 8003b38:	4623      	mov	r3, r4
 8003b3a:	6864      	ldr	r4, [r4, #4]
 8003b3c:	e7ae      	b.n	8003a9c <_malloc_r+0x34>
 8003b3e:	463c      	mov	r4, r7
 8003b40:	687f      	ldr	r7, [r7, #4]
 8003b42:	e7b6      	b.n	8003ab2 <_malloc_r+0x4a>
 8003b44:	461a      	mov	r2, r3
 8003b46:	685b      	ldr	r3, [r3, #4]
 8003b48:	42a3      	cmp	r3, r4
 8003b4a:	d1fb      	bne.n	8003b44 <_malloc_r+0xdc>
 8003b4c:	2300      	movs	r3, #0
 8003b4e:	6053      	str	r3, [r2, #4]
 8003b50:	e7de      	b.n	8003b10 <_malloc_r+0xa8>
 8003b52:	230c      	movs	r3, #12
 8003b54:	6033      	str	r3, [r6, #0]
 8003b56:	4630      	mov	r0, r6
 8003b58:	f000 f99a 	bl	8003e90 <__malloc_unlock>
 8003b5c:	e794      	b.n	8003a88 <_malloc_r+0x20>
 8003b5e:	6005      	str	r5, [r0, #0]
 8003b60:	e7d6      	b.n	8003b10 <_malloc_r+0xa8>
 8003b62:	bf00      	nop
 8003b64:	200002a4 	.word	0x200002a4

08003b68 <_printf_common>:
 8003b68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b6c:	4616      	mov	r6, r2
 8003b6e:	4698      	mov	r8, r3
 8003b70:	688a      	ldr	r2, [r1, #8]
 8003b72:	690b      	ldr	r3, [r1, #16]
 8003b74:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8003b78:	4293      	cmp	r3, r2
 8003b7a:	bfb8      	it	lt
 8003b7c:	4613      	movlt	r3, r2
 8003b7e:	6033      	str	r3, [r6, #0]
 8003b80:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8003b84:	4607      	mov	r7, r0
 8003b86:	460c      	mov	r4, r1
 8003b88:	b10a      	cbz	r2, 8003b8e <_printf_common+0x26>
 8003b8a:	3301      	adds	r3, #1
 8003b8c:	6033      	str	r3, [r6, #0]
 8003b8e:	6823      	ldr	r3, [r4, #0]
 8003b90:	0699      	lsls	r1, r3, #26
 8003b92:	bf42      	ittt	mi
 8003b94:	6833      	ldrmi	r3, [r6, #0]
 8003b96:	3302      	addmi	r3, #2
 8003b98:	6033      	strmi	r3, [r6, #0]
 8003b9a:	6825      	ldr	r5, [r4, #0]
 8003b9c:	f015 0506 	ands.w	r5, r5, #6
 8003ba0:	d106      	bne.n	8003bb0 <_printf_common+0x48>
 8003ba2:	f104 0a19 	add.w	sl, r4, #25
 8003ba6:	68e3      	ldr	r3, [r4, #12]
 8003ba8:	6832      	ldr	r2, [r6, #0]
 8003baa:	1a9b      	subs	r3, r3, r2
 8003bac:	42ab      	cmp	r3, r5
 8003bae:	dc26      	bgt.n	8003bfe <_printf_common+0x96>
 8003bb0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8003bb4:	6822      	ldr	r2, [r4, #0]
 8003bb6:	3b00      	subs	r3, #0
 8003bb8:	bf18      	it	ne
 8003bba:	2301      	movne	r3, #1
 8003bbc:	0692      	lsls	r2, r2, #26
 8003bbe:	d42b      	bmi.n	8003c18 <_printf_common+0xb0>
 8003bc0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8003bc4:	4641      	mov	r1, r8
 8003bc6:	4638      	mov	r0, r7
 8003bc8:	47c8      	blx	r9
 8003bca:	3001      	adds	r0, #1
 8003bcc:	d01e      	beq.n	8003c0c <_printf_common+0xa4>
 8003bce:	6823      	ldr	r3, [r4, #0]
 8003bd0:	6922      	ldr	r2, [r4, #16]
 8003bd2:	f003 0306 	and.w	r3, r3, #6
 8003bd6:	2b04      	cmp	r3, #4
 8003bd8:	bf02      	ittt	eq
 8003bda:	68e5      	ldreq	r5, [r4, #12]
 8003bdc:	6833      	ldreq	r3, [r6, #0]
 8003bde:	1aed      	subeq	r5, r5, r3
 8003be0:	68a3      	ldr	r3, [r4, #8]
 8003be2:	bf0c      	ite	eq
 8003be4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003be8:	2500      	movne	r5, #0
 8003bea:	4293      	cmp	r3, r2
 8003bec:	bfc4      	itt	gt
 8003bee:	1a9b      	subgt	r3, r3, r2
 8003bf0:	18ed      	addgt	r5, r5, r3
 8003bf2:	2600      	movs	r6, #0
 8003bf4:	341a      	adds	r4, #26
 8003bf6:	42b5      	cmp	r5, r6
 8003bf8:	d11a      	bne.n	8003c30 <_printf_common+0xc8>
 8003bfa:	2000      	movs	r0, #0
 8003bfc:	e008      	b.n	8003c10 <_printf_common+0xa8>
 8003bfe:	2301      	movs	r3, #1
 8003c00:	4652      	mov	r2, sl
 8003c02:	4641      	mov	r1, r8
 8003c04:	4638      	mov	r0, r7
 8003c06:	47c8      	blx	r9
 8003c08:	3001      	adds	r0, #1
 8003c0a:	d103      	bne.n	8003c14 <_printf_common+0xac>
 8003c0c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003c10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c14:	3501      	adds	r5, #1
 8003c16:	e7c6      	b.n	8003ba6 <_printf_common+0x3e>
 8003c18:	18e1      	adds	r1, r4, r3
 8003c1a:	1c5a      	adds	r2, r3, #1
 8003c1c:	2030      	movs	r0, #48	@ 0x30
 8003c1e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8003c22:	4422      	add	r2, r4
 8003c24:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8003c28:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8003c2c:	3302      	adds	r3, #2
 8003c2e:	e7c7      	b.n	8003bc0 <_printf_common+0x58>
 8003c30:	2301      	movs	r3, #1
 8003c32:	4622      	mov	r2, r4
 8003c34:	4641      	mov	r1, r8
 8003c36:	4638      	mov	r0, r7
 8003c38:	47c8      	blx	r9
 8003c3a:	3001      	adds	r0, #1
 8003c3c:	d0e6      	beq.n	8003c0c <_printf_common+0xa4>
 8003c3e:	3601      	adds	r6, #1
 8003c40:	e7d9      	b.n	8003bf6 <_printf_common+0x8e>
	...

08003c44 <_printf_i>:
 8003c44:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003c48:	7e0f      	ldrb	r7, [r1, #24]
 8003c4a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8003c4c:	2f78      	cmp	r7, #120	@ 0x78
 8003c4e:	4691      	mov	r9, r2
 8003c50:	4680      	mov	r8, r0
 8003c52:	460c      	mov	r4, r1
 8003c54:	469a      	mov	sl, r3
 8003c56:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8003c5a:	d807      	bhi.n	8003c6c <_printf_i+0x28>
 8003c5c:	2f62      	cmp	r7, #98	@ 0x62
 8003c5e:	d80a      	bhi.n	8003c76 <_printf_i+0x32>
 8003c60:	2f00      	cmp	r7, #0
 8003c62:	f000 80d2 	beq.w	8003e0a <_printf_i+0x1c6>
 8003c66:	2f58      	cmp	r7, #88	@ 0x58
 8003c68:	f000 80b9 	beq.w	8003dde <_printf_i+0x19a>
 8003c6c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003c70:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8003c74:	e03a      	b.n	8003cec <_printf_i+0xa8>
 8003c76:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8003c7a:	2b15      	cmp	r3, #21
 8003c7c:	d8f6      	bhi.n	8003c6c <_printf_i+0x28>
 8003c7e:	a101      	add	r1, pc, #4	@ (adr r1, 8003c84 <_printf_i+0x40>)
 8003c80:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003c84:	08003cdd 	.word	0x08003cdd
 8003c88:	08003cf1 	.word	0x08003cf1
 8003c8c:	08003c6d 	.word	0x08003c6d
 8003c90:	08003c6d 	.word	0x08003c6d
 8003c94:	08003c6d 	.word	0x08003c6d
 8003c98:	08003c6d 	.word	0x08003c6d
 8003c9c:	08003cf1 	.word	0x08003cf1
 8003ca0:	08003c6d 	.word	0x08003c6d
 8003ca4:	08003c6d 	.word	0x08003c6d
 8003ca8:	08003c6d 	.word	0x08003c6d
 8003cac:	08003c6d 	.word	0x08003c6d
 8003cb0:	08003df1 	.word	0x08003df1
 8003cb4:	08003d1b 	.word	0x08003d1b
 8003cb8:	08003dab 	.word	0x08003dab
 8003cbc:	08003c6d 	.word	0x08003c6d
 8003cc0:	08003c6d 	.word	0x08003c6d
 8003cc4:	08003e13 	.word	0x08003e13
 8003cc8:	08003c6d 	.word	0x08003c6d
 8003ccc:	08003d1b 	.word	0x08003d1b
 8003cd0:	08003c6d 	.word	0x08003c6d
 8003cd4:	08003c6d 	.word	0x08003c6d
 8003cd8:	08003db3 	.word	0x08003db3
 8003cdc:	6833      	ldr	r3, [r6, #0]
 8003cde:	1d1a      	adds	r2, r3, #4
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	6032      	str	r2, [r6, #0]
 8003ce4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003ce8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8003cec:	2301      	movs	r3, #1
 8003cee:	e09d      	b.n	8003e2c <_printf_i+0x1e8>
 8003cf0:	6833      	ldr	r3, [r6, #0]
 8003cf2:	6820      	ldr	r0, [r4, #0]
 8003cf4:	1d19      	adds	r1, r3, #4
 8003cf6:	6031      	str	r1, [r6, #0]
 8003cf8:	0606      	lsls	r6, r0, #24
 8003cfa:	d501      	bpl.n	8003d00 <_printf_i+0xbc>
 8003cfc:	681d      	ldr	r5, [r3, #0]
 8003cfe:	e003      	b.n	8003d08 <_printf_i+0xc4>
 8003d00:	0645      	lsls	r5, r0, #25
 8003d02:	d5fb      	bpl.n	8003cfc <_printf_i+0xb8>
 8003d04:	f9b3 5000 	ldrsh.w	r5, [r3]
 8003d08:	2d00      	cmp	r5, #0
 8003d0a:	da03      	bge.n	8003d14 <_printf_i+0xd0>
 8003d0c:	232d      	movs	r3, #45	@ 0x2d
 8003d0e:	426d      	negs	r5, r5
 8003d10:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003d14:	4859      	ldr	r0, [pc, #356]	@ (8003e7c <_printf_i+0x238>)
 8003d16:	230a      	movs	r3, #10
 8003d18:	e011      	b.n	8003d3e <_printf_i+0xfa>
 8003d1a:	6821      	ldr	r1, [r4, #0]
 8003d1c:	6833      	ldr	r3, [r6, #0]
 8003d1e:	0608      	lsls	r0, r1, #24
 8003d20:	f853 5b04 	ldr.w	r5, [r3], #4
 8003d24:	d402      	bmi.n	8003d2c <_printf_i+0xe8>
 8003d26:	0649      	lsls	r1, r1, #25
 8003d28:	bf48      	it	mi
 8003d2a:	b2ad      	uxthmi	r5, r5
 8003d2c:	2f6f      	cmp	r7, #111	@ 0x6f
 8003d2e:	4853      	ldr	r0, [pc, #332]	@ (8003e7c <_printf_i+0x238>)
 8003d30:	6033      	str	r3, [r6, #0]
 8003d32:	bf14      	ite	ne
 8003d34:	230a      	movne	r3, #10
 8003d36:	2308      	moveq	r3, #8
 8003d38:	2100      	movs	r1, #0
 8003d3a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8003d3e:	6866      	ldr	r6, [r4, #4]
 8003d40:	60a6      	str	r6, [r4, #8]
 8003d42:	2e00      	cmp	r6, #0
 8003d44:	bfa2      	ittt	ge
 8003d46:	6821      	ldrge	r1, [r4, #0]
 8003d48:	f021 0104 	bicge.w	r1, r1, #4
 8003d4c:	6021      	strge	r1, [r4, #0]
 8003d4e:	b90d      	cbnz	r5, 8003d54 <_printf_i+0x110>
 8003d50:	2e00      	cmp	r6, #0
 8003d52:	d04b      	beq.n	8003dec <_printf_i+0x1a8>
 8003d54:	4616      	mov	r6, r2
 8003d56:	fbb5 f1f3 	udiv	r1, r5, r3
 8003d5a:	fb03 5711 	mls	r7, r3, r1, r5
 8003d5e:	5dc7      	ldrb	r7, [r0, r7]
 8003d60:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8003d64:	462f      	mov	r7, r5
 8003d66:	42bb      	cmp	r3, r7
 8003d68:	460d      	mov	r5, r1
 8003d6a:	d9f4      	bls.n	8003d56 <_printf_i+0x112>
 8003d6c:	2b08      	cmp	r3, #8
 8003d6e:	d10b      	bne.n	8003d88 <_printf_i+0x144>
 8003d70:	6823      	ldr	r3, [r4, #0]
 8003d72:	07df      	lsls	r7, r3, #31
 8003d74:	d508      	bpl.n	8003d88 <_printf_i+0x144>
 8003d76:	6923      	ldr	r3, [r4, #16]
 8003d78:	6861      	ldr	r1, [r4, #4]
 8003d7a:	4299      	cmp	r1, r3
 8003d7c:	bfde      	ittt	le
 8003d7e:	2330      	movle	r3, #48	@ 0x30
 8003d80:	f806 3c01 	strble.w	r3, [r6, #-1]
 8003d84:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8003d88:	1b92      	subs	r2, r2, r6
 8003d8a:	6122      	str	r2, [r4, #16]
 8003d8c:	f8cd a000 	str.w	sl, [sp]
 8003d90:	464b      	mov	r3, r9
 8003d92:	aa03      	add	r2, sp, #12
 8003d94:	4621      	mov	r1, r4
 8003d96:	4640      	mov	r0, r8
 8003d98:	f7ff fee6 	bl	8003b68 <_printf_common>
 8003d9c:	3001      	adds	r0, #1
 8003d9e:	d14a      	bne.n	8003e36 <_printf_i+0x1f2>
 8003da0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003da4:	b004      	add	sp, #16
 8003da6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003daa:	6823      	ldr	r3, [r4, #0]
 8003dac:	f043 0320 	orr.w	r3, r3, #32
 8003db0:	6023      	str	r3, [r4, #0]
 8003db2:	4833      	ldr	r0, [pc, #204]	@ (8003e80 <_printf_i+0x23c>)
 8003db4:	2778      	movs	r7, #120	@ 0x78
 8003db6:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8003dba:	6823      	ldr	r3, [r4, #0]
 8003dbc:	6831      	ldr	r1, [r6, #0]
 8003dbe:	061f      	lsls	r7, r3, #24
 8003dc0:	f851 5b04 	ldr.w	r5, [r1], #4
 8003dc4:	d402      	bmi.n	8003dcc <_printf_i+0x188>
 8003dc6:	065f      	lsls	r7, r3, #25
 8003dc8:	bf48      	it	mi
 8003dca:	b2ad      	uxthmi	r5, r5
 8003dcc:	6031      	str	r1, [r6, #0]
 8003dce:	07d9      	lsls	r1, r3, #31
 8003dd0:	bf44      	itt	mi
 8003dd2:	f043 0320 	orrmi.w	r3, r3, #32
 8003dd6:	6023      	strmi	r3, [r4, #0]
 8003dd8:	b11d      	cbz	r5, 8003de2 <_printf_i+0x19e>
 8003dda:	2310      	movs	r3, #16
 8003ddc:	e7ac      	b.n	8003d38 <_printf_i+0xf4>
 8003dde:	4827      	ldr	r0, [pc, #156]	@ (8003e7c <_printf_i+0x238>)
 8003de0:	e7e9      	b.n	8003db6 <_printf_i+0x172>
 8003de2:	6823      	ldr	r3, [r4, #0]
 8003de4:	f023 0320 	bic.w	r3, r3, #32
 8003de8:	6023      	str	r3, [r4, #0]
 8003dea:	e7f6      	b.n	8003dda <_printf_i+0x196>
 8003dec:	4616      	mov	r6, r2
 8003dee:	e7bd      	b.n	8003d6c <_printf_i+0x128>
 8003df0:	6833      	ldr	r3, [r6, #0]
 8003df2:	6825      	ldr	r5, [r4, #0]
 8003df4:	6961      	ldr	r1, [r4, #20]
 8003df6:	1d18      	adds	r0, r3, #4
 8003df8:	6030      	str	r0, [r6, #0]
 8003dfa:	062e      	lsls	r6, r5, #24
 8003dfc:	681b      	ldr	r3, [r3, #0]
 8003dfe:	d501      	bpl.n	8003e04 <_printf_i+0x1c0>
 8003e00:	6019      	str	r1, [r3, #0]
 8003e02:	e002      	b.n	8003e0a <_printf_i+0x1c6>
 8003e04:	0668      	lsls	r0, r5, #25
 8003e06:	d5fb      	bpl.n	8003e00 <_printf_i+0x1bc>
 8003e08:	8019      	strh	r1, [r3, #0]
 8003e0a:	2300      	movs	r3, #0
 8003e0c:	6123      	str	r3, [r4, #16]
 8003e0e:	4616      	mov	r6, r2
 8003e10:	e7bc      	b.n	8003d8c <_printf_i+0x148>
 8003e12:	6833      	ldr	r3, [r6, #0]
 8003e14:	1d1a      	adds	r2, r3, #4
 8003e16:	6032      	str	r2, [r6, #0]
 8003e18:	681e      	ldr	r6, [r3, #0]
 8003e1a:	6862      	ldr	r2, [r4, #4]
 8003e1c:	2100      	movs	r1, #0
 8003e1e:	4630      	mov	r0, r6
 8003e20:	f7fc f9ee 	bl	8000200 <memchr>
 8003e24:	b108      	cbz	r0, 8003e2a <_printf_i+0x1e6>
 8003e26:	1b80      	subs	r0, r0, r6
 8003e28:	6060      	str	r0, [r4, #4]
 8003e2a:	6863      	ldr	r3, [r4, #4]
 8003e2c:	6123      	str	r3, [r4, #16]
 8003e2e:	2300      	movs	r3, #0
 8003e30:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003e34:	e7aa      	b.n	8003d8c <_printf_i+0x148>
 8003e36:	6923      	ldr	r3, [r4, #16]
 8003e38:	4632      	mov	r2, r6
 8003e3a:	4649      	mov	r1, r9
 8003e3c:	4640      	mov	r0, r8
 8003e3e:	47d0      	blx	sl
 8003e40:	3001      	adds	r0, #1
 8003e42:	d0ad      	beq.n	8003da0 <_printf_i+0x15c>
 8003e44:	6823      	ldr	r3, [r4, #0]
 8003e46:	079b      	lsls	r3, r3, #30
 8003e48:	d413      	bmi.n	8003e72 <_printf_i+0x22e>
 8003e4a:	68e0      	ldr	r0, [r4, #12]
 8003e4c:	9b03      	ldr	r3, [sp, #12]
 8003e4e:	4298      	cmp	r0, r3
 8003e50:	bfb8      	it	lt
 8003e52:	4618      	movlt	r0, r3
 8003e54:	e7a6      	b.n	8003da4 <_printf_i+0x160>
 8003e56:	2301      	movs	r3, #1
 8003e58:	4632      	mov	r2, r6
 8003e5a:	4649      	mov	r1, r9
 8003e5c:	4640      	mov	r0, r8
 8003e5e:	47d0      	blx	sl
 8003e60:	3001      	adds	r0, #1
 8003e62:	d09d      	beq.n	8003da0 <_printf_i+0x15c>
 8003e64:	3501      	adds	r5, #1
 8003e66:	68e3      	ldr	r3, [r4, #12]
 8003e68:	9903      	ldr	r1, [sp, #12]
 8003e6a:	1a5b      	subs	r3, r3, r1
 8003e6c:	42ab      	cmp	r3, r5
 8003e6e:	dcf2      	bgt.n	8003e56 <_printf_i+0x212>
 8003e70:	e7eb      	b.n	8003e4a <_printf_i+0x206>
 8003e72:	2500      	movs	r5, #0
 8003e74:	f104 0619 	add.w	r6, r4, #25
 8003e78:	e7f5      	b.n	8003e66 <_printf_i+0x222>
 8003e7a:	bf00      	nop
 8003e7c:	080045d9 	.word	0x080045d9
 8003e80:	080045ea 	.word	0x080045ea

08003e84 <__malloc_lock>:
 8003e84:	4801      	ldr	r0, [pc, #4]	@ (8003e8c <__malloc_lock+0x8>)
 8003e86:	f7ff bc65 	b.w	8003754 <__retarget_lock_acquire_recursive>
 8003e8a:	bf00      	nop
 8003e8c:	2000029c 	.word	0x2000029c

08003e90 <__malloc_unlock>:
 8003e90:	4801      	ldr	r0, [pc, #4]	@ (8003e98 <__malloc_unlock+0x8>)
 8003e92:	f7ff bc60 	b.w	8003756 <__retarget_lock_release_recursive>
 8003e96:	bf00      	nop
 8003e98:	2000029c 	.word	0x2000029c

08003e9c <_realloc_r>:
 8003e9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ea0:	4680      	mov	r8, r0
 8003ea2:	4615      	mov	r5, r2
 8003ea4:	460c      	mov	r4, r1
 8003ea6:	b921      	cbnz	r1, 8003eb2 <_realloc_r+0x16>
 8003ea8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003eac:	4611      	mov	r1, r2
 8003eae:	f7ff bddb 	b.w	8003a68 <_malloc_r>
 8003eb2:	b92a      	cbnz	r2, 8003ec0 <_realloc_r+0x24>
 8003eb4:	f000 f84a 	bl	8003f4c <_free_r>
 8003eb8:	2400      	movs	r4, #0
 8003eba:	4620      	mov	r0, r4
 8003ebc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003ec0:	f000 f88e 	bl	8003fe0 <_malloc_usable_size_r>
 8003ec4:	4285      	cmp	r5, r0
 8003ec6:	4606      	mov	r6, r0
 8003ec8:	d802      	bhi.n	8003ed0 <_realloc_r+0x34>
 8003eca:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8003ece:	d8f4      	bhi.n	8003eba <_realloc_r+0x1e>
 8003ed0:	4629      	mov	r1, r5
 8003ed2:	4640      	mov	r0, r8
 8003ed4:	f7ff fdc8 	bl	8003a68 <_malloc_r>
 8003ed8:	4607      	mov	r7, r0
 8003eda:	2800      	cmp	r0, #0
 8003edc:	d0ec      	beq.n	8003eb8 <_realloc_r+0x1c>
 8003ede:	42b5      	cmp	r5, r6
 8003ee0:	462a      	mov	r2, r5
 8003ee2:	4621      	mov	r1, r4
 8003ee4:	bf28      	it	cs
 8003ee6:	4632      	movcs	r2, r6
 8003ee8:	f7ff fc36 	bl	8003758 <memcpy>
 8003eec:	4621      	mov	r1, r4
 8003eee:	4640      	mov	r0, r8
 8003ef0:	f000 f82c 	bl	8003f4c <_free_r>
 8003ef4:	463c      	mov	r4, r7
 8003ef6:	e7e0      	b.n	8003eba <_realloc_r+0x1e>

08003ef8 <memmove>:
 8003ef8:	4288      	cmp	r0, r1
 8003efa:	b510      	push	{r4, lr}
 8003efc:	eb01 0402 	add.w	r4, r1, r2
 8003f00:	d902      	bls.n	8003f08 <memmove+0x10>
 8003f02:	4284      	cmp	r4, r0
 8003f04:	4623      	mov	r3, r4
 8003f06:	d807      	bhi.n	8003f18 <memmove+0x20>
 8003f08:	1e43      	subs	r3, r0, #1
 8003f0a:	42a1      	cmp	r1, r4
 8003f0c:	d008      	beq.n	8003f20 <memmove+0x28>
 8003f0e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003f12:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003f16:	e7f8      	b.n	8003f0a <memmove+0x12>
 8003f18:	4402      	add	r2, r0
 8003f1a:	4601      	mov	r1, r0
 8003f1c:	428a      	cmp	r2, r1
 8003f1e:	d100      	bne.n	8003f22 <memmove+0x2a>
 8003f20:	bd10      	pop	{r4, pc}
 8003f22:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003f26:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003f2a:	e7f7      	b.n	8003f1c <memmove+0x24>

08003f2c <_sbrk_r>:
 8003f2c:	b538      	push	{r3, r4, r5, lr}
 8003f2e:	4d06      	ldr	r5, [pc, #24]	@ (8003f48 <_sbrk_r+0x1c>)
 8003f30:	2300      	movs	r3, #0
 8003f32:	4604      	mov	r4, r0
 8003f34:	4608      	mov	r0, r1
 8003f36:	602b      	str	r3, [r5, #0]
 8003f38:	f7fd fa22 	bl	8001380 <_sbrk>
 8003f3c:	1c43      	adds	r3, r0, #1
 8003f3e:	d102      	bne.n	8003f46 <_sbrk_r+0x1a>
 8003f40:	682b      	ldr	r3, [r5, #0]
 8003f42:	b103      	cbz	r3, 8003f46 <_sbrk_r+0x1a>
 8003f44:	6023      	str	r3, [r4, #0]
 8003f46:	bd38      	pop	{r3, r4, r5, pc}
 8003f48:	200002a8 	.word	0x200002a8

08003f4c <_free_r>:
 8003f4c:	b538      	push	{r3, r4, r5, lr}
 8003f4e:	4605      	mov	r5, r0
 8003f50:	2900      	cmp	r1, #0
 8003f52:	d041      	beq.n	8003fd8 <_free_r+0x8c>
 8003f54:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003f58:	1f0c      	subs	r4, r1, #4
 8003f5a:	2b00      	cmp	r3, #0
 8003f5c:	bfb8      	it	lt
 8003f5e:	18e4      	addlt	r4, r4, r3
 8003f60:	f7ff ff90 	bl	8003e84 <__malloc_lock>
 8003f64:	4a1d      	ldr	r2, [pc, #116]	@ (8003fdc <_free_r+0x90>)
 8003f66:	6813      	ldr	r3, [r2, #0]
 8003f68:	b933      	cbnz	r3, 8003f78 <_free_r+0x2c>
 8003f6a:	6063      	str	r3, [r4, #4]
 8003f6c:	6014      	str	r4, [r2, #0]
 8003f6e:	4628      	mov	r0, r5
 8003f70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003f74:	f7ff bf8c 	b.w	8003e90 <__malloc_unlock>
 8003f78:	42a3      	cmp	r3, r4
 8003f7a:	d908      	bls.n	8003f8e <_free_r+0x42>
 8003f7c:	6820      	ldr	r0, [r4, #0]
 8003f7e:	1821      	adds	r1, r4, r0
 8003f80:	428b      	cmp	r3, r1
 8003f82:	bf01      	itttt	eq
 8003f84:	6819      	ldreq	r1, [r3, #0]
 8003f86:	685b      	ldreq	r3, [r3, #4]
 8003f88:	1809      	addeq	r1, r1, r0
 8003f8a:	6021      	streq	r1, [r4, #0]
 8003f8c:	e7ed      	b.n	8003f6a <_free_r+0x1e>
 8003f8e:	461a      	mov	r2, r3
 8003f90:	685b      	ldr	r3, [r3, #4]
 8003f92:	b10b      	cbz	r3, 8003f98 <_free_r+0x4c>
 8003f94:	42a3      	cmp	r3, r4
 8003f96:	d9fa      	bls.n	8003f8e <_free_r+0x42>
 8003f98:	6811      	ldr	r1, [r2, #0]
 8003f9a:	1850      	adds	r0, r2, r1
 8003f9c:	42a0      	cmp	r0, r4
 8003f9e:	d10b      	bne.n	8003fb8 <_free_r+0x6c>
 8003fa0:	6820      	ldr	r0, [r4, #0]
 8003fa2:	4401      	add	r1, r0
 8003fa4:	1850      	adds	r0, r2, r1
 8003fa6:	4283      	cmp	r3, r0
 8003fa8:	6011      	str	r1, [r2, #0]
 8003faa:	d1e0      	bne.n	8003f6e <_free_r+0x22>
 8003fac:	6818      	ldr	r0, [r3, #0]
 8003fae:	685b      	ldr	r3, [r3, #4]
 8003fb0:	6053      	str	r3, [r2, #4]
 8003fb2:	4408      	add	r0, r1
 8003fb4:	6010      	str	r0, [r2, #0]
 8003fb6:	e7da      	b.n	8003f6e <_free_r+0x22>
 8003fb8:	d902      	bls.n	8003fc0 <_free_r+0x74>
 8003fba:	230c      	movs	r3, #12
 8003fbc:	602b      	str	r3, [r5, #0]
 8003fbe:	e7d6      	b.n	8003f6e <_free_r+0x22>
 8003fc0:	6820      	ldr	r0, [r4, #0]
 8003fc2:	1821      	adds	r1, r4, r0
 8003fc4:	428b      	cmp	r3, r1
 8003fc6:	bf04      	itt	eq
 8003fc8:	6819      	ldreq	r1, [r3, #0]
 8003fca:	685b      	ldreq	r3, [r3, #4]
 8003fcc:	6063      	str	r3, [r4, #4]
 8003fce:	bf04      	itt	eq
 8003fd0:	1809      	addeq	r1, r1, r0
 8003fd2:	6021      	streq	r1, [r4, #0]
 8003fd4:	6054      	str	r4, [r2, #4]
 8003fd6:	e7ca      	b.n	8003f6e <_free_r+0x22>
 8003fd8:	bd38      	pop	{r3, r4, r5, pc}
 8003fda:	bf00      	nop
 8003fdc:	200002a4 	.word	0x200002a4

08003fe0 <_malloc_usable_size_r>:
 8003fe0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003fe4:	1f18      	subs	r0, r3, #4
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	bfbc      	itt	lt
 8003fea:	580b      	ldrlt	r3, [r1, r0]
 8003fec:	18c0      	addlt	r0, r0, r3
 8003fee:	4770      	bx	lr

08003ff0 <_init>:
 8003ff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003ff2:	bf00      	nop
 8003ff4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003ff6:	bc08      	pop	{r3}
 8003ff8:	469e      	mov	lr, r3
 8003ffa:	4770      	bx	lr

08003ffc <_fini>:
 8003ffc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003ffe:	bf00      	nop
 8004000:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004002:	bc08      	pop	{r3}
 8004004:	469e      	mov	lr, r3
 8004006:	4770      	bx	lr
